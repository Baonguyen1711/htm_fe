{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\components\\\\PlayerAnswer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { usePlayer } from '../context/playerContext';\nimport { listenToBroadcastedAnswer } from '../services/firebaseServices';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerAnswer = () => {\n  _s();\n  const {\n    playersArray,\n    playerFlashes,\n    roomId,\n    triggerPlayerFlash,\n    scoreList,\n    setScoreList\n  } = usePlayer();\n  const [answerList, setAnswerList] = useState([]);\n  const spots = [1, 2, 3, 4];\n  useEffect(() => {\n    const unsubscribeBroadcastedAnswer = listenToBroadcastedAnswer(roomId, answerList => {\n      setAnswerList(answerList);\n      console.log(\"answerList\", answerList);\n\n      // setTimeout(()=>{\n      //     setAnswerList([])\n      // },3000)\n    });\n    return () => {\n      unsubscribeBroadcastedAnswer();\n    };\n  }, []);\n\n  // Detect changes in scoreList and trigger flash effect\n  useEffect(() => {\n    if (playerFlashes && playerFlashes.length > 0) {\n      playerFlashes.forEach(player => {\n        const spotIndex = index; // Get player spot index\n        triggerPlayerFlash(spotIndex, score.isCorrect); // Flash based on correctness\n      });\n    }\n  }, [scoreList]); // Run effect when scoreList updates\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-around mt-4\",\n      children: spots.map(spotNumber => {\n        const storedPlayers = localStorage.getItem(\"playerList\");\n        {\n          console.log(\"storedPlayers\", storedPlayers);\n        }\n        const array = playersArray !== null ? playersArray : storedPlayers ? JSON.parse(storedPlayers) : [];\n        {\n          console.log(\"array\", array);\n        }\n        const player = array.find(p => parseInt(p.stt) === spotNumber);\n        const answer = Array.isArray(answerList) && answerList.length != 0 ? answerList.find(answer => parseInt(answer.stt) === spotNumber) : null;\n        if (player) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex flex-col items-center ${playerFlashes[spotNumber]}`,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: player.avatar,\n              alt: \"Player\",\n              className: \"w-16 h-16 rounded-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-white mt-2 \",\n              children: answer && answer.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-white\",\n              children: `player_${player.stt}: ${player.userName}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this)]\n          }, spotNumber, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(PlayerAnswer, \"V8Q85VwxJ97fCNDPvcDkeg62mEk=\", false, function () {\n  return [usePlayer];\n});\n_c = PlayerAnswer;\nexport default PlayerAnswer;\nvar _c;\n$RefreshReg$(_c, \"PlayerAnswer\");","map":{"version":3,"names":["React","useEffect","useState","usePlayer","listenToBroadcastedAnswer","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerAnswer","_s","playersArray","playerFlashes","roomId","triggerPlayerFlash","scoreList","setScoreList","answerList","setAnswerList","spots","unsubscribeBroadcastedAnswer","console","log","length","forEach","player","spotIndex","index","score","isCorrect","children","className","map","spotNumber","storedPlayers","localStorage","getItem","array","JSON","parse","find","p","parseInt","stt","answer","Array","isArray","src","avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","userName","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/components/PlayerAnswer.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { usePlayer } from '../context/playerContext';\r\nimport { User, Answer, Score } from '../type';\r\nimport { listenToBroadcastedAnswer } from '../services/firebaseServices';\r\n\r\n\r\n\r\nconst PlayerAnswer: React.FC = () => {\r\n    const { playersArray, playerFlashes, roomId, triggerPlayerFlash, scoreList, setScoreList } = usePlayer()\r\n    const [answerList, setAnswerList] = useState<Answer[]>([])\r\n    const spots = [1, 2, 3, 4]\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribeBroadcastedAnswer = listenToBroadcastedAnswer(roomId, (answerList) => {\r\n            setAnswerList(answerList)\r\n            console.log(\"answerList\", answerList)\r\n\r\n            // setTimeout(()=>{\r\n            //     setAnswerList([])\r\n            // },3000)\r\n        })\r\n\r\n        return () => {\r\n            unsubscribeBroadcastedAnswer();\r\n        };\r\n    }, []);\r\n\r\n        // Detect changes in scoreList and trigger flash effect\r\n        useEffect(() => {\r\n            if (playerFlashes && playerFlashes.length > 0) {\r\n                playerFlashes.forEach((player: Score) => {\r\n                    const spotIndex = index // Get player spot index\r\n                    triggerPlayerFlash(spotIndex, score.isCorrect); // Flash based on correctness\r\n                });\r\n            }\r\n        }, [scoreList]); // Run effect when scoreList updates\r\n    return (\r\n        <>\r\n\r\n            <div className=\"flex justify-around mt-4\">\r\n                {\r\n                    spots.map((spotNumber: number) => {\r\n\r\n                        const storedPlayers = localStorage.getItem(\"playerList\");\r\n                        { console.log(\"storedPlayers\", storedPlayers) }\r\n                        const array = playersArray !== null\r\n                            ? playersArray\r\n                            : (storedPlayers ? JSON.parse(storedPlayers) : []);\r\n                        { console.log(\"array\", array) }\r\n                        const player = array.find((p: User) => parseInt(p.stt) === spotNumber);\r\n                        \r\n                        const answer = Array.isArray(answerList) && answerList.length != 0?answerList.find((answer:Answer) => parseInt(answer.stt) === spotNumber): null\r\n                        if (player) {\r\n                            return (\r\n                                <div key={spotNumber} className={`flex flex-col items-center ${playerFlashes[spotNumber]}`}>\r\n                                    <img\r\n                                        src={player.avatar}\r\n                                        alt=\"Player\"\r\n                                        className=\"w-16 h-16 rounded-full\"\r\n                                    />\r\n                                    <p className=\"text-white mt-2 \">\r\n                                        {answer && answer.answer}\r\n                                    </p>\r\n                                    <p className=\"text-white\">{`player_${player.stt}: ${player.userName}`}</p>\r\n\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    })\r\n                }\r\n                {/* {playersArray.map((player, index) => (\r\n                           \r\n                        ))} */}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayerAnswer"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,SAASC,yBAAyB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAIzE,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAAEC,YAAY;IAAEC,aAAa;IAAEC,MAAM;IAAEC,kBAAkB;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGb,SAAS,CAAC,CAAC;EACxG,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAW,EAAE,CAAC;EAC1D,MAAMiB,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAG1BlB,SAAS,CAAC,MAAM;IACZ,MAAMmB,4BAA4B,GAAGhB,yBAAyB,CAACS,MAAM,EAAGI,UAAU,IAAK;MACnFC,aAAa,CAACD,UAAU,CAAC;MACzBI,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEL,UAAU,CAAC;;MAErC;MACA;MACA;IACJ,CAAC,CAAC;IAEF,OAAO,MAAM;MACTG,4BAA4B,CAAC,CAAC;IAClC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEF;EACAnB,SAAS,CAAC,MAAM;IACZ,IAAIW,aAAa,IAAIA,aAAa,CAACW,MAAM,GAAG,CAAC,EAAE;MAC3CX,aAAa,CAACY,OAAO,CAAEC,MAAa,IAAK;QACrC,MAAMC,SAAS,GAAGC,KAAK,EAAC;QACxBb,kBAAkB,CAACY,SAAS,EAAEE,KAAK,CAACC,SAAS,CAAC,CAAC,CAAC;MACpD,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACd,SAAS,CAAC,CAAC,CAAC,CAAC;EACrB,oBACIT,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eAEIxB,OAAA;MAAKyB,SAAS,EAAC,0BAA0B;MAAAD,QAAA,EAEjCX,KAAK,CAACa,GAAG,CAAEC,UAAkB,IAAK;QAE9B,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;QACxD;UAAEf,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEY,aAAa,CAAC;QAAC;QAC9C,MAAMG,KAAK,GAAG1B,YAAY,KAAK,IAAI,GAC7BA,YAAY,GACXuB,aAAa,GAAGI,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC,GAAG,EAAG;QACtD;UAAEb,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEe,KAAK,CAAC;QAAC;QAC9B,MAAMZ,MAAM,GAAGY,KAAK,CAACG,IAAI,CAAEC,CAAO,IAAKC,QAAQ,CAACD,CAAC,CAACE,GAAG,CAAC,KAAKV,UAAU,CAAC;QAEtE,MAAMW,MAAM,GAAGC,KAAK,CAACC,OAAO,CAAC7B,UAAU,CAAC,IAAIA,UAAU,CAACM,MAAM,IAAI,CAAC,GAACN,UAAU,CAACuB,IAAI,CAAEI,MAAa,IAAKF,QAAQ,CAACE,MAAM,CAACD,GAAG,CAAC,KAAKV,UAAU,CAAC,GAAE,IAAI;QAChJ,IAAIR,MAAM,EAAE;UACR,oBACInB,OAAA;YAAsByB,SAAS,EAAE,8BAA8BnB,aAAa,CAACqB,UAAU,CAAC,EAAG;YAAAH,QAAA,gBACvFxB,OAAA;cACIyC,GAAG,EAAEtB,MAAM,CAACuB,MAAO;cACnBC,GAAG,EAAC,QAAQ;cACZlB,SAAS,EAAC;YAAwB;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC,eACF/C,OAAA;cAAGyB,SAAS,EAAC,kBAAkB;cAAAD,QAAA,EAC1Bc,MAAM,IAAIA,MAAM,CAACA;YAAM;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC,eACJ/C,OAAA;cAAGyB,SAAS,EAAC,YAAY;cAAAD,QAAA,EAAE,UAAUL,MAAM,CAACkB,GAAG,KAAKlB,MAAM,CAAC6B,QAAQ;YAAE;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GATpEpB,UAAU;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWf,CAAC;QAEd;MAEJ,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKL;EAAC,gBAER,CAAC;AAEX,CAAC;AAAA3C,EAAA,CAxEKD,YAAsB;EAAA,QACqEN,SAAS;AAAA;AAAAoD,EAAA,GADpG9C,YAAsB;AA0E5B,eAAeA,YAAY;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}