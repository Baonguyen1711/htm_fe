{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\pages\\\\User\\\\Round4\\\\Round4.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Play from '../../../layouts/Play';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exampleGrid = [['!', '', '?', '', '!'], ['', '?', '!', '', '?'], ['?', '', '', '!', '?'], ['!', '?', '', '', '!'], ['?', '!', '', '?', '']];\n\n// Example questions for testing\nconst exampleQuestions = ['', 'Question 2', 'Question 3', 'Question 4', 'Question 5', 'Question 6', 'Question 7', 'Question 8', 'Question 9', 'Question 10', 'Question 11', 'Question 12', 'Question 13', 'Question 14', 'Question 15', 'Question 16', 'Question 17', 'Question 18', 'Question 19', 'Question 20', 'Question 21', 'Question 22', 'Question 23', 'Question 24', 'Question 25'];\nconst QuestionComponent = ({\n  initialGrid,\n  questions\n}) => {\n  _s();\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const [gridColors, setGridColors] = useState(Array(5).fill(Array(5).fill('#FFFFFF')) // Default grid colors are white\n  );\n\n  // Function to handle cell click\n  const handleCellClick = (row, col) => {\n    const questionIndex = row * 5 + col; // Calculate question index from grid position\n    if (questions[questionIndex]) {\n      setSelectedQuestion(questions[questionIndex]);\n    }\n  };\n\n  // Simulated host function to set color for a specific cell\n  const handleHostSignal = (row, col, color, correct) => {\n    if (correct) {\n      setGridColors(prev => {\n        const newGrid = [...prev];\n        newGrid[row][col] = color; // Update color for specific cell\n        return newGrid;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold text-black mb-4\",\n      children: selectedQuestion ? `Question: ${selectedQuestion}` : 'Select a cell to view a question'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-5 gap-2\",\n      children: initialGrid.map((row, rowIndex) => row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleCellClick(rowIndex, colIndex),\n        className: \"flex items-center justify-center w-16 h-16 rounded-md cursor-pointer\",\n        style: {\n          backgroundColor: gridColors[rowIndex][colIndex],\n          border: '1px solid #000'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-black text-lg\",\n          children: cell\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)\n      }, `${rowIndex}-${colIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionComponent, \"Pb2BUcdVmWOJrUpUb13XMDgF5UA=\");\n_c = QuestionComponent;\nfunction Round4() {\n  return /*#__PURE__*/_jsxDEV(Play, {\n    questionComponent: /*#__PURE__*/_jsxDEV(QuestionComponent, {\n      initialGrid: exampleGrid,\n      questions: exampleQuestions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 34\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Round4;\nexport default Round4;\nvar _c, _c2;\n$RefreshReg$(_c, \"QuestionComponent\");\n$RefreshReg$(_c2, \"Round4\");","map":{"version":3,"names":["React","useState","Play","jsxDEV","_jsxDEV","exampleGrid","exampleQuestions","QuestionComponent","initialGrid","questions","_s","selectedQuestion","setSelectedQuestion","gridColors","setGridColors","Array","fill","handleCellClick","row","col","questionIndex","handleHostSignal","color","correct","prev","newGrid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","rowIndex","cell","colIndex","onClick","style","backgroundColor","border","_c","Round4","questionComponent","_c2","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/pages/User/Round4/Round4.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Play from '../../../layouts/Play';\r\n\r\ninterface QuestionComponentProps {\r\n    initialGrid: string[][]; // 5x5 grid (can be passed from parent or generated)\r\n    questions: string[]; // Array of questions for testing\r\n}\r\n\r\nconst exampleGrid = [\r\n    ['!', '', '?', '', '!'],\r\n    ['', '?', '!', '', '?'],\r\n    ['?', '', '', '!', '?'],\r\n    ['!', '?', '', '', '!'],\r\n    ['?', '!', '', '?', ''],\r\n];\r\n\r\n// Example questions for testing\r\nconst exampleQuestions = [\r\n    '', 'Question 2', 'Question 3', 'Question 4', 'Question 5',\r\n    'Question 6', 'Question 7', 'Question 8', 'Question 9', 'Question 10',\r\n    'Question 11', 'Question 12', 'Question 13', 'Question 14', 'Question 15',\r\n    'Question 16', 'Question 17', 'Question 18', 'Question 19', 'Question 20',\r\n    'Question 21', 'Question 22', 'Question 23', 'Question 24', 'Question 25',\r\n];\r\n\r\nconst QuestionComponent: React.FC<QuestionComponentProps> = ({ initialGrid, questions }) => {\r\n    const [selectedQuestion, setSelectedQuestion] = useState<string | null>(null);\r\n    const [gridColors, setGridColors] = useState<string[][]>(\r\n        Array(5).fill(Array(5).fill('#FFFFFF')) // Default grid colors are white\r\n    );\r\n\r\n    // Function to handle cell click\r\n    const handleCellClick = (row: number, col: number) => {\r\n        const questionIndex = row * 5 + col; // Calculate question index from grid position\r\n        if (questions[questionIndex]) {\r\n            setSelectedQuestion(questions[questionIndex]);\r\n        }\r\n    };\r\n\r\n    // Simulated host function to set color for a specific cell\r\n    const handleHostSignal = (row: number, col: number, color: string, correct: boolean) => {\r\n        if (correct) {\r\n            setGridColors((prev) => {\r\n                const newGrid = [...prev];\r\n                newGrid[row][col] = color; // Update color for specific cell\r\n                return newGrid;\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center\">\r\n            {/* Display selected question */}\r\n            <h2 className=\"text-xl font-bold text-black mb-4\">\r\n                {selectedQuestion ? `Question: ${selectedQuestion}` : 'Select a cell to view a question'}\r\n            </h2>\r\n\r\n            {/* Render 5x5 grid */}\r\n            <div className=\"grid grid-cols-5 gap-2\">\r\n                {initialGrid.map((row, rowIndex) =>\r\n                    row.map((cell, colIndex) => (\r\n                        <div\r\n                            key={`${rowIndex}-${colIndex}`}\r\n                            onClick={() => handleCellClick(rowIndex, colIndex)}\r\n                            className=\"flex items-center justify-center w-16 h-16 rounded-md cursor-pointer\"\r\n                            style={{\r\n                                backgroundColor: gridColors[rowIndex][colIndex],\r\n                                border: '1px solid #000',\r\n                            }}\r\n                        >\r\n                            <span className=\"text-black text-lg\">{cell}</span>\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction Round4() {\r\n    return(\r\n        <Play questionComponent={<QuestionComponent initialGrid={exampleGrid} questions={exampleQuestions}/>}/>\r\n    )\r\n}\r\nexport default Round4"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOzC,MAAMC,WAAW,GAAG,CAChB,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,EACvB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,EACvB,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACvB,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EACvB,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAC1B;;AAED;AACA,MAAMC,gBAAgB,GAAG,CACrB,EAAE,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAC1D,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,aAAa,EACrE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EACzE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EACzE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,CAC5E;AAED,MAAMC,iBAAmD,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACxF,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EAC7E,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CACxCc,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;EAC5C,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGA,CAACC,GAAW,EAAEC,GAAW,KAAK;IAClD,MAAMC,aAAa,GAAGF,GAAG,GAAG,CAAC,GAAGC,GAAG,CAAC,CAAC;IACrC,IAAIV,SAAS,CAACW,aAAa,CAAC,EAAE;MAC1BR,mBAAmB,CAACH,SAAS,CAACW,aAAa,CAAC,CAAC;IACjD;EACJ,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAACH,GAAW,EAAEC,GAAW,EAAEG,KAAa,EAAEC,OAAgB,KAAK;IACpF,IAAIA,OAAO,EAAE;MACTT,aAAa,CAAEU,IAAI,IAAK;QACpB,MAAMC,OAAO,GAAG,CAAC,GAAGD,IAAI,CAAC;QACzBC,OAAO,CAACP,GAAG,CAAC,CAACC,GAAG,CAAC,GAAGG,KAAK,CAAC,CAAC;QAC3B,OAAOG,OAAO;MAClB,CAAC,CAAC;IACN;EACJ,CAAC;EAED,oBACIrB,OAAA;IAAKsB,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBAEvCvB,OAAA;MAAIsB,SAAS,EAAC,mCAAmC;MAAAC,QAAA,EAC5ChB,gBAAgB,GAAG,aAAaA,gBAAgB,EAAE,GAAG;IAAkC;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF,CAAC,eAGL3B,OAAA;MAAKsB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAClCnB,WAAW,CAACwB,GAAG,CAAC,CAACd,GAAG,EAAEe,QAAQ,KAC3Bf,GAAG,CAACc,GAAG,CAAC,CAACE,IAAI,EAAEC,QAAQ,kBACnB/B,OAAA;QAEIgC,OAAO,EAAEA,CAAA,KAAMnB,eAAe,CAACgB,QAAQ,EAAEE,QAAQ,CAAE;QACnDT,SAAS,EAAC,sEAAsE;QAChFW,KAAK,EAAE;UACHC,eAAe,EAAEzB,UAAU,CAACoB,QAAQ,CAAC,CAACE,QAAQ,CAAC;UAC/CI,MAAM,EAAE;QACZ,CAAE;QAAAZ,QAAA,eAEFvB,OAAA;UAAMsB,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAEO;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GAR7C,GAAGE,QAAQ,IAAIE,QAAQ,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAS7B,CACR,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACrB,EAAA,CApDIH,iBAAmD;AAAAiC,EAAA,GAAnDjC,iBAAmD;AAsDzD,SAASkC,MAAMA,CAAA,EAAG;EACd,oBACIrC,OAAA,CAACF,IAAI;IAACwC,iBAAiB,eAAEtC,OAAA,CAACG,iBAAiB;MAACC,WAAW,EAAEH,WAAY;MAACI,SAAS,EAAEH;IAAiB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAE/G;AAACY,GAAA,GAJQF,MAAM;AAKf,eAAeA,MAAM;AAAA,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}