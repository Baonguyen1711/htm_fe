{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\components\\\\HostAnswer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useHost } from '../context/hostContext';\nimport { usePlayer } from '../context/playerContext';\nimport { updateScore } from '../pages/Host/Management/service';\nimport { listenToBroadcastedAnswer } from '../services/firebaseServices';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HostAnswer() {\n  _s();\n  const {\n    playersArray,\n    playerFlashes,\n    roomId,\n    answerList,\n    setAnswerList\n  } = usePlayer();\n  const {\n    handleScoreAdjust,\n    playerScores,\n    triggerPlayerFlash,\n    setPlayerScores\n  } = useHost();\n  useEffect(() => {\n    const currentScoreList = localStorage.getItem(\"scoreList\");\n    if (currentScoreList) {\n      setScoreList(JSON.parse(currentScoreList));\n    }\n  }, []);\n  useEffect(() => {\n    const unsubscribeBroadcastedAnswer = listenToBroadcastedAnswer(roomId, answerList => {\n      setAnswerList(answerList);\n      console.log(\"answerList\", answerList);\n    });\n    return () => {\n      unsubscribeBroadcastedAnswer();\n    };\n  }, [roomId]);\n  const spots = [1, 2, 3, 4];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        alert('Score Updated!');\n        updateScore(roomId, playerScores);\n        const newScoreList = [...playerScores];\n        for (let score of newScoreList) {\n          score[\"isCorrect\"] = false;\n          score[\"isModified\"] = false;\n        }\n        setPlayerScores(newScoreList);\n      },\n      className: \"bg-green-500 text-white p-2 flex-1 rounded-md\",\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-around mt-4\",\n      children: spots.map(spotNumber => {\n        const storedPlayers = localStorage.getItem(\"playerList\");\n        const array = playersArray !== null ? playersArray : storedPlayers ? JSON.parse(storedPlayers) : [];\n        console.log(\"array\", array);\n        const player = array.find(p => parseInt(p.stt) === spotNumber);\n        const playerScore = playerScores.find(score => score.stt === spotNumber.toString());\n        console.log(\"playerScore\", playerScore);\n        const answer = Array.isArray(answerList) && answerList.length !== 0 ? answerList.find(answer => parseInt(answer.stt) === spotNumber) : null;\n        console.log(\"answer in spot\", answer);\n        if (player) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex flex-col items-center ${playerFlashes[spotNumber]}`,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: player.avatar,\n                alt: \"Player\",\n                className: \"w-16 h-16 rounded-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-white mt-2 min-h-[1.5rem]\",\n                children: (answer === null || answer === void 0 ? void 0 : answer.answer) || \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-white mt-2 \",\n                children: playerScore ? playerScore.score : \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-white\",\n                children: `player_${player.stt}: ${player.userName}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2 mt-2\",\n                children: [[5, 10].map(amount => /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleScoreAdjust(spotNumber, amount, true, player.userName, player.avatar),\n                  className: \"bg-green-500 text-white p-2 rounded-md\",\n                  children: [\"+\", amount]\n                }, amount, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 49\n                }, this)), [5, 10].map(amount => /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleScoreAdjust(spotNumber, -amount, false, player.userName, player.avatar),\n                  className: \"bg-red-500 text-white p-2 rounded-md\",\n                  children: [\"-\", amount]\n                }, -amount, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 49\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 41\n              }, this)]\n            }, spotNumber, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 37\n            }, this)\n          }, void 0, false);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(HostAnswer, \"p8HW7qJnd1ecR3KgJMIgfwkH/Ok=\", false, function () {\n  return [usePlayer, useHost];\n});\n_c = HostAnswer;\nexport default HostAnswer;\nvar _c;\n$RefreshReg$(_c, \"HostAnswer\");","map":{"version":3,"names":["React","useEffect","useHost","usePlayer","updateScore","listenToBroadcastedAnswer","jsxDEV","_jsxDEV","Fragment","_Fragment","HostAnswer","_s","playersArray","playerFlashes","roomId","answerList","setAnswerList","handleScoreAdjust","playerScores","triggerPlayerFlash","setPlayerScores","currentScoreList","localStorage","getItem","setScoreList","JSON","parse","unsubscribeBroadcastedAnswer","console","log","spots","children","onClick","alert","newScoreList","score","className","fileName","_jsxFileName","lineNumber","columnNumber","map","spotNumber","storedPlayers","array","player","find","p","parseInt","stt","playerScore","toString","answer","Array","isArray","length","src","avatar","alt","userName","amount","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/components/HostAnswer.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useHost } from '../context/hostContext';\r\nimport { usePlayer } from '../context/playerContext';\r\nimport { User } from '../type';\r\nimport { updateScore } from '../pages/Host/Management/service';\r\nimport { listenToBroadcastedAnswer } from '../services/firebaseServices';\r\nimport { Answer, Score } from '../type';\r\n\r\n\r\nfunction HostAnswer() {\r\n    const { playersArray, playerFlashes, roomId, answerList, setAnswerList } = usePlayer()\r\n    const { handleScoreAdjust, playerScores, triggerPlayerFlash, setPlayerScores } = useHost()\r\n    useEffect(() => {\r\n    \r\n            const currentScoreList = localStorage.getItem(\"scoreList\");\r\n            if (currentScoreList) {\r\n                setScoreList(JSON.parse(currentScoreList));\r\n            }\r\n        }, []);\r\n    useEffect(() => {\r\n        const unsubscribeBroadcastedAnswer = listenToBroadcastedAnswer(roomId, (answerList) => {\r\n            setAnswerList(answerList)\r\n            console.log(\"answerList\", answerList)\r\n        })\r\n\r\n        return () => {\r\n            unsubscribeBroadcastedAnswer();\r\n        };\r\n    }, [roomId]);\r\n    const spots = [1, 2, 3, 4]\r\n    return (\r\n        <>\r\n            <button\r\n                onClick={() => {\r\n                    alert('Score Updated!')\r\n                    updateScore(roomId, playerScores)\r\n                    const newScoreList = [...playerScores]\r\n                    for (let score of newScoreList) {\r\n                        score[\"isCorrect\"] = false;\r\n                        score[\"isModified\"] = false\r\n                    }\r\n\r\n                    setPlayerScores(newScoreList)\r\n                }}\r\n                className=\"bg-green-500 text-white p-2 flex-1 rounded-md\"\r\n            >\r\n                Confirm\r\n            </button>\r\n            <div className=\"flex justify-around mt-4\">\r\n\r\n                {\r\n                    spots.map((spotNumber: number) => {\r\n\r\n                        const storedPlayers = localStorage.getItem(\"playerList\");\r\n                        const array = playersArray !== null\r\n                            ? playersArray\r\n                            : (storedPlayers ? JSON.parse(storedPlayers) : []);\r\n                        console.log(\"array\", array)\r\n                        const player = array.find((p: User) => parseInt(p.stt) === spotNumber);\r\n                        const playerScore: Score = playerScores.find((score: Score) => score.stt === spotNumber.toString());\r\n                        console.log(\"playerScore\", playerScore);\r\n                        const answer = Array.isArray(answerList) && answerList.length !== 0\r\n                            ? answerList.find((answer: Answer) => parseInt(answer.stt) === spotNumber)\r\n                            : null\r\n                        console.log(\"answer in spot\", answer);\r\n                        if (player) {\r\n                            return (\r\n                                <>\r\n\r\n                                    <div key={spotNumber} className={`flex flex-col items-center ${playerFlashes[spotNumber]}`}>\r\n                                        <img\r\n                                            src={player.avatar}\r\n                                            alt=\"Player\"\r\n                                            className=\"w-16 h-16 rounded-full\"\r\n                                        />\r\n                                        <p className=\"text-white mt-2 min-h-[1.5rem]\">\r\n                                            {answer?.answer || \"\"}\r\n                                        </p>\r\n                                        <p className=\"text-white mt-2 \">\r\n                                            {playerScore ? playerScore.score : \"0\"}\r\n                                        </p>\r\n                                        <p className=\"text-white\">{`player_${player.stt}: ${player.userName}`}</p>\r\n                                        <div className=\"flex gap-2 mt-2\">\r\n                                            {[5, 10].map((amount) => (\r\n                                                <button\r\n                                                    key={amount}\r\n                                                    onClick={() => handleScoreAdjust(spotNumber, amount, true, player.userName, player.avatar)}\r\n                                                    className=\"bg-green-500 text-white p-2 rounded-md\"\r\n                                                >\r\n                                                    +{amount}\r\n                                                </button>\r\n                                            ))}\r\n                                            {[5 , 10].map((amount) => (\r\n                                                <button\r\n                                                    key={-amount}\r\n                                                    onClick={() => handleScoreAdjust(spotNumber, -amount, false, player.userName, player.avatar)}\r\n                                                    className=\"bg-red-500 text-white p-2 rounded-md\"\r\n                                                >\r\n                                                    -{amount}\r\n                                                </button>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                </>\r\n\r\n                            )\r\n                        }\r\n\r\n                    })\r\n                }\r\n                {/* {playersArray.map((player, index) => (\r\n                           \r\n                        ))} */}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HostAnswer"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,SAASC,WAAW,QAAQ,kCAAkC;AAC9D,SAASC,yBAAyB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAIzE,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC,YAAY;IAAEC,aAAa;IAAEC,MAAM;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAGb,SAAS,CAAC,CAAC;EACtF,MAAM;IAAEc,iBAAiB;IAAEC,YAAY;IAAEC,kBAAkB;IAAEC;EAAgB,CAAC,GAAGlB,OAAO,CAAC,CAAC;EAC1FD,SAAS,CAAC,MAAM;IAER,MAAMoB,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC1D,IAAIF,gBAAgB,EAAE;MAClBG,YAAY,CAACC,IAAI,CAACC,KAAK,CAACL,gBAAgB,CAAC,CAAC;IAC9C;EACJ,CAAC,EAAE,EAAE,CAAC;EACVpB,SAAS,CAAC,MAAM;IACZ,MAAM0B,4BAA4B,GAAGtB,yBAAyB,CAACS,MAAM,EAAGC,UAAU,IAAK;MACnFC,aAAa,CAACD,UAAU,CAAC;MACzBa,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEd,UAAU,CAAC;IACzC,CAAC,CAAC;IAEF,OAAO,MAAM;MACTY,4BAA4B,CAAC,CAAC;IAClC,CAAC;EACL,CAAC,EAAE,CAACb,MAAM,CAAC,CAAC;EACZ,MAAMgB,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,oBACIvB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACIxB,OAAA;MACIyB,OAAO,EAAEA,CAAA,KAAM;QACXC,KAAK,CAAC,gBAAgB,CAAC;QACvB7B,WAAW,CAACU,MAAM,EAAEI,YAAY,CAAC;QACjC,MAAMgB,YAAY,GAAG,CAAC,GAAGhB,YAAY,CAAC;QACtC,KAAK,IAAIiB,KAAK,IAAID,YAAY,EAAE;UAC5BC,KAAK,CAAC,WAAW,CAAC,GAAG,KAAK;UAC1BA,KAAK,CAAC,YAAY,CAAC,GAAG,KAAK;QAC/B;QAEAf,eAAe,CAACc,YAAY,CAAC;MACjC,CAAE;MACFE,SAAS,EAAC,+CAA+C;MAAAL,QAAA,EAC5D;IAED;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTjC,OAAA;MAAK6B,SAAS,EAAC,0BAA0B;MAAAL,QAAA,EAGjCD,KAAK,CAACW,GAAG,CAAEC,UAAkB,IAAK;QAE9B,MAAMC,aAAa,GAAGrB,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;QACxD,MAAMqB,KAAK,GAAGhC,YAAY,KAAK,IAAI,GAC7BA,YAAY,GACX+B,aAAa,GAAGlB,IAAI,CAACC,KAAK,CAACiB,aAAa,CAAC,GAAG,EAAG;QACtDf,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEe,KAAK,CAAC;QAC3B,MAAMC,MAAM,GAAGD,KAAK,CAACE,IAAI,CAAEC,CAAO,IAAKC,QAAQ,CAACD,CAAC,CAACE,GAAG,CAAC,KAAKP,UAAU,CAAC;QACtE,MAAMQ,WAAkB,GAAGhC,YAAY,CAAC4B,IAAI,CAAEX,KAAY,IAAKA,KAAK,CAACc,GAAG,KAAKP,UAAU,CAACS,QAAQ,CAAC,CAAC,CAAC;QACnGvB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEqB,WAAW,CAAC;QACvC,MAAME,MAAM,GAAGC,KAAK,CAACC,OAAO,CAACvC,UAAU,CAAC,IAAIA,UAAU,CAACwC,MAAM,KAAK,CAAC,GAC7DxC,UAAU,CAAC+B,IAAI,CAAEM,MAAc,IAAKJ,QAAQ,CAACI,MAAM,CAACH,GAAG,CAAC,KAAKP,UAAU,CAAC,GACxE,IAAI;QACVd,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEuB,MAAM,CAAC;QACrC,IAAIP,MAAM,EAAE;UACR,oBACItC,OAAA,CAAAE,SAAA;YAAAsB,QAAA,eAEIxB,OAAA;cAAsB6B,SAAS,EAAE,8BAA8BvB,aAAa,CAAC6B,UAAU,CAAC,EAAG;cAAAX,QAAA,gBACvFxB,OAAA;gBACIiD,GAAG,EAAEX,MAAM,CAACY,MAAO;gBACnBC,GAAG,EAAC,QAAQ;gBACZtB,SAAS,EAAC;cAAwB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrC,CAAC,eACFjC,OAAA;gBAAG6B,SAAS,EAAC,gCAAgC;gBAAAL,QAAA,EACxC,CAAAqB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEA,MAAM,KAAI;cAAE;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtB,CAAC,eACJjC,OAAA;gBAAG6B,SAAS,EAAC,kBAAkB;gBAAAL,QAAA,EAC1BmB,WAAW,GAAGA,WAAW,CAACf,KAAK,GAAG;cAAG;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvC,CAAC,eACJjC,OAAA;gBAAG6B,SAAS,EAAC,YAAY;gBAAAL,QAAA,EAAE,UAAUc,MAAM,CAACI,GAAG,KAAKJ,MAAM,CAACc,QAAQ;cAAE;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1EjC,OAAA;gBAAK6B,SAAS,EAAC,iBAAiB;gBAAAL,QAAA,GAC3B,CAAC,CAAC,EAAE,EAAE,CAAC,CAACU,GAAG,CAAEmB,MAAM,iBAChBrD,OAAA;kBAEIyB,OAAO,EAAEA,CAAA,KAAMf,iBAAiB,CAACyB,UAAU,EAAEkB,MAAM,EAAE,IAAI,EAAEf,MAAM,CAACc,QAAQ,EAAEd,MAAM,CAACY,MAAM,CAAE;kBAC3FrB,SAAS,EAAC,wCAAwC;kBAAAL,QAAA,GACrD,GACI,EAAC6B,MAAM;gBAAA,GAJHA,MAAM;kBAAAvB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAKP,CACX,CAAC,EACD,CAAC,CAAC,EAAG,EAAE,CAAC,CAACC,GAAG,CAAEmB,MAAM,iBACjBrD,OAAA;kBAEIyB,OAAO,EAAEA,CAAA,KAAMf,iBAAiB,CAACyB,UAAU,EAAE,CAACkB,MAAM,EAAE,KAAK,EAAEf,MAAM,CAACc,QAAQ,EAAEd,MAAM,CAACY,MAAM,CAAE;kBAC7FrB,SAAS,EAAC,sCAAsC;kBAAAL,QAAA,GACnD,GACI,EAAC6B,MAAM;gBAAA,GAJH,CAACA,MAAM;kBAAAvB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAKR,CACX,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC;YAAA,GAhCAE,UAAU;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAiCf;UAAC,gBAKR,CAAC;QAGX;MAEJ,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKL,CAAC;EAAA,eAER,CAAC;AAEX;AAAC7B,EAAA,CAhHQD,UAAU;EAAA,QAC4DP,SAAS,EACHD,OAAO;AAAA;AAAA2D,EAAA,GAFnFnD,UAAU;AAkHnB,eAAeA,UAAU;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}