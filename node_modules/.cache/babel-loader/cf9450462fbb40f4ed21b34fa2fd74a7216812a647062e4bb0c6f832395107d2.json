{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\layouts\\\\RoundBase\\\\Round2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { renderGrid } from \"./utils\";\nimport { usePlayer } from \"../../context/playerContext\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mainKeyword = \"BÒCÔNGANH\"; // Main obstacle keyword\n\nconst QuestionBoxRound2 = ({\n  obstacleWord,\n  hintWordArray,\n  initialGrid,\n  isHost = false\n}) => {\n  _s();\n  console.log(\"hintWordArray\", typeof hintWordArray);\n  console.log(\"obstacle\", obstacleWord);\n  const [searchParams] = useSearchParams();\n  const {\n    setInitialGrid\n  } = usePlayer();\n  const roomId = searchParams.get(\"roomId\") || \"\";\n  const GRID_SIZE = 20; // Grid size\n\n  const generateEmptyGrid = () => {\n    return Array(GRID_SIZE).fill(null).map(() => Array(GRID_SIZE).fill(\"\"));\n  };\n  const [grid, setGrid] = useState(generateEmptyGrid());\n  const [revealedRows, setRevealedRows] = useState(Array(GRID_SIZE).fill(false));\n  const [hintWords, setHintWords] = useState([]);\n  useEffect(() => {\n    if (isHost) {\n      if (hintWordArray && obstacleWord) {\n        const {\n          randomHintWords,\n          newGrid\n        } = renderGrid(hintWordArray, obstacleWord, GRID_SIZE);\n        setHintWords(randomHintWords);\n        setInitialGrid(newGrid);\n        setGrid(newGrid);\n      }\n    } else {\n      if (initialGrid) {\n        setGrid(initialGrid);\n      }\n    }\n  }, [isHost, hintWordArray]);\n\n  // Row styling functions (only available to the host)\n  const highlightRowYellow = rowIndex => {\n    if (!isHost) return;\n    setRevealedRows(prev => {\n      const newState = [...prev];\n      newState[rowIndex] = true;\n      return newState;\n    });\n  };\n  const highlightRowGrey = rowIndex => {\n    if (!isHost) return;\n    setRevealedRows(prev => {\n      const newState = [...prev];\n      newState[rowIndex] = false;\n      return newState;\n    });\n  };\n  const toggleRowHighlight = rowIndex => {\n    if (!isHost) return;\n    setRevealedRows(prev => {\n      const newState = [...prev];\n      newState[rowIndex] = !newState[rowIndex];\n      return newState;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center bg-white rounded-lg shadow-md p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-700 text-xl font-semibold text-center mb-4 max-w-[90%]\",\n      children: \"Trong c\\xE1c gi\\u1EA3i \\u0111\\u1EA5u th\\u1EC3 thao, nh\\u1EEFng \\u0111\\u1ED9i hay v\\u1EADn \\u0111\\u1ED9ng vi\\xEAn m\\u1EA1nh s\\u1EBD \\u0111\\u01B0\\u1EE3c x\\u1EBFp v\\xE0o c\\xF9ng m\\u1ED9t ho\\u1EB7c nhi\\u1EC1u nh\\xF3m trong khi b\\u1ED1c th\\u0103m \\u0111\\u1EC3 tr\\xE1nh vi\\u1EC7c g\\u1EB7p nhau s\\u1EDBm. T\\xEAn g\\u1ECDi chung c\\u1EE7a c\\xE1c nh\\xF3m v\\u1EADn \\u0111\\u1ED9ng vi\\xEAn n\\xE0y l\\xE0 g\\xEC?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-[repeat(20,40px)] grid-rows-[repeat(20,40px)] gap-1 max-h-[400px] overflow-y-scroll\",\n      children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [isHost && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-semibold mr-2\",\n            children: rowIndex + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-2 py-1 bg-yellow-300 rounded-md text-black mx-1\",\n            onClick: () => highlightRowYellow(rowIndex),\n            children: \"Highlight Yellow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-2 py-1 bg-gray-400 rounded-md text-white mx-1\",\n            onClick: () => highlightRowGrey(rowIndex),\n            children: \"Highlight Grey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-2 py-1 bg-red-500 rounded-md text-white mx-1\",\n            onClick: () => toggleRowHighlight(rowIndex),\n            children: \"Toggle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this), row.map((cell, colIndex) => {\n          const isRevealed = revealedRows[rowIndex];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-10 h-10 flex items-center justify-center text-lg font-semibold select-none border-gray-400 bg-gray-50 \n                                        ${isRevealed ? \"bg-yellow-300 text-black\" : \"bg-gray-400 text-white\"}\n                                    `,\n            children: cell\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this);\n        })]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionBoxRound2, \"pWvd7tbsvT72rvo6hCXGuytLRs8=\", false, function () {\n  return [useSearchParams, usePlayer];\n});\n_c = QuestionBoxRound2;\nexport default QuestionBoxRound2;\nvar _c;\n$RefreshReg$(_c, \"QuestionBoxRound2\");","map":{"version":3,"names":["React","useState","useEffect","renderGrid","usePlayer","useSearchParams","jsxDEV","_jsxDEV","mainKeyword","QuestionBoxRound2","obstacleWord","hintWordArray","initialGrid","isHost","_s","console","log","searchParams","setInitialGrid","roomId","get","GRID_SIZE","generateEmptyGrid","Array","fill","map","grid","setGrid","revealedRows","setRevealedRows","hintWords","setHintWords","randomHintWords","newGrid","highlightRowYellow","rowIndex","prev","newState","highlightRowGrey","toggleRowHighlight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","row","Fragment","onClick","cell","colIndex","isRevealed","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/layouts/RoundBase/Round2.tsx"],"sourcesContent":["import Play from \"../Play\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { renderGrid } from \"./utils\";\r\nimport { RoundBase } from \"../../type\";\r\nimport { useHost } from \"../../context/hostContext\";\r\nimport { usePlayer } from \"../../context/playerContext\";\r\nimport { setSelectedRow } from \"../../components/services\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\ninterface HintWord {\r\n    word: string;\r\n    x: number;\r\n    y: number;\r\n    direction: \"horizontal\" | \"vertical\";\r\n}\r\n\r\ninterface ObstacleQuestionBoxProps {\r\n    obstacleWord?: string;\r\n    hintWordArray?: string[];\r\n    isHost?: boolean; // Indicates if the user is the host\r\n    initialGrid?: string[][];\r\n}\r\n\r\nconst mainKeyword = \"BÒCÔNGANH\"; // Main obstacle keyword\r\n\r\nconst QuestionBoxRound2: React.FC<ObstacleQuestionBoxProps> = ({ obstacleWord, hintWordArray, initialGrid, isHost = false }) => {\r\n    console.log(\"hintWordArray\", typeof hintWordArray);\r\n    console.log(\"obstacle\", obstacleWord);\r\n    const [searchParams] = useSearchParams();\r\n    const { setInitialGrid } = usePlayer();\r\n    const roomId = searchParams.get(\"roomId\") || \"\";\r\n\r\n    const GRID_SIZE = 20; // Grid size\r\n\r\n    const generateEmptyGrid = () => {\r\n        return Array(GRID_SIZE).fill(null).map(() => Array(GRID_SIZE).fill(\"\"));\r\n    };\r\n\r\n    const [grid, setGrid] = useState<string[][]>(generateEmptyGrid());\r\n    const [revealedRows, setRevealedRows] = useState<boolean[]>(Array(GRID_SIZE).fill(false));\r\n    const [hintWords, setHintWords] = useState<HintWord[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (isHost) {\r\n            if (hintWordArray && obstacleWord) {\r\n                const { randomHintWords, newGrid } = renderGrid(hintWordArray, obstacleWord, GRID_SIZE);\r\n                setHintWords(randomHintWords);\r\n                setInitialGrid(newGrid);\r\n                setGrid(newGrid);\r\n            }\r\n        } else {\r\n            if (initialGrid) {\r\n                setGrid(initialGrid);\r\n            }\r\n        }\r\n    }, [isHost, hintWordArray]);\r\n\r\n    // Row styling functions (only available to the host)\r\n    const highlightRowYellow = (rowIndex: number) => {\r\n        if (!isHost) return;\r\n        setRevealedRows(prev => {\r\n            const newState = [...prev];\r\n            newState[rowIndex] = true;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    const highlightRowGrey = (rowIndex: number) => {\r\n        if (!isHost) return;\r\n        setRevealedRows(prev => {\r\n            const newState = [...prev];\r\n            newState[rowIndex] = false;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    const toggleRowHighlight = (rowIndex: number) => {\r\n        if (!isHost) return;\r\n        setRevealedRows(prev => {\r\n            const newState = [...prev];\r\n            newState[rowIndex] = !newState[rowIndex];\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center bg-white rounded-lg shadow-md p-6\">\r\n            <div className=\"text-gray-700 text-xl font-semibold text-center mb-4 max-w-[90%]\">\r\n                Trong các giải đấu thể thao, những đội hay vận động viên mạnh sẽ được xếp vào cùng một hoặc nhiều nhóm trong khi bốc thăm để tránh việc gặp nhau sớm. Tên gọi chung của các nhóm vận động viên này là gì?\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-[repeat(20,40px)] grid-rows-[repeat(20,40px)] gap-1 max-h-[400px] overflow-y-scroll\">\r\n                {grid.map((row, rowIndex) => (\r\n                    <React.Fragment key={rowIndex}>\r\n                        {isHost && (\r\n                            <div className=\"flex items-center mb-2\">\r\n                                <span className=\"text-lg font-semibold mr-2\">{rowIndex + 1}</span>\r\n                                <button className=\"px-2 py-1 bg-yellow-300 rounded-md text-black mx-1\"\r\n                                    onClick={() => highlightRowYellow(rowIndex)}>\r\n                                    Highlight Yellow\r\n                                </button>\r\n                                <button className=\"px-2 py-1 bg-gray-400 rounded-md text-white mx-1\"\r\n                                    onClick={() => highlightRowGrey(rowIndex)}>\r\n                                    Highlight Grey\r\n                                </button>\r\n                                <button className=\"px-2 py-1 bg-red-500 rounded-md text-white mx-1\"\r\n                                    onClick={() => toggleRowHighlight(rowIndex)}>\r\n                                    Toggle\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n\r\n                        {row.map((cell, colIndex) => {\r\n                            const isRevealed = revealedRows[rowIndex];\r\n\r\n                            return (\r\n                                <div\r\n                                    key={colIndex}\r\n                                    className={`w-10 h-10 flex items-center justify-center text-lg font-semibold select-none border-gray-400 bg-gray-50 \r\n                                        ${isRevealed ? \"bg-yellow-300 text-black\" : \"bg-gray-400 text-white\"}\r\n                                    `}\r\n                                >\r\n                                    {cell}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </React.Fragment>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuestionBoxRound2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}