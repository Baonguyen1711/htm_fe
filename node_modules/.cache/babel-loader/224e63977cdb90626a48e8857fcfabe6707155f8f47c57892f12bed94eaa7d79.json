{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\pages\\\\Host\\\\Test\\\\ViewTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { getTest, getTestByUserId, updateQuestion, addNewQuestion } from './service';\nimport { uploadFile } from '../../../services/uploadAssestServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewTest = () => {\n  _s();\n  const [testList, setTestList] = useState([]);\n  const [selectedTestName, setSelectedTestName] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const [editedQuestion, setEditedQuestion] = useState({});\n  const [isDataExisted, setIsDataExisted] = useState(false);\n  const [testData, setTestData] = useState({\n    round_1: [],\n    round_2: [],\n    round_3: {},\n    round_4: {}\n  });\n  const fileInputRefs = useRef({});\n\n  // Fetch test list on mount\n  useEffect(() => {\n    const getTestList = async () => {\n      try {\n        const testList = await getTestByUserId();\n        localStorage.setItem(\"testList\", JSON.stringify(testList));\n        setTestList(testList);\n      } catch (error) {\n        console.error(\"Error fetching test list:\", error);\n      }\n    };\n    getTestList();\n  }, []);\n  const handleTestChange = event => {\n    setSelectedTestName(event.target.value);\n    setIsDataExisted(false);\n  };\n  const handleViewTest = async () => {\n    if (!selectedTestName) {\n      alert(\"Please select a test first!\");\n      return;\n    }\n    if (isDataExisted) return;\n    try {\n      const data = await getTest(selectedTestName);\n      console.log(\"data\", data);\n      localStorage.setItem(\"testId\", data[\"round_1\"][0][\"testId\"]);\n      console.log(localStorage.getItem(\"testId\"));\n      setTestData({\n        round_1: data.round_1 || [],\n        round_2: data.round_2 || [],\n        round_3: data.round_3 || {},\n        round_4: data.round_4 || {}\n      });\n      setIsDataExisted(true);\n    } catch (error) {\n      console.error(\"Error fetching test questions:\", error);\n      setTestData({\n        round_1: [],\n        round_2: [],\n        round_3: {},\n        round_4: {}\n      });\n    }\n  };\n\n  // Handle file upload to S3\n  const handleFileUpload = async (question, type, event) => {\n    var _event$target$files, _file$name$split$pop;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n\n    // Validate file type against question type\n    const fileExtension = (_file$name$split$pop = file.name.split('.').pop()) === null || _file$name$split$pop === void 0 ? void 0 : _file$name$split$pop.toLowerCase();\n    console.log(\"file.name.\", file.name);\n    console.log(\"fileExtension\", fileExtension);\n    console.log(\"question type inside function\", type);\n\n    // const allowedExtensions = question.type?.toLowerCase().split(',') || [];\n    // if (!allowedExtensions.includes(fileExtension || '')) {\n    //   alert(`File type must be one of: ${allowedExtensions.join(', ')}`);\n    //   return;\n    // }\n\n    try {\n      const key = await uploadFile(file, `Question ${question.questionId}`);\n      console.log(\"question\", question);\n      const updatedQuestion = {\n        ...question,\n        imgUrl: `https://d1fc7d6en42vzg.cloudfront.net/${key}`\n      };\n      console.log(\"updatedQuestion\", updatedQuestion);\n      await updateQuestion(updatedQuestion, question.questionId || \"\");\n\n      // Update testData\n      const updatedTestData = {\n        ...testData\n      };\n      const updateQuestionInList = questions => questions.map(q => q.testId === question.testId && q.questionId === question.questionId ? updatedQuestion : q);\n      updatedTestData.round_1 = updateQuestionInList(updatedTestData.round_1);\n      updatedTestData.round_2 = updateQuestionInList(updatedTestData.round_2);\n      for (const packetName in updatedTestData.round_3) {\n        updatedTestData.round_3[packetName] = updateQuestionInList(updatedTestData.round_3[packetName]);\n      }\n      for (const difficulty in updatedTestData.round_4) {\n        updatedTestData.round_4[difficulty] = updateQuestionInList(updatedTestData.round_4[difficulty]);\n      }\n      setTestData(updatedTestData);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      alert(\"Failed to upload file.\");\n    }\n  };\n  const openModal = (question, round, groupName) => {\n    if (question) {\n      // Edit mode - load selected question data\n      setSelectedQuestion(question);\n      setEditedQuestion({\n        question: question.question,\n        answer: question.answer,\n        type: question.type || '',\n        imgUrl: question.imgUrl || '',\n        round: question.round || '',\n        groupName: question.groupName || ''\n      });\n    } else {\n      // Add mode - start fresh, optionally with round/groupName info\n      setSelectedQuestion(null);\n      setEditedQuestion({\n        question: '',\n        answer: '',\n        type: '',\n        imgUrl: '',\n        round: round || '',\n        groupName: groupName || ''\n      });\n    }\n    setIsModalOpen(true);\n  };\n\n  // Open modal for editing question\n  const handleEditClick = question => {\n    setSelectedQuestion(question);\n    setEditedQuestion({\n      question: question.question,\n      answer: question.answer,\n      type: question.type || '',\n      imgUrl: question.imgUrl || ''\n    });\n    setIsModalOpen(true);\n  };\n\n  // Open modal for adding new question\n  const handleAddQuestion = (round, groupName) => {\n    setSelectedQuestion(null);\n    setEditedQuestion({\n      round,\n      groupName\n    });\n    setIsModalOpen(true);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedQuestion(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleConfirm = async () => {\n    if (!selectedQuestion && !editedQuestion.round) return;\n    if (selectedQuestion) {\n      // Update existing question\n      await updateQuestion(editedQuestion, selectedQuestion.questionId || \"\");\n      const updatedTestData = {\n        ...testData\n      };\n      const updateQuestionInList = questions => questions.map(q => q.testId === selectedQuestion.testId && q.questionId === selectedQuestion.questionId ? {\n        ...q,\n        ...editedQuestion\n      } : q);\n      updatedTestData.round_1 = updateQuestionInList(updatedTestData.round_1);\n      updatedTestData.round_2 = updateQuestionInList(updatedTestData.round_2);\n      for (const packetName in updatedTestData.round_3) {\n        updatedTestData.round_3[packetName] = updateQuestionInList(updatedTestData.round_3[packetName]);\n      }\n      for (const difficulty in updatedTestData.round_4) {\n        updatedTestData.round_4[difficulty] = updateQuestionInList(updatedTestData.round_4[difficulty]);\n      }\n      setTestData(updatedTestData);\n    } else {\n      await addNewQuestion;\n      // Add new question (stub - requires backend API)\n      console.log(\"Add new question:\", editedQuestion);\n      // Implement backend call to add new question\n    }\n    setIsModalOpen(false);\n    setSelectedQuestion(null);\n    setEditedQuestion({});\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n    setSelectedQuestion(null);\n    setEditedQuestion({});\n  };\n\n  // Render table for questions\n  const renderTable = (questions, title, round, groupName) => {\n    if (questions.length === 0 && !groupName) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [title && /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-semibold text-gray-800 mb-4\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 19\n      }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-6 gap-4 p-4 bg-gray-50 font-semibold text-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), questions.map((question, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-6 gap-4 p-4 border-t hover:bg-gray-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-600\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-800\",\n              children: question.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-800\",\n              children: question.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-600\",\n              children: question.type || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col space-y-2 items-start max-w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-blue-500 text-white px-3 py-1 rounded-lg hover:bg-blue-600 transition\",\n                onClick: () => {\n                  var _fileInputRefs$curren;\n                  return (_fileInputRefs$curren = fileInputRefs.current[question.questionId || 0]) === null || _fileInputRefs$curren === void 0 ? void 0 : _fileInputRefs$curren.click();\n                },\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600 break-words max-w-full\",\n                children: question.imgUrl || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                ref: el => {\n                  fileInputRefs.current[question.questionId || 0] = el;\n                },\n                className: \"hidden\",\n                onChange: e => handleFileUpload(question, question.type, e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-yellow-500 text-white px-3 py-1 rounded-lg hover:bg-yellow-600 transition\",\n                onClick: () => openModal(question),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this)]\n          }, question.testId + index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition\",\n        onClick: () => openModal(undefined, round, groupName),\n        children: \"Add New Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render grouped tables for round_3 and round_4\n  const renderGroupedTable = (groups, roundTitle, round) => {\n    if (Object.keys(groups).length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-semibold text-gray-800 mb-4\",\n        children: roundTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), Object.entries(groups).map(([groupName, questions]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-xl font-medium text-gray-700 mb-3\",\n          children: groupName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), renderTable(questions, \"\", round, groupName)]\n      }, groupName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto p-6 bg-gray-100 min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-xl shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold text-gray-800 mb-6\",\n        children: \"Uploaded Exams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"testSelect\",\n          className: \"block text-lg font-medium text-gray-700 mb-2\",\n          children: \"Select Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"testSelect\",\n          name: \"testSelect\",\n          className: \"border border-gray-300 rounded-lg p-3 w-full bg-white focus:ring-2 focus:ring-blue-500 transition\",\n          value: selectedTestName,\n          onChange: handleTestChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"-- Select a Test --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), testList.map(test => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: test,\n            children: test\n          }, test, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition mb-8\",\n        onClick: handleViewTest,\n        children: \"View Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), renderTable(testData.round_1, \"Round 1\", \"round_1\"), renderTable(testData.round_2, \"Round 2\", \"round_2\"), renderGroupedTable(testData.round_3, \"Round 3\", \"round_3\"), renderGroupedTable(testData.round_4, \"Round 4\", \"round_4\"), testData.round_1.length === 0 && testData.round_2.length === 0 && Object.keys(testData.round_3).length === 0 && Object.keys(testData.round_4).length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-center\",\n        children: \"No questions available for this test.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 13\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-8 rounded-xl shadow-2xl w-full max-w-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-semibold text-gray-800 mb-6\",\n            children: selectedQuestion ? 'Edit Question' : 'Add New Question'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"question\",\n                value: editedQuestion.question || '',\n                onChange: handleInputChange,\n                className: \"border border-gray-300 rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 transition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"answer\",\n                value: editedQuestion.answer || '',\n                onChange: handleInputChange,\n                className: \"border border-gray-300 rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 transition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"type\",\n                value: editedQuestion.type || '',\n                onChange: handleInputChange,\n                className: \"border border-gray-300 rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 transition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Image URL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"imgUrl\",\n                value: editedQuestion.imgUrl || '',\n                onChange: handleInputChange,\n                className: \"border border-gray-300 rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 transition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-gray-500 text-white px-6 py-2 rounded-lg hover:bg-gray-600 transition\",\n              onClick: handleCancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-600 transition\",\n              onClick: handleConfirm,\n              children: selectedQuestion ? 'Confirm' : 'Add'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewTest, \"E7/UexI6wQQHypS8KmVVoqZauAE=\");\n_c = ViewTest;\nexport default ViewTest;\nvar _c;\n$RefreshReg$(_c, \"ViewTest\");","map":{"version":3,"names":["React","useEffect","useState","useRef","getTest","getTestByUserId","updateQuestion","addNewQuestion","uploadFile","jsxDEV","_jsxDEV","ViewTest","_s","testList","setTestList","selectedTestName","setSelectedTestName","isModalOpen","setIsModalOpen","selectedQuestion","setSelectedQuestion","editedQuestion","setEditedQuestion","isDataExisted","setIsDataExisted","testData","setTestData","round_1","round_2","round_3","round_4","fileInputRefs","getTestList","localStorage","setItem","JSON","stringify","error","console","handleTestChange","event","target","value","handleViewTest","alert","data","log","getItem","handleFileUpload","question","type","_event$target$files","_file$name$split$pop","file","files","fileExtension","name","split","pop","toLowerCase","key","questionId","updatedQuestion","imgUrl","updatedTestData","updateQuestionInList","questions","map","q","testId","packetName","difficulty","openModal","round","groupName","answer","handleEditClick","handleAddQuestion","handleInputChange","e","prev","handleConfirm","handleCancel","renderTable","title","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","_fileInputRefs$curren","current","click","ref","el","onChange","undefined","renderGroupedTable","groups","roundTitle","Object","keys","entries","htmlFor","id","disabled","test","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/pages/Host/Test/ViewTest.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { getTest, getTestByUserId, updateQuestion, addNewQuestion } from './service';\r\nimport { uploadFile } from '../../../services/uploadAssestServices';\r\nimport { Question } from '../../../type';\r\nimport { useQuery } from 'react-query';\r\n\r\n\r\nconst ViewTest: React.FC = () => {\r\n  const [testList, setTestList] = useState<string[]>([]);\r\n  const [selectedTestName, setSelectedTestName] = useState<string>(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [selectedQuestion, setSelectedQuestion] = useState<Question | null>(null);\r\n  const [editedQuestion, setEditedQuestion] = useState<Partial<Question>>({});\r\n  const [isDataExisted, setIsDataExisted] = useState<boolean>(false);\r\n  const [testData, setTestData] = useState<{\r\n    round_1: Question[];\r\n    round_2: Question[];\r\n    round_3: { [key: string]: Question[] };\r\n    round_4: { [key: string]: Question[] };\r\n  }>({\r\n    round_1: [],\r\n    round_2: [],\r\n    round_3: {},\r\n    round_4: {},\r\n  });\r\n  const fileInputRefs = useRef<Record<string, HTMLInputElement | null>>({});\r\n\r\n  // Fetch test list on mount\r\n  useEffect(() => {\r\n    const getTestList = async () => {\r\n      try {\r\n        const testList = await getTestByUserId();\r\n        localStorage.setItem(\"testList\", JSON.stringify(testList));\r\n        setTestList(testList);\r\n      } catch (error) {\r\n        console.error(\"Error fetching test list:\", error);\r\n      }\r\n    };\r\n    getTestList();\r\n  }, []);\r\n\r\n  const handleTestChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedTestName(event.target.value);\r\n    setIsDataExisted(false);\r\n  };\r\n\r\n  const handleViewTest = async () => {\r\n    if (!selectedTestName) {\r\n      alert(\"Please select a test first!\");\r\n      return;\r\n    }\r\n    if (isDataExisted) return;\r\n    try {\r\n      const data = await getTest(selectedTestName);\r\n      console.log(\"data\",data);\r\n      localStorage.setItem(\"testId\", data[\"round_1\"][0][\"testId\"])\r\n      console.log(localStorage.getItem(\"testId\"));\r\n      \r\n      \r\n      setTestData({\r\n        round_1: data.round_1 || [],\r\n        round_2: data.round_2 || [],\r\n        round_3: data.round_3 || {},\r\n        round_4: data.round_4 || {},\r\n      });\r\n      setIsDataExisted(true);\r\n    } catch (error) {\r\n      console.error(\"Error fetching test questions:\", error);\r\n      setTestData({\r\n        round_1: [],\r\n        round_2: [],\r\n        round_3: {},\r\n        round_4: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  // Handle file upload to S3\r\n  const handleFileUpload = async (question: Question, type: string | undefined, event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    // Validate file type against question type\r\n    const fileExtension = file.name.split('.').pop()?.toLowerCase();\r\n    console.log(\"file.name.\", file.name);\r\n\r\n    console.log(\"fileExtension\", fileExtension);\r\n\r\n    console.log(\"question type inside function\", type);\r\n\r\n    // const allowedExtensions = question.type?.toLowerCase().split(',') || [];\r\n    // if (!allowedExtensions.includes(fileExtension || '')) {\r\n    //   alert(`File type must be one of: ${allowedExtensions.join(', ')}`);\r\n    //   return;\r\n    // }\r\n\r\n    try {\r\n      const key = await uploadFile(file, `Question ${question.questionId}`);\r\n      console.log(\"question\", question);\r\n\r\n      const updatedQuestion = { ...question, imgUrl: `https://d1fc7d6en42vzg.cloudfront.net/${key}` };\r\n      console.log(\"updatedQuestion\", updatedQuestion);\r\n\r\n      await updateQuestion(updatedQuestion, question.questionId || \"\");\r\n\r\n      // Update testData\r\n      const updatedTestData = { ...testData };\r\n      const updateQuestionInList = (questions: Question[]) =>\r\n        questions.map((q) =>\r\n          q.testId === question.testId && q.questionId === question.questionId\r\n            ? updatedQuestion\r\n            : q\r\n        );\r\n\r\n      updatedTestData.round_1 = updateQuestionInList(updatedTestData.round_1);\r\n      updatedTestData.round_2 = updateQuestionInList(updatedTestData.round_2);\r\n      for (const packetName in updatedTestData.round_3) {\r\n        updatedTestData.round_3[packetName] = updateQuestionInList(updatedTestData.round_3[packetName]);\r\n      }\r\n      for (const difficulty in updatedTestData.round_4) {\r\n        updatedTestData.round_4[difficulty] = updateQuestionInList(updatedTestData.round_4[difficulty]);\r\n      }\r\n      setTestData(updatedTestData);\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n      alert(\"Failed to upload file.\");\r\n    }\r\n  };\r\n\r\n  const openModal = (question?: Question, round?: string, groupName?: string) => {\r\n    if (question) {\r\n      // Edit mode - load selected question data\r\n      setSelectedQuestion(question);\r\n      setEditedQuestion({\r\n        question: question.question,\r\n        answer: question.answer,\r\n        type: question.type || '',\r\n        imgUrl: question.imgUrl || '',\r\n        round: question.round || '',\r\n        groupName: question.groupName || '',\r\n      });\r\n    } else {\r\n      // Add mode - start fresh, optionally with round/groupName info\r\n      setSelectedQuestion(null);\r\n      setEditedQuestion({\r\n        question: '',\r\n        answer: '',\r\n        type: '',\r\n        imgUrl: '',\r\n        round: round || '',\r\n        groupName: groupName || '',\r\n      });\r\n    }\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n\r\n  // Open modal for editing question\r\n  const handleEditClick = (question: Question) => {\r\n    setSelectedQuestion(question);\r\n    setEditedQuestion({\r\n      question: question.question,\r\n      answer: question.answer,\r\n      type: question.type || '',\r\n      imgUrl: question.imgUrl || '',\r\n    });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Open modal for adding new question\r\n  const handleAddQuestion = (round: string, groupName?: string) => {\r\n    setSelectedQuestion(null);\r\n    setEditedQuestion({ round, groupName });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setEditedQuestion((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    if (!selectedQuestion && !editedQuestion.round) return;\r\n\r\n    if (selectedQuestion) {\r\n      // Update existing question\r\n      await updateQuestion(editedQuestion, selectedQuestion.questionId || \"\");\r\n      const updatedTestData = { ...testData };\r\n      const updateQuestionInList = (questions: Question[]) =>\r\n        questions.map((q) =>\r\n          q.testId === selectedQuestion.testId && q.questionId === selectedQuestion.questionId\r\n            ? { ...q, ...editedQuestion }\r\n            : q\r\n        );\r\n\r\n      updatedTestData.round_1 = updateQuestionInList(updatedTestData.round_1);\r\n      updatedTestData.round_2 = updateQuestionInList(updatedTestData.round_2);\r\n      for (const packetName in updatedTestData.round_3) {\r\n        updatedTestData.round_3[packetName] = updateQuestionInList(updatedTestData.round_3[packetName]);\r\n      }\r\n      for (const difficulty in updatedTestData.round_4) {\r\n        updatedTestData.round_4[difficulty] = updateQuestionInList(updatedTestData.round_4[difficulty]);\r\n      }\r\n      setTestData(updatedTestData);\r\n    } else {\r\n      await addNewQuestion\r\n      // Add new question (stub - requires backend API)\r\n      console.log(\"Add new question:\", editedQuestion);\r\n      // Implement backend call to add new question\r\n    }\r\n\r\n    setIsModalOpen(false);\r\n    setSelectedQuestion(null);\r\n    setEditedQuestion({});\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedQuestion(null);\r\n    setEditedQuestion({});\r\n  };\r\n\r\n  // Render table for questions\r\n  const renderTable = (questions: Question[], title: string, round: string, groupName?: string) => {\r\n    if (questions.length === 0 && !groupName) return null;\r\n\r\n    return (\r\n      <div className=\"mb-8\">\r\n        {title && <h3 className=\"text-2xl font-semibold text-gray-800 mb-4\">{title}</h3>}\r\n        {questions.length > 0 && (\r\n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n            <div className=\"grid grid-cols-6 gap-4 p-4 bg-gray-50 font-semibold text-gray-700\">\r\n              <div>#</div>\r\n              <div>Question</div>\r\n              <div>Answer</div>\r\n              <div>Type</div>\r\n              <div>URL</div>\r\n              <div>Action</div>\r\n            </div>\r\n            {questions.map((question, index) => {\r\n              return (\r\n\r\n                <div key={question.testId + index} className=\"grid grid-cols-6 gap-4 p-4 border-t hover:bg-gray-50\">\r\n                  <div className=\"text-gray-600\">{index + 1}</div>\r\n                  <div className=\"text-gray-800\">{question.question}</div>\r\n                  <div className=\"text-gray-800\">{question.answer}</div>\r\n                  <div className=\"text-gray-600\">{question.type || 'N/A'}</div>\r\n\r\n                  <div className=\"flex flex-col space-y-2 items-start max-w-full\">\r\n                    <button\r\n                      className=\"bg-blue-500 text-white px-3 py-1 rounded-lg hover:bg-blue-600 transition\"\r\n                      onClick={() => fileInputRefs.current[question.questionId || 0]?.click()}\r\n                    >\r\n                      Upload\r\n                    </button>\r\n\r\n                    <span className=\"text-gray-600 break-words max-w-full\">{question.imgUrl || 'N/A'}</span>\r\n\r\n                    <input\r\n                      type=\"file\"\r\n                      ref={(el) => {\r\n                        fileInputRefs.current[question.questionId || 0] = el;\r\n                      }}\r\n                      className=\"hidden\"\r\n                      onChange={(e) => handleFileUpload(question, question.type, e)}\r\n                    />\r\n                  </div>\r\n\r\n\r\n                  <div>\r\n                    <button\r\n                      className=\"bg-yellow-500 text-white px-3 py-1 rounded-lg hover:bg-yellow-600 transition\"\r\n                      onClick={() => openModal(question)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )\r\n\r\n            })}\r\n          </div>\r\n        )}\r\n        <button\r\n          className=\"mt-4 bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition\"\r\n          onClick={() => openModal(undefined,round, groupName)}\r\n        >\r\n          Add New Question\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Render grouped tables for round_3 and round_4\r\n  const renderGroupedTable = (groups: { [key: string]: Question[] }, roundTitle: string, round: string) => {\r\n    if (Object.keys(groups).length === 0) return null;\r\n\r\n    return (\r\n      <div className=\"mb-8\">\r\n        <h3 className=\"text-2xl font-semibold text-gray-800 mb-4\">{roundTitle}</h3>\r\n        {Object.entries(groups).map(([groupName, questions]) => (\r\n          <div key={groupName} className=\"mb-6\">\r\n            <h4 className=\"text-xl font-medium text-gray-700 mb-3\">{groupName}</h4>\r\n            {renderTable(questions, \"\", round, groupName)}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-6 bg-gray-100 min-h-screen\">\r\n      <div className=\"bg-white p-8 rounded-xl shadow-lg\">\r\n        <h2 className=\"text-3xl font-bold text-gray-800 mb-6\">Uploaded Exams</h2>\r\n        <div className=\"mb-6\">\r\n          <label htmlFor=\"testSelect\" className=\"block text-lg font-medium text-gray-700 mb-2\">\r\n            Select Test\r\n          </label>\r\n          <select\r\n            id=\"testSelect\"\r\n            name=\"testSelect\"\r\n            className=\"border border-gray-300 rounded-lg p-3 w-full bg-white focus:ring-2 focus:ring-blue-500 transition\"\r\n            value={selectedTestName}\r\n            onChange={handleTestChange}\r\n          >\r\n            <option value=\"\" disabled>\r\n              -- Select a Test --\r\n            </option>\r\n            {testList.map((test) => (\r\n              <option key={test} value={test}>\r\n                {test}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition mb-8\"\r\n          onClick={handleViewTest}\r\n        >\r\n          View Test\r\n        </button>\r\n\r\n        {/* Render rounds */}\r\n        {renderTable(testData.round_1, \"Round 1\", \"round_1\")}\r\n        {renderTable(testData.round_2, \"Round 2\", \"round_2\")}\r\n        {renderGroupedTable(testData.round_3, \"Round 3\", \"round_3\")}\r\n        {renderGroupedTable(testData.round_4, \"Round 4\", \"round_4\")}\r\n\r\n        {testData.round_1.length === 0 &&\r\n          testData.round_2.length === 0 &&\r\n          Object.keys(testData.round_3).length === 0 &&\r\n          Object.keys(testData.round_4).length === 0 && (\r\n            <p className=\"text-gray-500 text-center\">No questions available for this test.</p>\r\n          )}\r\n\r\n        {/* Modal for editing/adding */}\r\n        {isModalOpen && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white p-8 rounded-xl shadow-2xl w-full max-w-lg\">\r\n              <h3 className=\"text-2xl font-semibold text-gray-800 mb-6\">\r\n                {selectedQuestion ? 'Edit Question' : 'Add New Question'}\r\n              </h3>\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Question</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"question\"\r\n                    value={editedQuestion.question || ''}\r\n                    onChange={handleInputChange}\r\n                    className=\"border border-gray-300 rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 transition\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Answer</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"answer\"\r\n                    value={editedQuestion.answer || ''}\r\n                    onChange={handleInputChange}\r\n                    className=\"border border-gray-300 rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 transition\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Type</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"type\"\r\n                    value={editedQuestion.type || ''}\r\n                    onChange={handleInputChange}\r\n                    className=\"border border-gray-300 rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 transition\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Image URL</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"imgUrl\"\r\n                    value={editedQuestion.imgUrl || ''}\r\n                    onChange={handleInputChange}\r\n                    className=\"border border-gray-300 rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 transition\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex justify-end space-x-3 mt-6\">\r\n                <button\r\n                  className=\"bg-gray-500 text-white px-6 py-2 rounded-lg hover:bg-gray-600 transition\"\r\n                  onClick={handleCancel}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-600 transition\"\r\n                  onClick={handleConfirm}\r\n                >\r\n                  {selectedQuestion ? 'Confirm' : 'Add'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewTest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}