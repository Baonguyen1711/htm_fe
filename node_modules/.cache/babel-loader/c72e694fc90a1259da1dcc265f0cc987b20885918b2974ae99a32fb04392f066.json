{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\components\\\\HostAnswer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHost } from '../context/hostContext';\nimport { usePlayer } from '../context/playerContext';\nimport { updateScore } from '../pages/Host/Management/service';\nimport { listenToBroadcastedAnswer, listenToScores } from '../services/firebaseServices';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HostAnswer() {\n  _s();\n  const [turn, setTurn] = useState(1);\n  const {\n    playersArray,\n    playerFlashes,\n    answerList,\n    setAnswerList,\n    selectedTopic\n  } = usePlayer();\n  const {\n    handleScoreAdjust,\n    playerScores,\n    triggerPlayerFlash,\n    setPlayerScores,\n    mode,\n    handleNextQuestion\n  } = useHost();\n  const [searchParams] = useSearchParams();\n  const round = searchParams.get(\"round\") || \"1\";\n  const roomId = searchParams.get(\"roomId\") || \"1\";\n  useEffect(() => {\n    setTurn(0);\n  }, [round]);\n  useEffect(() => {\n    const currentScoreList = localStorage.getItem(\"scoreList\");\n    if (currentScoreList) {\n      setPlayerScores(JSON.parse(currentScoreList));\n    }\n  }, [round]);\n  useEffect(() => {\n    // if (mode !== \"auto\") return\n\n    const unsubscribeScores = listenToScores(roomId, data => {\n      console.log(\"score data\", data);\n      setPlayerScores(data);\n    });\n    return () => unsubscribeScores();\n  }, [round, roomId]);\n  useEffect(() => {\n    const unsubscribeBroadcastedAnswer = listenToBroadcastedAnswer(roomId, answerList => {\n      setAnswerList(answerList);\n      console.log(\"answerList\", answerList);\n    });\n    return () => {\n      unsubscribeBroadcastedAnswer();\n    };\n  }, [roomId]);\n  const spots = [1, 2, 3, 4];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        alert('Score Updated!');\n        updateScore(roomId, playerScores, \"manual\", round);\n        const newScoreList = [...playerScores];\n        for (let score of newScoreList) {\n          score[\"isCorrect\"] = false;\n          score[\"isModified\"] = false;\n        }\n        setPlayerScores(newScoreList);\n        // localStorage.setItem(\"scoreList\", JSON.stringify(newScoreList));\n      },\n      className: \"w-full bg-gradient-to-r from-green-600 to-green-500 hover:from-green-700 hover:to-green-600 text-white py-3 px-6 rounded-xl shadow-lg font-semibold text-lg mb-6 transition-all duration-200\",\n      children: \"X\\xE1c nh\\u1EADn \\u0111i\\u1EC3m\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), round === \"3\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          updateScore(roomId, [], \"auto\", round, turn.toString(), \"true\");\n          await handleNextQuestion(selectedTopic);\n          // const newScoreList = [...playerScores]\n          // for (let score of newScoreList) {\n          //     score[\"isCorrect\"] = true;\n          //     score[\"isModified\"] = false;\n          // }\n          // setPlayerScores(newScoreList)\n        },\n        className: \"flex-1 bg-green-600 hover:bg-green-700 text-white py-3 px-6 rounded-xl shadow-lg font-semibold text-lg transition-all duration-200\",\n        children: \"\\u0110\\xFAng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          await handleNextQuestion(selectedTopic);\n          updateScore(roomId, [], \"auto\", round, turn.toString(), \"false\");\n          // const newScoreList = [...playerScores]\n          // for (let score of newScoreList) {\n          //     score[\"isCorrect\"] = false;\n          //     score[\"isModified\"] = false;\n          // }\n          // setPlayerScores(newScoreList)\n        },\n        className: \"flex-1 bg-red-600 hover:bg-red-700 text-white py-3 px-6 rounded-xl shadow-lg font-semibold text-lg transition-all duration-200\",\n        children: \"Sai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this) : round === \"4\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-2 mb-6\",\n      children: [{\n        label: \"Đúng\",\n        color: \"bg-green-600 hover:bg-green-700\"\n      }, {\n        label: \"Sai\",\n        color: \"bg-red-600 hover:bg-red-700\"\n      }, {\n        label: \"NSHV Đúng\",\n        color: \"bg-green-500 hover:bg-green-600\"\n      }, {\n        label: \"NSHV Sai\",\n        color: \"bg-red-500 hover:bg-red-600\"\n      }, {\n        label: \"Giành lượt Đúng\",\n        color: \"bg-green-400 hover:bg-green-500\"\n      }, {\n        label: \"Giành lượt Sai\",\n        color: \"bg-red-400 hover:bg-red-500\"\n      }].map((btn, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          alert(`${btn.label} đã được chọn!`);\n          // your updateScore / next question logic here\n        },\n        className: `flex-1 min-w-[120px] ${btn.color} text-white py-2 px-3 rounded-xl shadow-lg font-semibold text-sm transition-all duration-200`,\n        children: btn.label\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        alert('Score Updated!');\n        updateScore(roomId, playerScores, \"auto\", round);\n        // const newScoreList = [...playerScores]\n        // for (let score of newScoreList) {\n        //     score[\"isCorrect\"] = false;\n        //     score[\"isModified\"] = false\n        // }\n        // setPlayerScores(newScoreList)\n        // localStorage.setItem(\"scoreList\", JSON.stringify(newScoreList));\n      },\n      className: \"w-full bg-gradient-to-r from-green-600 to-green-500 hover:from-green-700 hover:to-green-600 text-white py-3 px-6 rounded-xl shadow-lg font-semibold text-lg mb-6 transition-all duration-200\",\n      children: \"Ch\\u1EA5m \\u0111i\\u1EC3m t\\u1EF1 \\u0111\\u1ED9ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-4 gap-6 mt-4 w-full\",\n      children: spots.map(spotNumber => {\n        const storedPlayers = localStorage.getItem(\"playerList\");\n        const array = playersArray !== null ? playersArray : storedPlayers ? JSON.parse(storedPlayers) : [];\n        const player = array.find(p => parseInt(p.stt) === spotNumber);\n        const playerScore = playerScores.find(score => score.stt === spotNumber.toString());\n        const answer = Array.isArray(answerList) && answerList.length !== 0 ? answerList.find(answer => parseInt(answer.stt) === spotNumber) : null;\n        if (player) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex flex-col items-center justify-between bg-slate-800/80 rounded-xl p-4 min-h-[240px] shadow-md transition-all duration-200 ${playerFlashes[spotNumber]}`,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: player.avatar,\n              alt: \"Player\",\n              className: \"w-16 h-16 rounded-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-white mt-2 min-h-[1.5rem] text-center\",\n              children: (answer === null || answer === void 0 ? void 0 : answer.answer) || \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-white mt-2 text-2xl font-bold\",\n              children: playerScore ? playerScore.score : \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-white text-center\",\n              children: `player_${player.stt}: ${player.userName}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-2 mt-2\",\n              children: [[5, 10].map(amount => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleScoreAdjust(spotNumber, amount, true, player.userName, player.avatar),\n                className: \"bg-green-500 hover:bg-green-600 text-white p-2 rounded-md shadow\",\n                children: [\"+\", amount]\n              }, amount, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 45\n              }, this)), [5, 10].map(amount => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleScoreAdjust(spotNumber, -amount, false, player.userName, player.avatar),\n                className: \"bg-red-500 hover:bg-red-600 text-white p-2 rounded-md shadow\",\n                children: [\"-\", amount]\n              }, -amount, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 37\n            }, this), round === \"3\" || round === \"4\" && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setTurn(player.stt);\n              },\n              className: `mt-2 ${turn === player.stt ? 'bg-red-600 hover:bg-red-700' : 'bg-blue-500 hover:bg-blue-600'} text-white py-2 px-4 rounded-md shadow transition-all duration-200`,\n              children: turn === player.stt ? 'Đang thi' : 'Cập nhật lượt thi'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 41\n            }, this)]\n          }, spotNumber, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center justify-between bg-slate-800/80 rounded-xl p-4 min-h-[240px] shadow-md opacity-50\"\n        }, spotNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(HostAnswer, \"gJmj6fA0WKmo+w4pSHPmrkLx3Ao=\", false, function () {\n  return [usePlayer, useHost, useSearchParams];\n});\n_c = HostAnswer;\nexport default HostAnswer;\nvar _c;\n$RefreshReg$(_c, \"HostAnswer\");","map":{"version":3,"names":["React","useEffect","useState","useHost","usePlayer","updateScore","listenToBroadcastedAnswer","listenToScores","useSearchParams","jsxDEV","_jsxDEV","Fragment","_Fragment","HostAnswer","_s","turn","setTurn","playersArray","playerFlashes","answerList","setAnswerList","selectedTopic","handleScoreAdjust","playerScores","triggerPlayerFlash","setPlayerScores","mode","handleNextQuestion","searchParams","round","get","roomId","currentScoreList","localStorage","getItem","JSON","parse","unsubscribeScores","data","console","log","unsubscribeBroadcastedAnswer","spots","children","onClick","alert","newScoreList","score","className","fileName","_jsxFileName","lineNumber","columnNumber","toString","label","color","map","btn","idx","spotNumber","storedPlayers","array","player","find","p","parseInt","stt","playerScore","answer","Array","isArray","length","src","avatar","alt","userName","amount","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/components/HostAnswer.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useHost } from '../context/hostContext';\r\nimport { usePlayer } from '../context/playerContext';\r\nimport { User } from '../type';\r\nimport { updateScore } from '../pages/Host/Management/service';\r\nimport { listenToBroadcastedAnswer, listenToScores } from '../services/firebaseServices';\r\nimport { Answer, Score } from '../type';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\n\r\nfunction HostAnswer() {\r\n    const [turn, setTurn] = useState<number>(1)\r\n    const { playersArray, playerFlashes, answerList, setAnswerList, selectedTopic } = usePlayer()\r\n    const { handleScoreAdjust, playerScores, triggerPlayerFlash, setPlayerScores, mode, handleNextQuestion } = useHost()\r\n    const [searchParams] = useSearchParams()\r\n    const round = searchParams.get(\"round\") || \"1\"\r\n    const roomId = searchParams.get(\"roomId\") || \"1\"\r\n\r\n    useEffect(() => {\r\n        setTurn(0)\r\n    }, [round])\r\n\r\n    useEffect(() => {\r\n\r\n        const currentScoreList = localStorage.getItem(\"scoreList\");\r\n        if (currentScoreList) {\r\n            setPlayerScores(JSON.parse(currentScoreList));\r\n        }\r\n    }, [round]);\r\n\r\n    useEffect(() => {\r\n        // if (mode !== \"auto\") return\r\n\r\n        const unsubscribeScores = listenToScores(roomId, (data) => {\r\n            console.log(\"score data\", data);\r\n\r\n            setPlayerScores(data)\r\n\r\n        })\r\n\r\n        return () => unsubscribeScores()\r\n    }, [round, roomId])\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribeBroadcastedAnswer = listenToBroadcastedAnswer(roomId, (answerList) => {\r\n            setAnswerList(answerList)\r\n            console.log(\"answerList\", answerList)\r\n        })\r\n\r\n        return () => {\r\n            unsubscribeBroadcastedAnswer();\r\n        };\r\n    }, [roomId]);\r\n    const spots = [1, 2, 3, 4]\r\n    return (\r\n        <>\r\n            <button\r\n                onClick={() => {\r\n                    alert('Score Updated!')\r\n                    updateScore(roomId, playerScores, \"manual\", round)\r\n                    const newScoreList = [...playerScores]\r\n                    for (let score of newScoreList) {\r\n                        score[\"isCorrect\"] = false;\r\n                        score[\"isModified\"] = false\r\n                    }\r\n                    setPlayerScores(newScoreList)\r\n                    // localStorage.setItem(\"scoreList\", JSON.stringify(newScoreList));\r\n                }}\r\n                className=\"w-full bg-gradient-to-r from-green-600 to-green-500 hover:from-green-700 hover:to-green-600 text-white py-3 px-6 rounded-xl shadow-lg font-semibold text-lg mb-6 transition-all duration-200\"\r\n            >\r\n                Xác nhận điểm\r\n            </button>\r\n\r\n            {round === \"3\" ? (\r\n                <div className=\"flex gap-4 mb-6\">\r\n                    <button\r\n                        onClick={async () => {\r\n                            updateScore(roomId, [], \"auto\", round, turn.toString(), \"true\")\r\n                            await handleNextQuestion(selectedTopic)\r\n                            // const newScoreList = [...playerScores]\r\n                            // for (let score of newScoreList) {\r\n                            //     score[\"isCorrect\"] = true;\r\n                            //     score[\"isModified\"] = false;\r\n                            // }\r\n                            // setPlayerScores(newScoreList)\r\n                        }}\r\n                        className=\"flex-1 bg-green-600 hover:bg-green-700 text-white py-3 px-6 rounded-xl shadow-lg font-semibold text-lg transition-all duration-200\"\r\n                    >\r\n                        Đúng\r\n                    </button>\r\n                    <button\r\n                        onClick={async () => {\r\n                            await handleNextQuestion(selectedTopic)\r\n                            updateScore(roomId, [], \"auto\", round, turn.toString(), \"false\")\r\n                            // const newScoreList = [...playerScores]\r\n                            // for (let score of newScoreList) {\r\n                            //     score[\"isCorrect\"] = false;\r\n                            //     score[\"isModified\"] = false;\r\n                            // }\r\n                            // setPlayerScores(newScoreList)\r\n                        }}\r\n                        className=\"flex-1 bg-red-600 hover:bg-red-700 text-white py-3 px-6 rounded-xl shadow-lg font-semibold text-lg transition-all duration-200\"\r\n                    >\r\n                        Sai\r\n                    </button>\r\n                </div>\r\n            ) :\r\n                round === \"4\" ? (\r\n                    <div className=\"flex flex-wrap gap-2 mb-6\">\r\n                        {[\r\n                            { label: \"Đúng\", color: \"bg-green-600 hover:bg-green-700\" },\r\n                            { label: \"Sai\", color: \"bg-red-600 hover:bg-red-700\" },\r\n                            { label: \"NSHV Đúng\", color: \"bg-green-500 hover:bg-green-600\" },\r\n                            { label: \"NSHV Sai\", color: \"bg-red-500 hover:bg-red-600\" },\r\n                            { label: \"Giành lượt Đúng\", color: \"bg-green-400 hover:bg-green-500\" },\r\n                            { label: \"Giành lượt Sai\", color: \"bg-red-400 hover:bg-red-500\" }\r\n                        ].map((btn, idx) => (\r\n                            <button\r\n                                key={idx}\r\n                                onClick={() => {\r\n                                    alert(`${btn.label} đã được chọn!`);\r\n                                    // your updateScore / next question logic here\r\n                                }}\r\n                                className={`flex-1 min-w-[120px] ${btn.color} text-white py-2 px-3 rounded-xl shadow-lg font-semibold text-sm transition-all duration-200`}\r\n                            >\r\n                                {btn.label}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                ) :\r\n                    (\r\n                        <button\r\n                            onClick={() => {\r\n                                alert('Score Updated!')\r\n                                updateScore(roomId, playerScores, \"auto\", round)\r\n                                // const newScoreList = [...playerScores]\r\n                                // for (let score of newScoreList) {\r\n                                //     score[\"isCorrect\"] = false;\r\n                                //     score[\"isModified\"] = false\r\n                                // }\r\n                                // setPlayerScores(newScoreList)\r\n                                // localStorage.setItem(\"scoreList\", JSON.stringify(newScoreList));\r\n                            }}\r\n                            className=\"w-full bg-gradient-to-r from-green-600 to-green-500 hover:from-green-700 hover:to-green-600 text-white py-3 px-6 rounded-xl shadow-lg font-semibold text-lg mb-6 transition-all duration-200\"\r\n                        >\r\n                            Chấm điểm tự động\r\n                        </button>\r\n                    )}\r\n\r\n\r\n            <div className=\"grid grid-cols-4 gap-6 mt-4 w-full\">\r\n                {\r\n                    spots.map((spotNumber: number) => {\r\n                        const storedPlayers = localStorage.getItem(\"playerList\");\r\n                        const array = playersArray !== null\r\n                            ? playersArray\r\n                            : (storedPlayers ? JSON.parse(storedPlayers) : []);\r\n                        const player = array.find((p: User) => parseInt(p.stt) === spotNumber);\r\n                        const playerScore: Score = playerScores.find((score: Score) => score.stt === spotNumber.toString());\r\n                        const answer = Array.isArray(answerList) && answerList.length !== 0\r\n                            ? answerList.find((answer: Answer) => parseInt(answer.stt) === spotNumber)\r\n                            : null;\r\n                        if (player) {\r\n                            return (\r\n                                <div\r\n                                    key={spotNumber}\r\n                                    className={`flex flex-col items-center justify-between bg-slate-800/80 rounded-xl p-4 min-h-[240px] shadow-md transition-all duration-200 ${playerFlashes[spotNumber]}`}\r\n                                >\r\n                                    <img\r\n                                        src={player.avatar}\r\n                                        alt=\"Player\"\r\n                                        className=\"w-16 h-16 rounded-full\"\r\n                                    />\r\n                                    <p className=\"text-white mt-2 min-h-[1.5rem] text-center\">\r\n                                        {answer?.answer || \"\"}\r\n                                    </p>\r\n                                    <p className=\"text-white mt-2 text-2xl font-bold\">\r\n                                        {playerScore ? playerScore.score : \"0\"}\r\n                                    </p>\r\n                                    <p className=\"text-white text-center\">{`player_${player.stt}: ${player.userName}`}</p>\r\n                                    <div className=\"flex gap-2 mt-2\">\r\n                                        {[5, 10].map((amount) => (\r\n                                            <button\r\n                                                key={amount}\r\n                                                onClick={() => handleScoreAdjust(spotNumber, amount, true, player.userName, player.avatar)}\r\n                                                className=\"bg-green-500 hover:bg-green-600 text-white p-2 rounded-md shadow\"\r\n                                            >\r\n                                                +{amount}\r\n                                            </button>\r\n                                        ))}\r\n                                        {[5, 10].map((amount) => (\r\n                                            <button\r\n                                                key={-amount}\r\n                                                onClick={() => handleScoreAdjust(spotNumber, -amount, false, player.userName, player.avatar)}\r\n                                                className=\"bg-red-500 hover:bg-red-600 text-white p-2 rounded-md shadow\"\r\n                                            >\r\n                                                -{amount}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n\r\n                                    {round === \"3\" || round === \"4\" && (\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                setTurn(player.stt);\r\n                                            }}\r\n                                            className={`mt-2 ${turn === player.stt\r\n                                                ? 'bg-red-600 hover:bg-red-700'\r\n                                                : 'bg-blue-500 hover:bg-blue-600'\r\n                                                } text-white py-2 px-4 rounded-md shadow transition-all duration-200`}\r\n                                        >\r\n                                            {turn === player.stt ? 'Đang thi' : 'Cập nhật lượt thi'}\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                            )\r\n                        }\r\n                        return (\r\n                            <div\r\n                                key={spotNumber}\r\n                                className=\"flex flex-col items-center justify-between bg-slate-800/80 rounded-xl p-4 min-h-[240px] shadow-md opacity-50\"\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HostAnswer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}