{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\pages\\\\Host\\\\Test\\\\ViewTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { getTest, getTestByUserId, updateQuestion } from './service';\nimport { uploadFile } from '../../../services/uploadAssestServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewTest = () => {\n  _s();\n  const [testList, setTestList] = useState([]);\n  const [selectedTestName, setSelectedTestName] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const [editedQuestion, setEditedQuestion] = useState({});\n  const [isDataExisted, setIsDataExisted] = useState(false);\n  const [testData, setTestData] = useState({\n    round_1: [],\n    round_2: [],\n    round_3: {},\n    round_4: {}\n  });\n  const fileInputRefs = useRef({});\n\n  // Fetch test list on mount\n  useEffect(() => {\n    const getTestList = async () => {\n      try {\n        const testList = await getTestByUserId();\n        localStorage.setItem(\"testList\", JSON.stringify(testList));\n        setTestList(testList);\n      } catch (error) {\n        console.error(\"Error fetching test list:\", error);\n      }\n    };\n    getTestList();\n  }, []);\n  const handleTestChange = event => {\n    setSelectedTestName(event.target.value);\n    setIsDataExisted(false);\n  };\n  const handleViewTest = async () => {\n    if (!selectedTestName) {\n      alert(\"Please select a test first!\");\n      return;\n    }\n    if (isDataExisted) return;\n    try {\n      const data = await getTest(selectedTestName);\n      setTestData({\n        round_1: data.round_1 || [],\n        round_2: data.round_2 || [],\n        round_3: data.round_3 || {},\n        round_4: data.round_4 || {}\n      });\n      setIsDataExisted(true);\n    } catch (error) {\n      console.error(\"Error fetching test questions:\", error);\n      setTestData({\n        round_1: [],\n        round_2: [],\n        round_3: {},\n        round_4: {}\n      });\n    }\n  };\n\n  // Handle file upload to S3\n  const handleFileUpload = async (question, type, event) => {\n    var _event$target$files, _file$name$split$pop, _question$type;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n\n    // Validate file type against question type\n    const fileExtension = (_file$name$split$pop = file.name.split('.').pop()) === null || _file$name$split$pop === void 0 ? void 0 : _file$name$split$pop.toLowerCase();\n    console.log(\"question type inside function\", type);\n    const allowedExtensions = ((_question$type = question.type) === null || _question$type === void 0 ? void 0 : _question$type.toLowerCase().split(',')) || [];\n    if (!allowedExtensions.includes(fileExtension || '')) {\n      alert(`File type must be one of: ${allowedExtensions.join(', ')}`);\n      return;\n    }\n    try {\n      const key = await uploadFile(file, `Question ${question.questionId}`);\n      const updatedQuestion = {\n        ...question,\n        imgUrl: key\n      };\n      await updateQuestion({\n        imgUrl: key\n      }, question.questionId || \"\");\n\n      // Update testData\n      const updatedTestData = {\n        ...testData\n      };\n      const updateQuestionInList = questions => questions.map(q => q.testId === question.testId && q.questionId === question.questionId ? updatedQuestion : q);\n      updatedTestData.round_1 = updateQuestionInList(updatedTestData.round_1);\n      updatedTestData.round_2 = updateQuestionInList(updatedTestData.round_2);\n      for (const packetName in updatedTestData.round_3) {\n        updatedTestData.round_3[packetName] = updateQuestionInList(updatedTestData.round_3[packetName]);\n      }\n      for (const difficulty in updatedTestData.round_4) {\n        updatedTestData.round_4[difficulty] = updateQuestionInList(updatedTestData.round_4[difficulty]);\n      }\n      setTestData(updatedTestData);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      alert(\"Failed to upload file.\");\n    }\n  };\n\n  // Open modal for editing question\n  const handleEditClick = question => {\n    setSelectedQuestion(question);\n    setEditedQuestion({\n      question: question.question,\n      answer: question.answer,\n      type: question.type || '',\n      imgUrl: question.imgUrl || ''\n    });\n    setIsModalOpen(true);\n  };\n\n  // Open modal for adding new question\n  const handleAddQuestion = (round, groupName) => {\n    setSelectedQuestion(null);\n    setEditedQuestion({\n      round,\n      groupName\n    });\n    setIsModalOpen(true);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedQuestion(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleConfirm = async () => {\n    if (!selectedQuestion && !editedQuestion.round) return;\n    if (selectedQuestion) {\n      // Update existing question\n      await updateQuestion(editedQuestion, selectedQuestion.questionId || \"\");\n      const updatedTestData = {\n        ...testData\n      };\n      const updateQuestionInList = questions => questions.map(q => q.testId === selectedQuestion.testId && q.questionId === selectedQuestion.questionId ? {\n        ...q,\n        ...editedQuestion\n      } : q);\n      updatedTestData.round_1 = updateQuestionInList(updatedTestData.round_1);\n      updatedTestData.round_2 = updateQuestionInList(updatedTestData.round_2);\n      for (const packetName in updatedTestData.round_3) {\n        updatedTestData.round_3[packetName] = updateQuestionInList(updatedTestData.round_3[packetName]);\n      }\n      for (const difficulty in updatedTestData.round_4) {\n        updatedTestData.round_4[difficulty] = updateQuestionInList(updatedTestData.round_4[difficulty]);\n      }\n      setTestData(updatedTestData);\n    } else {\n      // Add new question (stub - requires backend API)\n      console.log(\"Add new question:\", editedQuestion);\n      // Implement backend call to add new question\n    }\n    setIsModalOpen(false);\n    setSelectedQuestion(null);\n    setEditedQuestion({});\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n    setSelectedQuestion(null);\n    setEditedQuestion({});\n  };\n\n  // Render table for questions\n  const renderTable = (questions, title, round, groupName) => {\n    if (questions.length === 0 && !groupName) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [title && /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-semibold text-gray-800 mb-4\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-6 gap-4 p-4 bg-gray-50 font-semibold text-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), questions.map((question, index) => {\n          {\n            console.log(\"question.type\", question.type);\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-6 gap-4 p-4 border-t hover:bg-gray-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-600\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-800\",\n              children: question.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-800\",\n              children: question.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-600\",\n              children: question.type || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600 truncate\",\n                children: question.imgUrl || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                ref: el => fileInputRefs.current[question.testId] = el,\n                className: \"hidden\",\n                onChange: e => handleFileUpload(question, question.type, e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  var _fileInputRefs$curren;\n                  return (_fileInputRefs$curren = fileInputRefs.current[question.testId]) === null || _fileInputRefs$curren === void 0 ? void 0 : _fileInputRefs$curren.click();\n                },\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-yellow-500 text-white px-3 py-1 rounded-lg hover:bg-yellow-600 transition\",\n                onClick: () => handleEditClick(question),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this)]\n          }, question.testId + index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition\",\n        onClick: () => handleAddQuestion(round, groupName),\n        children: \"Add New Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render grouped tables for round_3 and round_4\n  const renderGroupedTable = (groups, roundTitle, round) => {\n    if (Object.keys(groups).length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-semibold text-gray-800 mb-4\",\n        children: roundTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), Object.entries(groups).map(([groupName, questions]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-xl font-medium text-gray-700 mb-3\",\n          children: groupName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), renderTable(questions, \"\", round, groupName)]\n      }, groupName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto p-6 bg-gray-100 min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-xl shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold text-gray-800 mb-6\",\n        children: \"Uploaded Exams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"testSelect\",\n          className: \"block text-lg font-medium text-gray-700 mb-2\",\n          children: \"Select Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"testSelect\",\n          name: \"testSelect\",\n          className: \"border border-gray-300 rounded-lg p-3 w-full bg-white focus:ring-2 focus:ring-blue-500 transition\",\n          value: selectedTestName,\n          onChange: handleTestChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"-- Select a Test --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), testList.map(test => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: test,\n            children: test\n          }, test, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition mb-8\",\n        onClick: handleViewTest,\n        children: \"View Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), renderTable(testData.round_1, \"Round 1\", \"round_1\"), renderTable(testData.round_2, \"Round 2\", \"round_2\"), renderGroupedTable(testData.round_3, \"Round 3\", \"round_3\"), renderGroupedTable(testData.round_4, \"Round 4\", \"round_4\"), testData.round_1.length === 0 && testData.round_2.length === 0 && Object.keys(testData.round_3).length === 0 && Object.keys(testData.round_4).length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-center\",\n        children: \"No questions available for this test.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-8 rounded-xl shadow-2xl w-full max-w-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-semibold text-gray-800 mb-6\",\n            children: selectedQuestion ? 'Edit Question' : 'Add New Question'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"question\",\n                value: editedQuestion.question || '',\n                onChange: handleInputChange,\n                className: \"border border-gray-300 rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 transition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"answer\",\n                value: editedQuestion.answer || '',\n                onChange: handleInputChange,\n                className: \"border border-gray-300 rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 transition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"type\",\n                value: editedQuestion.type || '',\n                onChange: handleInputChange,\n                className: \"border border-gray-300 rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 transition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Image URL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"imgUrl\",\n                value: editedQuestion.imgUrl || '',\n                onChange: handleInputChange,\n                className: \"border border-gray-300 rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 transition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-gray-500 text-white px-6 py-2 rounded-lg hover:bg-gray-600 transition\",\n              onClick: handleCancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-600 transition\",\n              onClick: handleConfirm,\n              children: selectedQuestion ? 'Confirm' : 'Add'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewTest, \"E7/UexI6wQQHypS8KmVVoqZauAE=\");\n_c = ViewTest;\nexport default ViewTest;\nvar _c;\n$RefreshReg$(_c, \"ViewTest\");","map":{"version":3,"names":["React","useEffect","useState","useRef","getTest","getTestByUserId","updateQuestion","uploadFile","jsxDEV","_jsxDEV","ViewTest","_s","testList","setTestList","selectedTestName","setSelectedTestName","isModalOpen","setIsModalOpen","selectedQuestion","setSelectedQuestion","editedQuestion","setEditedQuestion","isDataExisted","setIsDataExisted","testData","setTestData","round_1","round_2","round_3","round_4","fileInputRefs","getTestList","localStorage","setItem","JSON","stringify","error","console","handleTestChange","event","target","value","handleViewTest","alert","data","handleFileUpload","question","type","_event$target$files","_file$name$split$pop","_question$type","file","files","fileExtension","name","split","pop","toLowerCase","log","allowedExtensions","includes","join","key","questionId","updatedQuestion","imgUrl","updatedTestData","updateQuestionInList","questions","map","q","testId","packetName","difficulty","handleEditClick","answer","handleAddQuestion","round","groupName","handleInputChange","e","prev","handleConfirm","handleCancel","renderTable","title","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","ref","el","current","onChange","onClick","_fileInputRefs$curren","click","renderGroupedTable","groups","roundTitle","Object","keys","entries","htmlFor","id","disabled","test","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/pages/Host/Test/ViewTest.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { getTest, getTestByUserId, updateQuestion } from './service';\r\nimport { uploadFile } from '../../../services/uploadAssestServices';\r\nimport { Question } from '../../../type';\r\nimport { useQuery } from 'react-query';\r\n\r\n\r\nconst ViewTest: React.FC = () => {\r\n  const [testList, setTestList] = useState<string[]>([]);\r\n  const [selectedTestName, setSelectedTestName] = useState<string>(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [selectedQuestion, setSelectedQuestion] = useState<Question | null>(null);\r\n  const [editedQuestion, setEditedQuestion] = useState<Partial<Question>>({});\r\n  const [isDataExisted, setIsDataExisted] = useState<boolean>(false);\r\n  const [testData, setTestData] = useState<{\r\n    round_1: Question[];\r\n    round_2: Question[];\r\n    round_3: { [key: string]: Question[] };\r\n    round_4: { [key: string]: Question[] };\r\n  }>({\r\n    round_1: [],\r\n    round_2: [],\r\n    round_3: {},\r\n    round_4: {},\r\n  });\r\n  const fileInputRefs = useRef<Record<string, HTMLInputElement | null>>({});\r\n\r\n  // Fetch test list on mount\r\n  useEffect(() => {\r\n    const getTestList = async () => {\r\n      try {\r\n        const testList = await getTestByUserId();\r\n        localStorage.setItem(\"testList\", JSON.stringify(testList));\r\n        setTestList(testList);\r\n      } catch (error) {\r\n        console.error(\"Error fetching test list:\", error);\r\n      }\r\n    };\r\n    getTestList();\r\n  }, []);\r\n\r\n  const handleTestChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedTestName(event.target.value);\r\n    setIsDataExisted(false);\r\n  };\r\n\r\n  const handleViewTest = async () => {\r\n    if (!selectedTestName) {\r\n      alert(\"Please select a test first!\");\r\n      return;\r\n    }\r\n    if (isDataExisted) return;\r\n    try {\r\n      const data = await getTest(selectedTestName);\r\n      setTestData({\r\n        round_1: data.round_1 || [],\r\n        round_2: data.round_2 || [],\r\n        round_3: data.round_3 || {},\r\n        round_4: data.round_4 || {},\r\n      });\r\n      setIsDataExisted(true);\r\n    } catch (error) {\r\n      console.error(\"Error fetching test questions:\", error);\r\n      setTestData({\r\n        round_1: [],\r\n        round_2: [],\r\n        round_3: {},\r\n        round_4: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  // Handle file upload to S3\r\n  const handleFileUpload = async (question: Question, type: string | undefined, event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    // Validate file type against question type\r\n    const fileExtension = file.name.split('.').pop()?.toLowerCase();\r\n    console.log(\"question type inside function\", type);\r\n\r\n    const allowedExtensions = question.type?.toLowerCase().split(',') || [];\r\n    if (!allowedExtensions.includes(fileExtension || '')) {\r\n      alert(`File type must be one of: ${allowedExtensions.join(', ')}`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const key = await uploadFile(file, `Question ${question.questionId}`);\r\n      const updatedQuestion = { ...question, imgUrl: key };\r\n      await updateQuestion({ imgUrl: key }, question.questionId || \"\");\r\n\r\n      // Update testData\r\n      const updatedTestData = { ...testData };\r\n      const updateQuestionInList = (questions: Question[]) =>\r\n        questions.map((q) =>\r\n          q.testId === question.testId && q.questionId === question.questionId\r\n            ? updatedQuestion\r\n            : q\r\n        );\r\n\r\n      updatedTestData.round_1 = updateQuestionInList(updatedTestData.round_1);\r\n      updatedTestData.round_2 = updateQuestionInList(updatedTestData.round_2);\r\n      for (const packetName in updatedTestData.round_3) {\r\n        updatedTestData.round_3[packetName] = updateQuestionInList(updatedTestData.round_3[packetName]);\r\n      }\r\n      for (const difficulty in updatedTestData.round_4) {\r\n        updatedTestData.round_4[difficulty] = updateQuestionInList(updatedTestData.round_4[difficulty]);\r\n      }\r\n      setTestData(updatedTestData);\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n      alert(\"Failed to upload file.\");\r\n    }\r\n  };\r\n\r\n  // Open modal for editing question\r\n  const handleEditClick = (question: Question) => {\r\n    setSelectedQuestion(question);\r\n    setEditedQuestion({\r\n      question: question.question,\r\n      answer: question.answer,\r\n      type: question.type || '',\r\n      imgUrl: question.imgUrl || '',\r\n    });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Open modal for adding new question\r\n  const handleAddQuestion = (round: string, groupName?: string) => {\r\n    setSelectedQuestion(null);\r\n    setEditedQuestion({ round, groupName });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setEditedQuestion((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    if (!selectedQuestion && !editedQuestion.round) return;\r\n\r\n    if (selectedQuestion) {\r\n      // Update existing question\r\n      await updateQuestion(editedQuestion, selectedQuestion.questionId || \"\");\r\n      const updatedTestData = { ...testData };\r\n      const updateQuestionInList = (questions: Question[]) =>\r\n        questions.map((q) =>\r\n          q.testId === selectedQuestion.testId && q.questionId === selectedQuestion.questionId\r\n            ? { ...q, ...editedQuestion }\r\n            : q\r\n        );\r\n\r\n      updatedTestData.round_1 = updateQuestionInList(updatedTestData.round_1);\r\n      updatedTestData.round_2 = updateQuestionInList(updatedTestData.round_2);\r\n      for (const packetName in updatedTestData.round_3) {\r\n        updatedTestData.round_3[packetName] = updateQuestionInList(updatedTestData.round_3[packetName]);\r\n      }\r\n      for (const difficulty in updatedTestData.round_4) {\r\n        updatedTestData.round_4[difficulty] = updateQuestionInList(updatedTestData.round_4[difficulty]);\r\n      }\r\n      setTestData(updatedTestData);\r\n    } else {\r\n      // Add new question (stub - requires backend API)\r\n      console.log(\"Add new question:\", editedQuestion);\r\n      // Implement backend call to add new question\r\n    }\r\n\r\n    setIsModalOpen(false);\r\n    setSelectedQuestion(null);\r\n    setEditedQuestion({});\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedQuestion(null);\r\n    setEditedQuestion({});\r\n  };\r\n\r\n  // Render table for questions\r\n  const renderTable = (questions: Question[], title: string, round: string, groupName?: string) => {\r\n    if (questions.length === 0 && !groupName) return null;\r\n\r\n    return (\r\n      <div className=\"mb-8\">\r\n        {title && <h3 className=\"text-2xl font-semibold text-gray-800 mb-4\">{title}</h3>}\r\n        {questions.length > 0 && (\r\n          <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n            <div className=\"grid grid-cols-6 gap-4 p-4 bg-gray-50 font-semibold text-gray-700\">\r\n              <div>#</div>\r\n              <div>Question</div>\r\n              <div>Answer</div>\r\n              <div>Type</div>\r\n              <div>URL</div>\r\n              <div>Action</div>\r\n            </div>\r\n            {questions.map((question, index) => {\r\n              { console.log(\"question.type\", question.type); }\r\n              return (\r\n\r\n                <div key={question.testId + index} className=\"grid grid-cols-6 gap-4 p-4 border-t hover:bg-gray-50\">\r\n                  <div className=\"text-gray-600\">{index + 1}</div>\r\n                  <div className=\"text-gray-800\">{question.question}</div>\r\n                  <div className=\"text-gray-800\">{question.answer}</div>\r\n                  <div className=\"text-gray-600\">{question.type || 'N/A'}</div>\r\n\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <span className=\"text-gray-600 truncate\">{question.imgUrl || 'N/A'}</span>\r\n                    <input\r\n                      type=\"file\"\r\n                      ref={(el) => fileInputRefs.current[question.testId] = el}\r\n                      className=\"hidden\"\r\n                      onChange={(e) => handleFileUpload(question, question.type, e)}\r\n                    />\r\n                    <button\r\n                      onClick={() => fileInputRefs.current[question.testId]?.click()}\r\n                    >\r\n                      Upload\r\n                    </button>\r\n                  </div>\r\n                  <div>\r\n                    <button\r\n                      className=\"bg-yellow-500 text-white px-3 py-1 rounded-lg hover:bg-yellow-600 transition\"\r\n                      onClick={() => handleEditClick(question)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )\r\n\r\n            })}\r\n          </div>\r\n        )}\r\n        <button\r\n          className=\"mt-4 bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition\"\r\n          onClick={() => handleAddQuestion(round, groupName)}\r\n        >\r\n          Add New Question\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Render grouped tables for round_3 and round_4\r\n  const renderGroupedTable = (groups: { [key: string]: Question[] }, roundTitle: string, round: string) => {\r\n    if (Object.keys(groups).length === 0) return null;\r\n\r\n    return (\r\n      <div className=\"mb-8\">\r\n        <h3 className=\"text-2xl font-semibold text-gray-800 mb-4\">{roundTitle}</h3>\r\n        {Object.entries(groups).map(([groupName, questions]) => (\r\n          <div key={groupName} className=\"mb-6\">\r\n            <h4 className=\"text-xl font-medium text-gray-700 mb-3\">{groupName}</h4>\r\n            {renderTable(questions, \"\", round, groupName)}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto p-6 bg-gray-100 min-h-screen\">\r\n      <div className=\"bg-white p-8 rounded-xl shadow-lg\">\r\n        <h2 className=\"text-3xl font-bold text-gray-800 mb-6\">Uploaded Exams</h2>\r\n        <div className=\"mb-6\">\r\n          <label htmlFor=\"testSelect\" className=\"block text-lg font-medium text-gray-700 mb-2\">\r\n            Select Test\r\n          </label>\r\n          <select\r\n            id=\"testSelect\"\r\n            name=\"testSelect\"\r\n            className=\"border border-gray-300 rounded-lg p-3 w-full bg-white focus:ring-2 focus:ring-blue-500 transition\"\r\n            value={selectedTestName}\r\n            onChange={handleTestChange}\r\n          >\r\n            <option value=\"\" disabled>\r\n              -- Select a Test --\r\n            </option>\r\n            {testList.map((test) => (\r\n              <option key={test} value={test}>\r\n                {test}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition mb-8\"\r\n          onClick={handleViewTest}\r\n        >\r\n          View Test\r\n        </button>\r\n\r\n        {/* Render rounds */}\r\n        {renderTable(testData.round_1, \"Round 1\", \"round_1\")}\r\n        {renderTable(testData.round_2, \"Round 2\", \"round_2\")}\r\n        {renderGroupedTable(testData.round_3, \"Round 3\", \"round_3\")}\r\n        {renderGroupedTable(testData.round_4, \"Round 4\", \"round_4\")}\r\n\r\n        {testData.round_1.length === 0 &&\r\n          testData.round_2.length === 0 &&\r\n          Object.keys(testData.round_3).length === 0 &&\r\n          Object.keys(testData.round_4).length === 0 && (\r\n            <p className=\"text-gray-500 text-center\">No questions available for this test.</p>\r\n          )}\r\n\r\n        {/* Modal for editing/adding */}\r\n        {isModalOpen && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white p-8 rounded-xl shadow-2xl w-full max-w-lg\">\r\n              <h3 className=\"text-2xl font-semibold text-gray-800 mb-6\">\r\n                {selectedQuestion ? 'Edit Question' : 'Add New Question'}\r\n              </h3>\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Question</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"question\"\r\n                    value={editedQuestion.question || ''}\r\n                    onChange={handleInputChange}\r\n                    className=\"border border-gray-300 rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 transition\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Answer</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"answer\"\r\n                    value={editedQuestion.answer || ''}\r\n                    onChange={handleInputChange}\r\n                    className=\"border border-gray-300 rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 transition\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Type</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"type\"\r\n                    value={editedQuestion.type || ''}\r\n                    onChange={handleInputChange}\r\n                    className=\"border border-gray-300 rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 transition\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Image URL</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"imgUrl\"\r\n                    value={editedQuestion.imgUrl || ''}\r\n                    onChange={handleInputChange}\r\n                    className=\"border border-gray-300 rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 transition\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex justify-end space-x-3 mt-6\">\r\n                <button\r\n                  className=\"bg-gray-500 text-white px-6 py-2 rounded-lg hover:bg-gray-600 transition\"\r\n                  onClick={handleCancel}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-600 transition\"\r\n                  onClick={handleConfirm}\r\n                >\r\n                  {selectedQuestion ? 'Confirm' : 'Add'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewTest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}