{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\layouts\\\\RoundBase\\\\Round2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { renderGrid } from \"./utils\";\nimport { usePlayer } from \"../../context/playerContext\";\nimport { setSelectedRow } from \"../../components/services\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mainKeyword = \"BÒCÔNGANH\";\nconst QuestionBoxRound2 = ({\n  obstacleWord = mainKeyword,\n  hintWordArray,\n  initialGrid,\n  isHost = false\n}) => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const {\n    setInitialGrid\n  } = usePlayer();\n  const roomId = searchParams.get(\"roomId\") || \"\";\n  const GRID_SIZE = 20;\n  const generateEmptyGrid = () => {\n    return Array(GRID_SIZE).fill(null).map(() => Array(GRID_SIZE).fill(\"\"));\n  };\n  const [grid, setGrid] = useState(generateEmptyGrid());\n  const [revealedRows, setRevealedRows] = useState(Array(GRID_SIZE).fill(false));\n  const [revealedCols, setRevealedCols] = useState(Array(GRID_SIZE).fill(false));\n  const [hintWords, setHintWords] = useState([]);\n  const [cellStyles, setCellStyles] = useState({});\n  const [menu, setMenu] = useState({\n    visible: false\n  });\n  const menuRef = useRef(null);\n  useEffect(() => {\n    if (isHost) {\n      if (hintWordArray && obstacleWord) {\n        const {\n          randomHintWords,\n          newGrid\n        } = renderGrid(hintWordArray, obstacleWord, GRID_SIZE);\n        setHintWords(randomHintWords);\n        setInitialGrid(newGrid);\n        setGrid(newGrid);\n      }\n    } else {\n      if (initialGrid) {\n        setGrid(initialGrid);\n      }\n    }\n  }, [isHost, hintWordArray, obstacleWord, initialGrid, setInitialGrid]);\n  const toggleRow = rowIndex => {\n    if (!isHost) return;\n    setRevealedRows(prev => {\n      const newRevealed = [...prev];\n      newRevealed[rowIndex] = !newRevealed[rowIndex];\n      return newRevealed;\n    });\n    setSelectedRow(roomId, rowIndex.toString());\n  };\n\n  // Host-only: Toggle reveal for a specific column\n  const toggleCol = colIndex => {\n    if (!isHost) return; // Non-host users can't toggle columns\n    setRevealedCols(prev => {\n      const newRevealed = [...prev];\n      newRevealed[colIndex] = !newRevealed[colIndex];\n      return newRevealed;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center bg-white rounded-lg shadow-md p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-700 text-xl font-semibold text-center mb-4 max-w-[90%]\",\n      children: \"Trong c\\xE1c gi\\u1EA3i \\u0111\\u1EA5u th\\u1EC3 thao, nh\\u1EEFng \\u0111\\u1ED9i hay v\\u1EADn \\u0111\\u1ED9ng vi\\xEAn m\\u1EA1nh s\\u1EBD \\u0111\\u01B0\\u1EE3c x\\u1EBFp v\\xE0o c\\xF9ng m\\u1ED9t ho\\u1EB7c nhi\\u1EC1u nh\\xF3m trong khi b\\u1ED1c th\\u0103m \\u0111\\u1EC3 tr\\xE1nh vi\\u1EC7c g\\u1EB7p nhau s\\u1EDBm. T\\xEAn g\\u1ECDi chung c\\u1EE7a c\\xE1c nh\\xF3m v\\u1EADn \\u0111\\u1ED9ng vi\\xEAn n\\xE0y l\\xE0 g\\xEC?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-[repeat(20,40px)] grid-rows-[repeat(20,40px)] gap-1 max-h-[400px] overflow-y-scroll\",\n      children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: row.map((cell, colIndex) => {\n          // Determine if a cell should be revealed\n          const isRevealed = revealedRows[rowIndex] && hintWords.some(word => word.y === rowIndex && word.direction === \"horizontal\") || revealedCols[colIndex] && hintWords.some(word => word.x === colIndex && word.direction === \"vertical\");\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-10 h-10 flex items-center justify-center text-lg font-semibold select-none \n                    ${cell.includes(\"number\") ? \"text-blue-500 bg-white border-none\" : \"\"}\n                    ${cell === \"\" ? \"bg-white border-none\" : \"border border-gray-300\"} \n                    ${!cell.includes(\"number\") && isRevealed && obstacleWord && !obstacleWord.includes(cell) ? \"text-black\" : !cell.includes(\"number\") ? \"text-transparent\" : \"\"}\n                    ${obstacleWord !== null && obstacleWord !== void 0 && obstacleWord.includes(cell) && isRevealed && isNaN(Number(cell)) ? \"font-bold text-red-500\" : \"\"}\n                    ${styleClass}\n                  `,\n            onClick: () => {\n              if (isHost) {\n                if (hintWords.some(word => word.y === rowIndex && word.direction === \"horizontal\")) {\n                  toggleRow(rowIndex);\n                } else if (hintWords.some(word => word.x === colIndex && word.direction === \"vertical\")) {\n                  toggleCol(colIndex);\n                }\n              }\n            },\n            style: {\n              cursor: isHost && hintWords.some(word => word.y === rowIndex || word.x === colIndex) ? \"pointer\" : \"default\"\n            },\n            children: cell.includes(\"number\") ? cell.replace(\"number\", \"\").trim() : cell\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this);\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionBoxRound2, \"atjsHrVxhnmopHexGGhEkXeWis4=\", false, function () {\n  return [useSearchParams, usePlayer];\n});\n_c = QuestionBoxRound2;\nexport default QuestionBoxRound2;\nvar _c;\n$RefreshReg$(_c, \"QuestionBoxRound2\");","map":{"version":3,"names":["React","useState","useEffect","useRef","renderGrid","usePlayer","setSelectedRow","useSearchParams","jsxDEV","_jsxDEV","mainKeyword","QuestionBoxRound2","obstacleWord","hintWordArray","initialGrid","isHost","_s","searchParams","setInitialGrid","roomId","get","GRID_SIZE","generateEmptyGrid","Array","fill","map","grid","setGrid","revealedRows","setRevealedRows","revealedCols","setRevealedCols","hintWords","setHintWords","cellStyles","setCellStyles","menu","setMenu","visible","menuRef","randomHintWords","newGrid","toggleRow","rowIndex","prev","newRevealed","toString","toggleCol","colIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","row","Fragment","cell","isRevealed","some","word","y","direction","x","includes","isNaN","Number","styleClass","onClick","style","cursor","replace","trim","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/layouts/RoundBase/Round2.tsx"],"sourcesContent":["import Play from \"../Play\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { renderGrid } from \"./utils\";\r\nimport { RoundBase } from \"../../type\";\r\nimport { useHost } from \"../../context/hostContext\";\r\nimport { usePlayer } from \"../../context/playerContext\";\r\nimport { setSelectedRow } from \"../../components/services\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\ninterface HintWord {\r\n  word: string;\r\n  x: number;\r\n  y: number;\r\n  direction: \"horizontal\" | \"vertical\";\r\n}\r\n\r\ninterface ObstacleQuestionBoxProps {\r\n  obstacleWord?: string;\r\n  hintWordArray?: string[];\r\n  isHost?: boolean;\r\n  initialGrid?: string[][];\r\n}\r\n\r\nconst mainKeyword = \"BÒCÔNGANH\";\r\n\r\nconst QuestionBoxRound2: React.FC<ObstacleQuestionBoxProps> = ({\r\n  obstacleWord = mainKeyword,\r\n  hintWordArray,\r\n  initialGrid,\r\n  isHost = false,\r\n}) => {\r\n  const [searchParams] = useSearchParams();\r\n  const { setInitialGrid } = usePlayer();\r\n  const roomId = searchParams.get(\"roomId\") || \"\";\r\n  const GRID_SIZE = 20;\r\n\r\n  const generateEmptyGrid = () => {\r\n    return Array(GRID_SIZE)\r\n      .fill(null)\r\n      .map(() => Array(GRID_SIZE).fill(\"\"));\r\n  };\r\n\r\n  const [grid, setGrid] = useState<string[][]>(generateEmptyGrid());\r\n  const [revealedRows, setRevealedRows] = useState<boolean[]>(Array(GRID_SIZE).fill(false));\r\n  const [revealedCols, setRevealedCols] = useState<boolean[]>(Array(GRID_SIZE).fill(false));\r\n  const [hintWords, setHintWords] = useState<HintWord[]>([]);\r\n  const [cellStyles, setCellStyles] = useState<Record<string, string>>({});\r\n  const [menu, setMenu] = useState<{\r\n    visible: boolean;\r\n    rowIndex?: number;\r\n    colIndex?: number;\r\n  }>({ visible: false });\r\n\r\n  const menuRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (isHost) {\r\n      if (hintWordArray && obstacleWord) {\r\n        const { randomHintWords, newGrid } = renderGrid(hintWordArray, obstacleWord, GRID_SIZE);\r\n        setHintWords(randomHintWords);\r\n        setInitialGrid(newGrid);\r\n        setGrid(newGrid);\r\n      }\r\n    } else {\r\n      if (initialGrid) {\r\n        setGrid(initialGrid);\r\n      }\r\n    }\r\n  }, [isHost, hintWordArray, obstacleWord, initialGrid, setInitialGrid]);\r\n\r\n  const toggleRow = (rowIndex: number) => {\r\n    if (!isHost) return;\r\n    setRevealedRows((prev) => {\r\n      const newRevealed = [...prev];\r\n      newRevealed[rowIndex] = !newRevealed[rowIndex];\r\n      return newRevealed;\r\n    });\r\n    setSelectedRow(roomId, rowIndex.toString());\r\n  };\r\n\r\n    // Host-only: Toggle reveal for a specific column\r\n    const toggleCol = (colIndex: number) => {\r\n        if (!isHost) return; // Non-host users can't toggle columns\r\n        setRevealedCols((prev) => {\r\n            const newRevealed = [...prev];\r\n            newRevealed[colIndex] = !newRevealed[colIndex];\r\n            return newRevealed;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center bg-white rounded-lg shadow-md p-6\">\r\n            <div className=\"text-gray-700 text-xl font-semibold text-center mb-4 max-w-[90%]\">\r\n                Trong các giải đấu thể thao, những đội hay vận động viên mạnh sẽ được xếp vào cùng một hoặc nhiều nhóm trong khi bốc thăm để tránh việc gặp nhau sớm. Tên gọi chung của các nhóm vận động viên này là gì?\r\n            </div>\r\n            <div className=\"grid grid-cols-[repeat(20,40px)] grid-rows-[repeat(20,40px)] gap-1 max-h-[400px] overflow-y-scroll\">\r\n                {grid.map((row, rowIndex) => (\r\n                    <React.Fragment key={rowIndex}>\r\n                        {row.map((cell, colIndex) => {\r\n                            // Determine if a cell should be revealed\r\n                            const isRevealed =\r\n                                (revealedRows[rowIndex] &&\r\n                                    hintWords.some(\r\n                                        (word) => word.y === rowIndex && word.direction === \"horizontal\"\r\n                                    )) ||\r\n                                (revealedCols[colIndex] &&\r\n                                    hintWords.some((word) => word.x === colIndex && word.direction === \"vertical\"));\r\n\r\n              return (\r\n                <div\r\n                  key={colIndex}\r\n                  className={`w-10 h-10 flex items-center justify-center text-lg font-semibold select-none \r\n                    ${cell.includes(\"number\") ? \"text-blue-500 bg-white border-none\" : \"\"}\r\n                    ${cell === \"\" ? \"bg-white border-none\" : \"border border-gray-300\"} \r\n                    ${\r\n                      !cell.includes(\"number\") && isRevealed && obstacleWord && !obstacleWord.includes(cell)\r\n                        ? \"text-black\"\r\n                        : !cell.includes(\"number\")\r\n                        ? \"text-transparent\"\r\n                        : \"\"\r\n                    }\r\n                    ${obstacleWord?.includes(cell) && isRevealed && isNaN(Number(cell)) ? \"font-bold text-red-500\" : \"\"}\r\n                    ${styleClass}\r\n                  `}\r\n                  onClick={() => {\r\n                    if (isHost) {\r\n                      if (\r\n                        hintWords.some(\r\n                          (word) => word.y === rowIndex && word.direction === \"horizontal\"\r\n                        )\r\n                      ) {\r\n                        toggleRow(rowIndex);\r\n                      } else if (\r\n                        hintWords.some(\r\n                          (word) => word.x === colIndex && word.direction === \"vertical\"\r\n                        )\r\n                      ) {\r\n                        toggleCol(colIndex);\r\n                      }\r\n                    }\r\n                  }}\r\n                  style={{\r\n                    cursor:\r\n                      isHost &&\r\n                      hintWords.some((word) => word.y === rowIndex || word.x === colIndex)\r\n                        ? \"pointer\"\r\n                        : \"default\",\r\n                  }}\r\n                >\r\n                  {cell.includes(\"number\") ? cell.replace(\"number\", \"\").trim() : cell}\r\n                </div>\r\n              );\r\n            })}\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBoxRound2;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}