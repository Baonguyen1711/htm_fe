{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\context\\\\timeListenerContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { listenToTimeStart } from \"../services/firebaseServices\";\nimport React, { createContext, useContext, useEffect, useRef, useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimeStartContext = /*#__PURE__*/createContext({\n  startTime: null,\n  registerCallback: () => () => {}\n});\nexport const TimeStartProvider = ({\n  roomId,\n  children\n}) => {\n  _s();\n  const [startTime, setStartTime] = useState(() => {\n    const cached = localStorage.getItem(\"lastStartTime\");\n    return cached ? Number(cached) : null;\n  });\n  const callbacksRef = useRef(new Set());\n  const registerCallback = useCallback(cb => {\n    callbacksRef.current.add(cb);\n    return () => callbacksRef.current.delete(cb);\n  }, []);\n  useEffect(() => {\n    const unsubscribe = listenToTimeStart(roomId, () => {\n      const updated = localStorage.getItem(\"lastStartTime\");\n      if (updated) {\n        const newTime = Number(updated);\n        setStartTime(newTime);\n        callbacksRef.current.forEach(cb => cb());\n      }\n    });\n    return () => unsubscribe();\n  }, [roomId]);\n  return /*#__PURE__*/_jsxDEV(TimeStartContext.Provider, {\n    value: {\n      startTime,\n      registerCallback\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(TimeStartProvider, \"I6WMZOF+f3s4Typ35OLfI4Rjfng=\");\n_c = TimeStartProvider;\nexport const useTimeStart = () => {\n  _s2();\n  return useContext(TimeStartContext);\n};\n_s2(useTimeStart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"TimeStartProvider\");","map":{"version":3,"names":["listenToTimeStart","React","createContext","useContext","useEffect","useRef","useState","useCallback","jsxDEV","_jsxDEV","TimeStartContext","startTime","registerCallback","TimeStartProvider","roomId","children","_s","setStartTime","cached","localStorage","getItem","Number","callbacksRef","Set","cb","current","add","delete","unsubscribe","updated","newTime","forEach","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTimeStart","_s2","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/context/timeListenerContext.tsx"],"sourcesContent":["import { listenToTimeStart } from \"../services/firebaseServices\";\r\nimport React, {\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\n\r\n\r\ntype TimeStartCallback = () => void;\r\n\r\ntype TimeStartContextType = {\r\n  startTime: number | null;\r\n  registerCallback: (cb: TimeStartCallback) => () => void;\r\n};\r\n\r\nconst TimeStartContext = createContext<TimeStartContextType>({\r\n  startTime: null,\r\n  registerCallback: () => () => {},\r\n});\r\n\r\nexport const TimeStartProvider: React.FC<{\r\n  roomId: string;\r\n  children: React.ReactNode;\r\n}> = ({ roomId, children }) => {\r\n  const [startTime, setStartTime] = useState<number | null>(() => {\r\n    const cached = localStorage.getItem(\"lastStartTime\");\r\n    return cached ? Number(cached) : null;\r\n  });\r\n\r\n  const callbacksRef = useRef<Set<TimeStartCallback>>(new Set());\r\n\r\n  const registerCallback = useCallback((cb: TimeStartCallback) => {\r\n    callbacksRef.current.add(cb);\r\n    return () => callbacksRef.current.delete(cb);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = listenToTimeStart(roomId, () => {\r\n      const updated = localStorage.getItem(\"lastStartTime\");\r\n      if (updated) {\r\n        const newTime = Number(updated);\r\n        setStartTime(newTime);\r\n        callbacksRef.current.forEach((cb) => cb());\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [roomId]);\r\n\r\n  return (\r\n    <TimeStartContext.Provider value={{ startTime, registerCallback }}>\r\n      {children}\r\n    </TimeStartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTimeStart = () => useContext(TimeStartContext);\r\n"],"mappings":";;;AAAA,SAASA,iBAAiB,QAAQ,8BAA8B;AAChE,OAAOC,KAAK,IACVC,aAAa,EACbC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,QAAQ,EACRC,WAAW,QACN,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUf,MAAMC,gBAAgB,gBAAGR,aAAa,CAAuB;EAC3DS,SAAS,EAAE,IAAI;EACfC,gBAAgB,EAAEA,CAAA,KAAM,MAAM,CAAC;AACjC,CAAC,CAAC;AAEF,OAAO,MAAMC,iBAGX,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACL,SAAS,EAAEM,YAAY,CAAC,GAAGX,QAAQ,CAAgB,MAAM;IAC9D,MAAMY,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IACpD,OAAOF,MAAM,GAAGG,MAAM,CAACH,MAAM,CAAC,GAAG,IAAI;EACvC,CAAC,CAAC;EAEF,MAAMI,YAAY,GAAGjB,MAAM,CAAyB,IAAIkB,GAAG,CAAC,CAAC,CAAC;EAE9D,MAAMX,gBAAgB,GAAGL,WAAW,CAAEiB,EAAqB,IAAK;IAC9DF,YAAY,CAACG,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;IAC5B,OAAO,MAAMF,YAAY,CAACG,OAAO,CAACE,MAAM,CAACH,EAAE,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;EAENpB,SAAS,CAAC,MAAM;IACd,MAAMwB,WAAW,GAAG5B,iBAAiB,CAACc,MAAM,EAAE,MAAM;MAClD,MAAMe,OAAO,GAAGV,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MACrD,IAAIS,OAAO,EAAE;QACX,MAAMC,OAAO,GAAGT,MAAM,CAACQ,OAAO,CAAC;QAC/BZ,YAAY,CAACa,OAAO,CAAC;QACrBR,YAAY,CAACG,OAAO,CAACM,OAAO,CAAEP,EAAE,IAAKA,EAAE,CAAC,CAAC,CAAC;MAC5C;IACF,CAAC,CAAC;IAEF,OAAO,MAAMI,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACd,MAAM,CAAC,CAAC;EAEZ,oBACEL,OAAA,CAACC,gBAAgB,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,SAAS;MAAEC;IAAiB,CAAE;IAAAG,QAAA,EAC/DA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAACrB,EAAA,CAlCWH,iBAGX;AAAAyB,EAAA,GAHWzB,iBAGX;AAiCF,OAAO,MAAM0B,YAAY,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrC,UAAU,CAACO,gBAAgB,CAAC;AAAA;AAAC8B,GAAA,CAAlDD,YAAY;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}