{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { createRoom, getRoomById } from './service';\nimport { useNavigate } from 'react-router-dom';\nimport { usePlayer } from '../../../context/playerContext';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetupMatch = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentRound, setCurrentRound] = useState('');\n  const [selectedTestName, setSelectedTestName] = useState(\"\");\n  const [rooms, setRooms] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [createdRoomId, setCreatedRoomId] = useState('');\n  const [testList, setTestLits] = useState(JSON.parse(localStorage.getItem(\"testList\") || \"\"));\n  const {\n    setRoomId\n  } = usePlayer();\n  const handleTestChange = event => {\n    setSelectedTestName(event.target.value);\n  };\n  const handleStartClick = (roomId, testName) => {\n    setRoomId(roomId);\n    navigate(`/host?round=1&roomId=${roomId}&testName=${testName}`);\n  };\n  useEffect(() => {\n    const getRooms = async () => {\n      const data = await getRoomById();\n      console.log(\"rooms\", rooms);\n      setRooms(data.rooms);\n    };\n    getRooms();\n  }, []);\n  const handleCreateRoom = async () => {\n    const data = await createRoom(2);\n    const newRoom = {\n      roomId: data.result.roomId,\n      isActive: data.result.isActive\n    };\n    setRooms([...rooms, newRoom]);\n    setCreatedRoomId(data.result.roomId);\n    setShowModal(true);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('Current Round:', currentRound);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(SetupMatch, \"2DGUgftdRWZS2gnpnoebKdNO/YA=\", false, function () {\n  return [useNavigate, usePlayer];\n});\n_c = SetupMatch;\nexport default SetupMatch;\nvar _c;\n$RefreshReg$(_c, \"SetupMatch\");","map":{"version":3,"names":["React","useEffect","useState","createRoom","getRoomById","useNavigate","usePlayer","Fragment","_Fragment","jsxDEV","_jsxDEV","SetupMatch","_s","navigate","currentRound","setCurrentRound","selectedTestName","setSelectedTestName","rooms","setRooms","showModal","setShowModal","createdRoomId","setCreatedRoomId","testList","setTestLits","JSON","parse","localStorage","getItem","setRoomId","handleTestChange","event","target","value","handleStartClick","roomId","testName","getRooms","data","console","log","handleCreateRoom","newRoom","result","isActive","handleSubmit","e","preventDefault","handleCloseModal","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/pages/Host/Test/SetUpMatch.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { createRoom, getRoomById, deactivateRoom } from './service';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { usePlayer } from '../../../context/playerContext';\r\n\r\ninterface Room {\r\n  roomId: string;\r\n  isActive: boolean;\r\n}\r\n\r\nconst SetupMatch: React.FC = () => {\r\n  const navigate = useNavigate()\r\n  const [currentRound, setCurrentRound] = useState<string>('');\r\n  const [selectedTestName, setSelectedTestName] = useState<string>(\"\");\r\n  const [rooms, setRooms] = useState<Room[]>([]);\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  const [createdRoomId, setCreatedRoomId] = useState<string>('');\r\n  const [testList, setTestLits] = useState<[]>(JSON.parse(localStorage.getItem(\"testList\") || \"\"))\r\n  const {setRoomId} = usePlayer()\r\n\r\n  const handleTestChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedTestName(event.target.value);\r\n  };\r\n\r\n  const handleStartClick = (roomId: string, testName: string) => {\r\n    setRoomId(roomId)\r\n    navigate(`/host?round=1&roomId=${roomId}&testName=${testName}`)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getRooms = async () => {\r\n      const data = await getRoomById()\r\n      console.log(\"rooms\", rooms)\r\n      setRooms(data.rooms)\r\n    }\r\n\r\n    getRooms()\r\n  }, [])\r\n\r\n  const handleCreateRoom = async () => {\r\n    const data = await createRoom(2)\r\n    const newRoom = { roomId: data.result.roomId, isActive: data.result.isActive };\r\n    setRooms([...rooms, newRoom]);\r\n    setCreatedRoomId(data.result.roomId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    console.log('Current Round:', currentRound);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    \r\n    </>\r\n    \r\n\r\n  );\r\n};\r\n\r\nexport default SetupMatch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}