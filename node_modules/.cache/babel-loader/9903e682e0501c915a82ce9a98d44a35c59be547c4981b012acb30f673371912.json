{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\pages\\\\Host\\\\Management\\\\HostRound2.tsx\",\n  _s = $RefreshSig$();\nimport Round2 from '../../../layouts/RoundBase/Round2';\nimport Host from '../../../layouts/Host/Host';\nimport { getQuestionByRound } from '../Test/service';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HostRound2 = () => {\n  _s();\n  const [params] = useSearchParams();\n  const roomId = params.get(\"roomId\") || \"\";\n  const testName = params.get(\"testName\") || \"\";\n  const [obstacleWord, setObstacleWord] = useState(\"\");\n  const [hintWordArray, setHintWordArray] = useState([]);\n  useEffect(() => {\n    const getQuestions = async () => {\n      let hintArrays = [];\n      const questions = await getQuestionByRound(testName, \"2\", roomId);\n      const obstacleWord = questions[6].answer;\n      for (let i = 0; i < questions.length - 1; i++) {\n        hintArrays.push(questions[i].answer);\n      }\n      setHintWordArray(hintArrays);\n      setObstacleWord(obstacleWord);\n      console.log(\"hintArrays\", hintArrays);\n      console.log(\"obstacleWord\", obstacleWord);\n    };\n    getQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Host, {\n    QuestionComponent: /*#__PURE__*/_jsxDEV(Round2, {\n      isHost: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(HostRound2, \"1p5ApwVT2W9geIQhc5HS36ZmH8Y=\", false, function () {\n  return [useSearchParams];\n});\n_c = HostRound2;\nexport default HostRound2;\nvar _c;\n$RefreshReg$(_c, \"HostRound2\");","map":{"version":3,"names":["Round2","Host","getQuestionByRound","useEffect","useState","useSearchParams","jsxDEV","_jsxDEV","HostRound2","_s","params","roomId","get","testName","obstacleWord","setObstacleWord","hintWordArray","setHintWordArray","getQuestions","hintArrays","questions","answer","i","length","push","console","log","QuestionComponent","isHost","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/pages/Host/Management/HostRound2.tsx"],"sourcesContent":["import Round2 from '../../../layouts/RoundBase/Round2';\r\nimport Host from '../../../layouts/Host/Host';\r\nimport { getQuestionByRound } from '../Test/service';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nconst HostRound2: React.FC = () => {\r\n    const [params] = useSearchParams()\r\n    const roomId = params.get(\"roomId\") || \"\"\r\n    const testName = params.get(\"testName\") || \"\"\r\n    const [obstacleWord, setObstacleWord] = useState(\"\")\r\n    const [hintWordArray,setHintWordArray] = useState<string[]>([])\r\n    useEffect(()=>{\r\n      const getQuestions = async () => {\r\n        let hintArrays = []\r\n        const questions = await getQuestionByRound(testName,\"2\",roomId)\r\n        const obstacleWord = questions[6].answer\r\n\r\n        for (let i =0;i<questions.length-1;i++) {\r\n          hintArrays.push(questions[i].answer)\r\n        }\r\n\r\n        setHintWordArray(hintArrays)\r\n        setObstacleWord(obstacleWord)\r\n\r\n        console.log(\"hintArrays\",hintArrays);\r\n        console.log(\"obstacleWord\",obstacleWord);\r\n        \r\n        \r\n      }\r\n\r\n      getQuestions()\r\n    },[])\r\n\r\n    return (\r\n        <Host\r\n            QuestionComponent={<Round2  isHost={true}/>}\r\n        />\r\n    )\r\n};\r\n\r\nexport default HostRound2;\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mCAAmC;AACtD,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,CAAC,GAAGL,eAAe,CAAC,CAAC;EAClC,MAAMM,MAAM,GAAGD,MAAM,CAACE,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE;EACzC,MAAMC,QAAQ,GAAGH,MAAM,CAACE,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE;EAC7C,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,aAAa,EAACC,gBAAgB,CAAC,GAAGb,QAAQ,CAAW,EAAE,CAAC;EAC/DD,SAAS,CAAC,MAAI;IACZ,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAIC,UAAU,GAAG,EAAE;MACnB,MAAMC,SAAS,GAAG,MAAMlB,kBAAkB,CAACW,QAAQ,EAAC,GAAG,EAACF,MAAM,CAAC;MAC/D,MAAMG,YAAY,GAAGM,SAAS,CAAC,CAAC,CAAC,CAACC,MAAM;MAExC,KAAK,IAAIC,CAAC,GAAE,CAAC,EAACA,CAAC,GAACF,SAAS,CAACG,MAAM,GAAC,CAAC,EAACD,CAAC,EAAE,EAAE;QACtCH,UAAU,CAACK,IAAI,CAACJ,SAAS,CAACE,CAAC,CAAC,CAACD,MAAM,CAAC;MACtC;MAEAJ,gBAAgB,CAACE,UAAU,CAAC;MAC5BJ,eAAe,CAACD,YAAY,CAAC;MAE7BW,OAAO,CAACC,GAAG,CAAC,YAAY,EAACP,UAAU,CAAC;MACpCM,OAAO,CAACC,GAAG,CAAC,cAAc,EAACZ,YAAY,CAAC;IAG1C,CAAC;IAEDI,YAAY,CAAC,CAAC;EAChB,CAAC,EAAC,EAAE,CAAC;EAEL,oBACIX,OAAA,CAACN,IAAI;IACD0B,iBAAiB,eAAEpB,OAAA,CAACP,MAAM;MAAE4B,MAAM,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACvB,EAAA,CAjCID,UAAoB;EAAA,QACLH,eAAe;AAAA;AAAA4B,EAAA,GAD9BzB,UAAoB;AAmC1B,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}