{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\layouts\\\\Play.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Header from './Header';\nimport { usePlayer } from '../context/playerContext';\nimport { listenToPlayers, listenToTimeStart } from '../services/firebaseServices';\nimport { useNavigate } from 'react-router-dom';\nimport { submitAnswer } from './services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Play = ({\n  questionComponent,\n  isHost = false,\n  PlayerScore,\n  SideBar\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isRunning, setIsRunning] = useState(false);\n  const [playerAnswer, setPlayerAnswer] = useState(\"\");\n  const [playerScores, setPlayerScores] = useState([0, 0, 0, 0]);\n  // const [playerFlashes, setPlayerFlashes] = useState(Array(playerScores.length).fill(\"\"));\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(\"0\");\n  const {\n    players,\n    setPlayers,\n    roomId,\n    setRoomId,\n    playersArray,\n    setPlayerArray,\n    position\n  } = usePlayer();\n  const isMounted = useRef(false);\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      setPlayerAnswer(prev => {\n        console.log(\"Previous answer:\", prev); // Logs the previous state\n        console.log(\"New answer:\", event.currentTarget.value); // Logs the current input value\n        return event.currentTarget.value;\n      });\n      event.currentTarget.value = \"\"; // Clear input\n    }\n  };\n  const startTimer = () => {\n    let timer;\n    timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          if (!isHost) {\n            submitAnswer(roomId, playerAnswer, position);\n          }\n          return 30;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  };\n  useEffect(() => {\n    const unsubscribePlayers = listenToPlayers(roomId, updatedPlayers => {\n      console.log(\"updatedPlayers\", updatedPlayers);\n      console.log(\"Object.keys(updatedPlayers)\", Object.keys(updatedPlayers));\n      console.log(\"Object.keys(updatedPlayers).length\", Object.keys(updatedPlayers).length);\n      if (updatedPlayers && Object.keys(updatedPlayers).length > 0) {\n        const playersList = Object.values(updatedPlayers);\n        setPlayerArray(playersList);\n        localStorage.setItem(\"playerList\", JSON.stringify(playersList));\n        console.log(\"Updated localStorage:\", localStorage.getItem(\"playerList\"));\n      } else {\n        console.log(\"Skipping update: invalid updatedPlayers\", updatedPlayers);\n      }\n    });\n\n    // No need to set state here; it's handled by useState initializer\n    return () => {\n      unsubscribePlayers();\n    };\n  }, []);\n  useEffect(() => {\n    let timerCleanup;\n    let unsubscribeTimeStart;\n    console.log(\"isMounted.current\");\n    if (isMounted.current) {\n      console.log(\"isMounted.current\");\n      unsubscribeTimeStart = listenToTimeStart(roomId, startTimer);\n    } else {\n      console.log(\"not isMounted.current\");\n      isMounted.current = true;\n    }\n    return () => {\n      if (unsubscribeTimeStart) unsubscribeTimeStart();\n      if (timerCleanup) timerCleanup();\n    };\n  }, []);\n\n  // const simulateSocketScoreUpdate = () => {\n  //     const playerIndex = Math.floor(Math.random() * playerScores.length);\n  //     const scoreChange = Math.random() > 0.5 ? 10 : -10;\n  //     console.log(`Simulated socket event: Player ${playerIndex + 1} score changed by ${scoreChange}`);\n\n  //     setPlayerScores((prevScores) => {\n  //         const newScores = [...prevScores];\n  //         newScores[playerIndex] += scoreChange;\n  //         return newScores;\n  //     });\n  //     triggerPlayerFlash(playerIndex, scoreChange > 0);\n  // };\n\n  // useEffect(() => {\n  //     const socketInterval = setInterval(() => {\n  //         simulateSocketScoreUpdate();\n  //     }, 5000);\n  //     return () => clearInterval(socketInterval);\n  // }, []);\n\n  // const triggerPlayerFlash = (index: number, isCorrect: boolean) => {\n  //     const flashColor = isCorrect ? \"flash-correct\" : \"flash-incorrect\";\n  //     setPlayerFlashes((prevFlashes) => {\n  //         const newFlashes = [...prevFlashes];\n  //         newFlashes[index] = flashColor;\n  //         return newFlashes;\n  //     });\n  //     setTimeout(() => {\n  //         setPlayerFlashes((prevFlashes) => {\n  //             const newFlashes = [...prevFlashes];\n  //             newFlashes[index] = \"\";\n  //             return newFlashes;\n  //         });\n  //     }, 3000);\n  // };\n\n  // useEffect(() => {\n  //     if (isRunning) {\n  //         if (timeLeft > 0) {\n  //             const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n  //             return () => clearTimeout(timer);\n  //         } else {\n\n  //             setIsRunning(false);\n  //             setTimeLeft(30);\n  //         }\n  //     }\n  // }, [isRunning, timeLeft]); \n\n  // const handleScoreAdjust = (index: number, amount: number) => {\n  //     setPlayerScores((prevScores) => {\n  //         const newScores = [...prevScores];\n  //         newScores[index] += amount;\n  //         return newScores;\n  //     });\n  //     triggerPlayerFlash(index, amount > 0);\n  // };\n\n  // const handleNextQuestion = async () => {\n  //     setCurrentQuestionIndex((prev)=>(parseInt(prev)+1).toString())\n  //     const question = await getNextQuestion(testName,currentQuestionIndex,currentRound,hostRoomId)\n  //     console.log(question)\n  //     alert('Moving to the next question!');\n  // };\n\n  // const getSortedPlayers = (): Player[] => {\n  //     return playerScores\n  //         .map((score, index) => ({ score, index, username: `Player ${index + 1}`, position: index }))\n  //         .sort((a, b) => b.score - a.score)\n  //         .map((player, rank) => ({ ...player, position: rank }));\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen bg-gradient-to-r from-blue-500 to-teal-400 flex flex-col overflow-auto\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 p-4 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4/5 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full h-2 bg-gray-300 rounded-full mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full bg-red-500 rounded-full transition-all duration-1000\",\n            style: {\n              width: `${timeLeft / 30 * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), questionComponent, !isHost && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"w-full h-14 border border-gray-300 rounded-lg px-4 text-lg text-center\",\n            placeholder: \"Type your answer...\",\n            onKeyDown: handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-lg\",\n            children: playerAnswer && `Your answer: ${playerAnswer}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this), PlayerScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/5 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-300 text-center font-bold text-lg p-3 rounded-lg\",\n          children: \"ROUND 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), SideBar]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"fixed bottom-6 right-6 bg-gray-800 text-white w-12 h-12 flex items-center justify-center rounded-full shadow-lg\",\n      onClick: () => setIsChatOpen(!isChatOpen),\n      children: isChatOpen ? 'âœ–' : 'ðŸ’¬'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), isChatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-20 right-6 w-80 h-60 bg-white shadow-lg rounded-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm font-bold\",\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-40 overflow-y-auto bg-gray-100 p-2 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs\",\n          children: \"User1: Hello!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-right\",\n          children: \"You: Hi there!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"w-full h-10 mt-2 border border-gray-300 rounded-lg px-2\",\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-80 flex justify-center items-center z-50\",\n      onClick: () => setIsModalOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://a.travel-assets.com/findyours-php/viewfinder/images/res70/474000/474240-Left-Bank-Paris.jpg\",\n        alt: \"Full Size\",\n        className: \"max-w-full max-h-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, this);\n};\n_s(Play, \"cbDgwWROsI1azdGpf/BxFMHTPk0=\", false, function () {\n  return [useNavigate, usePlayer];\n});\n_c = Play;\nexport default Play;\nvar _c;\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Header","usePlayer","listenToPlayers","listenToTimeStart","useNavigate","submitAnswer","jsxDEV","_jsxDEV","Play","questionComponent","isHost","PlayerScore","SideBar","_s","navigate","isChatOpen","setIsChatOpen","timeLeft","setTimeLeft","isModalOpen","setIsModalOpen","isRunning","setIsRunning","playerAnswer","setPlayerAnswer","playerScores","setPlayerScores","currentQuestionIndex","setCurrentQuestionIndex","players","setPlayers","roomId","setRoomId","playersArray","setPlayerArray","position","isMounted","handleKeyDown","event","key","prev","console","log","currentTarget","value","startTimer","timer","setInterval","clearInterval","unsubscribePlayers","updatedPlayers","Object","keys","length","playersList","values","localStorage","setItem","JSON","stringify","getItem","timerCleanup","unsubscribeTimeStart","current","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","type","placeholder","onKeyDown","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/layouts/Play.tsx"],"sourcesContent":["import React, { useState, useEffect, ReactNode, useRef } from 'react';\r\nimport Header from './Header';\r\nimport { usePlayer } from '../context/playerContext';\r\nimport { User } from '../type';\r\nimport { addPlayerToRoom, listenToPlayers, listenToScores, listenToAnswers, listenToTimeStart } from '../services/firebaseServices';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { submitAnswer } from './services';\r\nimport { getNextQuestion } from '../pages/Host/Test/service';\r\nimport { useHost } from '../context/hostContext';\r\nimport HostManagement from '../components/HostManagement';\r\nimport PlayerScore from '../components/PlayerScore';\r\nimport HostScore from '../components/PlayerAnswer';\r\n\r\n\r\n\r\ninterface PlayProps {\r\n    questionComponent: ReactNode;\r\n    isHost?: boolean;\r\n    PlayerScore: ReactNode\r\n    SideBar: ReactNode\r\n}\r\n\r\ninterface Player {\r\n    score: number;\r\n    index: number;\r\n    username: string;\r\n    position: number;\r\n}\r\n\r\nconst Play: React.FC<PlayProps> = ({ questionComponent, isHost = false, PlayerScore, SideBar }) => {\r\n\r\n    const navigate = useNavigate()\r\n    const [isChatOpen, setIsChatOpen] = useState(false);\r\n    const [timeLeft, setTimeLeft] = useState(30);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [isRunning, setIsRunning] = useState(false)\r\n    const [playerAnswer, setPlayerAnswer] = useState<string>(\"\")\r\n\r\n    const [playerScores, setPlayerScores] = useState<number[]>([0, 0, 0, 0]);\r\n    // const [playerFlashes, setPlayerFlashes] = useState(Array(playerScores.length).fill(\"\"));\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState<string>(\"0\")\r\n    const { players, setPlayers, roomId, setRoomId, playersArray, setPlayerArray, position } = usePlayer()\r\n    const isMounted = useRef(false);\r\n\r\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === \"Enter\") {\r\n            setPlayerAnswer((prev) => {\r\n                console.log(\"Previous answer:\", prev);  // Logs the previous state\r\n                console.log(\"New answer:\", event.currentTarget.value);  // Logs the current input value\r\n                return event.currentTarget.value;\r\n            });\r\n    \r\n            event.currentTarget.value = \"\"; // Clear input\r\n        }\r\n    };\r\n    const startTimer = () => {\r\n        let timer: NodeJS.Timeout | undefined;\r\n\r\n        timer = setInterval(() => {\r\n            setTimeLeft(prev => {\r\n                if (prev <= 1) {\r\n                    clearInterval(timer!);\r\n                    if(!isHost) {\r\n                        submitAnswer(roomId,playerAnswer,position)\r\n                    }\r\n                    return 30;\r\n                }\r\n                return prev - 1;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timer);\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribePlayers = listenToPlayers(roomId, (updatedPlayers) => {\r\n            console.log(\"updatedPlayers\", updatedPlayers)\r\n            console.log(\"Object.keys(updatedPlayers)\", Object.keys(updatedPlayers))\r\n            console.log(\"Object.keys(updatedPlayers).length\", Object.keys(updatedPlayers).length)\r\n            if (updatedPlayers && Object.keys(updatedPlayers).length > 0) {\r\n                const playersList = Object.values(updatedPlayers);\r\n                setPlayerArray(playersList);\r\n                localStorage.setItem(\"playerList\", JSON.stringify(playersList));\r\n                console.log(\"Updated localStorage:\", localStorage.getItem(\"playerList\"));\r\n            } else {\r\n                console.log(\"Skipping update: invalid updatedPlayers\", updatedPlayers);\r\n            }\r\n        });\r\n\r\n        // No need to set state here; it's handled by useState initializer\r\n        return () => {\r\n            unsubscribePlayers();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let timerCleanup: (() => void) | undefined;\r\n        let unsubscribeTimeStart: (() => void) | undefined; \r\n        console.log(\"isMounted.current\")\r\n        if (isMounted.current) {\r\n            console.log(\"isMounted.current\")\r\n            unsubscribeTimeStart = listenToTimeStart(roomId, startTimer);\r\n        } else {\r\n            console.log(\"not isMounted.current\")\r\n            isMounted.current = true;\r\n        }\r\n    \r\n        return () => {\r\n            if (unsubscribeTimeStart) unsubscribeTimeStart();\r\n            if (timerCleanup) timerCleanup();\r\n        };\r\n    }, []);\r\n\r\n    // const simulateSocketScoreUpdate = () => {\r\n    //     const playerIndex = Math.floor(Math.random() * playerScores.length);\r\n    //     const scoreChange = Math.random() > 0.5 ? 10 : -10;\r\n    //     console.log(`Simulated socket event: Player ${playerIndex + 1} score changed by ${scoreChange}`);\r\n\r\n    //     setPlayerScores((prevScores) => {\r\n    //         const newScores = [...prevScores];\r\n    //         newScores[playerIndex] += scoreChange;\r\n    //         return newScores;\r\n    //     });\r\n    //     triggerPlayerFlash(playerIndex, scoreChange > 0);\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     const socketInterval = setInterval(() => {\r\n    //         simulateSocketScoreUpdate();\r\n    //     }, 5000);\r\n    //     return () => clearInterval(socketInterval);\r\n    // }, []);\r\n\r\n    // const triggerPlayerFlash = (index: number, isCorrect: boolean) => {\r\n    //     const flashColor = isCorrect ? \"flash-correct\" : \"flash-incorrect\";\r\n    //     setPlayerFlashes((prevFlashes) => {\r\n    //         const newFlashes = [...prevFlashes];\r\n    //         newFlashes[index] = flashColor;\r\n    //         return newFlashes;\r\n    //     });\r\n    //     setTimeout(() => {\r\n    //         setPlayerFlashes((prevFlashes) => {\r\n    //             const newFlashes = [...prevFlashes];\r\n    //             newFlashes[index] = \"\";\r\n    //             return newFlashes;\r\n    //         });\r\n    //     }, 3000);\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     if (isRunning) {\r\n    //         if (timeLeft > 0) {\r\n    //             const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n    //             return () => clearTimeout(timer);\r\n    //         } else {\r\n\r\n    //             setIsRunning(false);\r\n    //             setTimeLeft(30);\r\n    //         }\r\n    //     }\r\n    // }, [isRunning, timeLeft]); \r\n\r\n    // const handleScoreAdjust = (index: number, amount: number) => {\r\n    //     setPlayerScores((prevScores) => {\r\n    //         const newScores = [...prevScores];\r\n    //         newScores[index] += amount;\r\n    //         return newScores;\r\n    //     });\r\n    //     triggerPlayerFlash(index, amount > 0);\r\n    // };\r\n\r\n    // const handleNextQuestion = async () => {\r\n    //     setCurrentQuestionIndex((prev)=>(parseInt(prev)+1).toString())\r\n    //     const question = await getNextQuestion(testName,currentQuestionIndex,currentRound,hostRoomId)\r\n    //     console.log(question)\r\n    //     alert('Moving to the next question!');\r\n    // };\r\n\r\n    // const getSortedPlayers = (): Player[] => {\r\n    //     return playerScores\r\n    //         .map((score, index) => ({ score, index, username: `Player ${index + 1}`, position: index }))\r\n    //         .sort((a, b) => b.score - a.score)\r\n    //         .map((player, rank) => ({ ...player, position: rank }));\r\n    // };\r\n\r\n    return (\r\n        <div className=\"w-screen h-screen bg-gradient-to-r from-blue-500 to-teal-400 flex flex-col overflow-auto\">\r\n            <Header />\r\n            <div className=\"flex flex-1 p-4 gap-4\">\r\n                <div className=\"w-4/5 flex flex-col\">\r\n                    <div className=\"w-full h-2 bg-gray-300 rounded-full mb-2\">\r\n                        <div\r\n                            className=\"h-full bg-red-500 rounded-full transition-all duration-1000\"\r\n                            style={{ width: `${(timeLeft / 30) * 100}%` }}\r\n                        ></div>\r\n                    </div>\r\n                    {questionComponent}\r\n                    {!isHost && (\r\n                        <div className=\"mt-2 w-full\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"w-full h-14 border border-gray-300 rounded-lg px-4 text-lg text-center\"\r\n                                placeholder=\"Type your answer...\"\r\n                                onKeyDown={handleKeyDown}\r\n                            />\r\n                            <p className=\"mt-2 text-lg\">{playerAnswer && `Your answer: ${playerAnswer}`}</p>\r\n                        </div>\r\n                    )}\r\n                    {PlayerScore}\r\n\r\n                </div>\r\n                <div className=\"w-1/5 flex flex-col\">\r\n                    <div className=\"bg-gray-300 text-center font-bold text-lg p-3 rounded-lg\">\r\n                        ROUND 1\r\n                    </div>\r\n                    {SideBar}\r\n                </div>\r\n            </div>\r\n            <button\r\n                className=\"fixed bottom-6 right-6 bg-gray-800 text-white w-12 h-12 flex items-center justify-center rounded-full shadow-lg\"\r\n                onClick={() => setIsChatOpen(!isChatOpen)}\r\n            >\r\n                {isChatOpen ? 'âœ–' : 'ðŸ’¬'}\r\n            </button>\r\n            {isChatOpen && (\r\n                <div className=\"fixed bottom-20 right-6 w-80 h-60 bg-white shadow-lg rounded-lg p-4\">\r\n                    <p className=\"text-sm font-bold\">Chat</p>\r\n                    <div className=\"h-40 overflow-y-auto bg-gray-100 p-2 rounded-lg\">\r\n                        <p className=\"text-xs\">User1: Hello!</p>\r\n                        <p className=\"text-xs text-right\">You: Hi there!</p>\r\n                    </div>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"w-full h-10 mt-2 border border-gray-300 rounded-lg px-2\"\r\n                        placeholder=\"Type a message...\"\r\n                    />\r\n                </div>\r\n            )}\r\n            {isModalOpen && (\r\n                <div\r\n                    className=\"fixed inset-0 bg-black bg-opacity-80 flex justify-center items-center z-50\"\r\n                    onClick={() => setIsModalOpen(false)}\r\n                >\r\n                    <img\r\n                        src=\"https://a.travel-assets.com/findyours-php/viewfinder/images/res70/474000/474240-Left-Bank-Paris.jpg\"\r\n                        alt=\"Full Size\"\r\n                        className=\"max-w-full max-h-full\"\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Play;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}