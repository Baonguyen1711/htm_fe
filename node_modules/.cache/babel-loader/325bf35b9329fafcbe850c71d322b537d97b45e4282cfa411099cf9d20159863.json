{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\n// Import the initialized app\n\nconst useAuth = () => {\n  _s();\n  const [user, setUser] = useState(null); // Allow state to be either a User object or null\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null); // Error can be a string or null\n\n  const login = async (email, password) => {\n    const auth = getAuth();\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      return userCredential.user; // Return the authenticated user\n    } catch (err) {\n      const error = err; // Assert that 'err' is of type 'Error'\n      console.error(\"Error:\", error.message);\n    }\n  };\n  const logout = async () => {\n    const auth = getAuth();\n    try {\n      await auth.signOut();\n      setUser(null); // Reset the user state to null after logging out\n      console.log(\"User signed out\");\n    } catch (err) {\n      console.error(\"Error signing out:\", err.message);\n    }\n  };\n  return {\n    user,\n    login,\n    logout,\n    loading,\n    error\n  };\n};\n_s(useAuth, \"wJbgydKmzProwqZ2PuaEI7aaFyo=\");\nexport default useAuth;","map":{"version":3,"names":["useState","getAuth","signInWithEmailAndPassword","useAuth","_s","user","setUser","loading","setLoading","error","setError","login","email","password","auth","userCredential","err","console","message","logout","signOut","log"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/hooks/useAuth.ts"],"sourcesContent":["import { useState } from \"react\";\r\nimport { getAuth, signInWithEmailAndPassword, User } from \"firebase/auth\";\r\nimport app from \"./firebase-config\"; // Import the initialized app\r\n\r\n\r\n\r\nconst useAuth = () => {\r\n    const [user, setUser] = useState<User | null>(null); // Allow state to be either a User object or null\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null); // Error can be a string or null\r\n\r\n    const login = async (email: string, password: string) => {\r\n        const auth = getAuth();\r\n        try {\r\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n            return userCredential.user; // Return the authenticated user\r\n        } catch (err) {\r\n            const error = err as Error; // Assert that 'err' is of type 'Error'\r\n            console.error(\"Error:\", error.message);\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        const auth = getAuth();\r\n        try {\r\n            await auth.signOut();\r\n            setUser(null); // Reset the user state to null after logging out\r\n            console.log(\"User signed out\");\r\n        } catch (err: any) {\r\n            console.error(\"Error signing out:\", err.message);\r\n        }\r\n    };\r\n\r\n    return { user, login, logout, loading, error };\r\n};\r\n\r\nexport default useAuth;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,EAAEC,0BAA0B,QAAc,eAAe;AACpC;;AAIrC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAc,IAAI,CAAC,CAAC,CAAC;EACrD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC,CAAC,CAAC;;EAEzD,MAAMW,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACrD,MAAMC,IAAI,GAAGb,OAAO,CAAC,CAAC;IACtB,IAAI;MACA,MAAMc,cAAc,GAAG,MAAMb,0BAA0B,CAACY,IAAI,EAAEF,KAAK,EAAEC,QAAQ,CAAC;MAC9E,OAAOE,cAAc,CAACV,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOW,GAAG,EAAE;MACV,MAAMP,KAAK,GAAGO,GAAY,CAAC,CAAC;MAC5BC,OAAO,CAACR,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACS,OAAO,CAAC;IAC1C;EACJ,CAAC;EAED,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvB,MAAML,IAAI,GAAGb,OAAO,CAAC,CAAC;IACtB,IAAI;MACA,MAAMa,IAAI,CAACM,OAAO,CAAC,CAAC;MACpBd,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;MACfW,OAAO,CAACI,GAAG,CAAC,iBAAiB,CAAC;IAClC,CAAC,CAAC,OAAOL,GAAQ,EAAE;MACfC,OAAO,CAACR,KAAK,CAAC,oBAAoB,EAAEO,GAAG,CAACE,OAAO,CAAC;IACpD;EACJ,CAAC;EAED,OAAO;IAAEb,IAAI;IAAEM,KAAK;IAAEQ,MAAM;IAAEZ,OAAO;IAAEE;EAAM,CAAC;AAClD,CAAC;AAACL,EAAA,CA5BID,OAAO;AA8Bb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}