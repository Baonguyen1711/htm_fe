{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\layouts\\\\Play.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Header from './Header';\nimport { usePlayer } from '../context/playerContext';\nimport { setupOnDisconnect } from '../services/firebaseServices';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { useHost } from '../context/hostContext';\nimport { useTimeStart } from '../context/timeListenerContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Play = ({\n  questionComponent,\n  isHost = false,\n  PlayerScore,\n  SideBar\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const playerAnswerRef = useRef(\"\");\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [userId, setUserId] = useState(localStorage.getItem(\"userId\"));\n  const [params] = useSearchParams();\n  const round = params.get(\"round\") || \"1\";\n  const [isRunning, setIsRunning] = useState(false);\n  //const [playerAnswer, setPlayerAnswer] = useState<string>(\"\")\n\n  // const [playerFlashes, setPlayerFlashes] = useState(Array(playerScores.length).fill(\"\"));\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(\"0\");\n  const [startedListening, setStartedListening] = useState(false);\n  const {\n    players,\n    setPlayers,\n    roomId,\n    setRoomId,\n    playersArray,\n    setPlayerArray,\n    position,\n    setCurrentQuestion,\n    selectedTopic,\n    setSelectedTopic,\n    setScoreList\n  } = usePlayer();\n  const {\n    playerScores,\n    setPlayerScores\n  } = useHost();\n  const isMounted = useRef(false);\n  const {\n    timeLeft,\n    startTimer\n  } = useTimeStart();\n  const [searchParams] = useSearchParams();\n  const {\n    setInitialGrid\n  } = usePlayer();\n  const isFirstCallback = useRef(true);\n  const [isAllowed, setIsAllowed] = useState(null);\n  useEffect(() => {\n    const unsubscribePlayers = listenToRoundStart(roomId, data => {\n      const currentRound = data.round;\n      const requestedRound = parseInt(round || \"\", 10);\n      console.log(\"currentRound\", currentRound);\n      console.log(\"requestedRound\", requestedRound);\n      if (requestedRound === currentRound) {\n        setIsAllowed(true);\n      } else {\n        setIsAllowed(false);\n        if (currentRound) {\n          navigate(`/play?round=${data.round}&roomId=${roomId}`, {\n            replace: true\n          });\n        }\n      }\n      if (isFirstCallback.current) {\n        isFirstCallback.current = false;\n        return;\n      }\n      console.log(\"round\", data);\n      setInitialGrid(data.grid);\n      navigate(`/play?round=${data.round}&roomId=${roomId}`);\n    });\n    return () => {\n      unsubscribePlayers();\n    };\n  }, [roomId]);\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      const inputElement = event.target; // Type assertion\n      console.log(\"inputElement.value\", inputElement.value);\n      playerAnswerRef.current = inputElement.value;\n      inputElement.value = \"\"; // Clears input field\n    }\n  };\n  // const startTimer = useCallback(() => {\n  //     let timer: NodeJS.Timeout;\n\n  //     timer = setInterval(() => {\n  //         setTimeLeft(prev => {\n  //             if (prev <= 1) {\n  //                 clearInterval(timer);\n  //                 if (round === \"3\") {\n  //                     setCurrentPacketQuestion(roomId, 1)\n  //                     setCurrentQuestion(\"\")\n  //                     setSelectedTopic(null)\n  //                     localStorage.removeItem(\"questions\")\n  //                 }\n  //                 if (!isHost && round !== \"3\") {\n  //                     submitAnswer(roomId, playerAnswerRef.current, position)\n  //                 }\n  //                 return 30;\n  //             }\n  //             return prev - 1;\n  //         });\n  //     }, 1000);\n\n  //     return () => clearInterval(timer);\n  // }, [isHost, position, roomId, round, setCurrentPacketQuestion, setCurrentQuestion, setSelectedTopic]);\n  // const isInitialMount = true;\n  // useEffect(() => {\n  //     if (isInitialMount) return\n\n  //     // Start timer when selectedTopic changes\n  //     startTimer(30);\n\n  //     // Side effects based on timer reaching 0\n  // }, []);\n\n  // useEffect(() => {\n  //     console.log(\"timeLeft\", timeLeft);\n\n  //     if (timeLeft === 0) {\n  //         // When timer runs out, do your clean up / game logic:\n  //         submitAnswer(roomId, playerAnswerRef.current, position)\n  //         // If you want to reset timer, call startTimer again here or leave stopped\n  //     }\n  // }, [timeLeft]);\n  // useEffect(() => {\n  //     console.log(\"timeLeft on play\", timeLeft)\n  // }, [timeLeft]);\n\n  useEffect(() => {\n    if (!roomId || !userId) return;\n\n    // Setup onDisconnect to remove user from room when connection lost\n    const cancelOnDisconnect = setupOnDisconnect(roomId, userId);\n    return () => {\n      // Optional: cancel onDisconnect if component unmounts normally\n      cancelOnDisconnect();\n    };\n  }, [roomId, userId]);\n  useEffect(() => {\n    const unsubscribePlayers = listenToPlayers(roomId, updatedPlayers => {\n      console.log(\"updatedPlayers\", updatedPlayers);\n      console.log(\"Object.keys(updatedPlayers)\", Object.keys(updatedPlayers));\n      console.log(\"Object.keys(updatedPlayers).length\", Object.keys(updatedPlayers).length);\n      if (updatedPlayers && Object.keys(updatedPlayers).length > 0) {\n        const playersList = Object.values(updatedPlayers);\n        const initialScoreList = [...playersList];\n        const scoreList = localStorage.getItem(\"scoreList\");\n        if (scoreList) {\n          setScoreList(JSON.parse(scoreList));\n        } else {\n          for (var score of initialScoreList) {\n            score[\"score\"] = \"0\";\n            score[\"isCorrect\"] = false;\n            score[\"isModified\"] = false;\n          }\n          console.log(\"initialScoreList\", initialScoreList);\n          setScoreList(initialScoreList);\n          setPlayerScores(initialScoreList);\n        }\n        setPlayerArray(playersList);\n        localStorage.setItem(\"playerList\", JSON.stringify(playersList));\n        console.log(\"Updated localStorage:\", localStorage.getItem(\"playerList\"));\n      } else {\n        console.log(\"Room is empty or players node deleted\");\n        setPlayerArray([]); // Clear state\n        localStorage.removeItem(\"playerList\"); // Clear localStorage\n      }\n    });\n\n    // No need to set state here; it's handled by useState initializer\n    return () => {\n      unsubscribePlayers();\n    };\n  }, []);\n\n  // useEffect(() => {\n\n  //     let timerCleanup: (() => void) | undefined;\n  //     const unsubscribeTimeStart = listenToTimeStart(roomId, startTimer);\n  //     console.log(\"listening on time start\");\n\n  //     return () => {\n  //         unsubscribeTimeStart();\n  //         if (timerCleanup) timerCleanup();\n  //     };\n  // }, [roomId]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen bg-gradient-to-r from-blue-500 to-teal-400 flex flex-col overflow-auto\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 p-4 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4/5 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full h-2 bg-gray-300 rounded-full mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full bg-red-500 rounded-full transition-all duration-1000\",\n            style: {\n              width: `${timeLeft / 30 * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), questionComponent, PlayerScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/5 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-300 text-center font-bold text-lg p-3 rounded-lg\",\n          children: \"ROUND 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), SideBar]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"fixed bottom-6 right-6 bg-gray-800 text-white w-12 h-12 flex items-center justify-center rounded-full shadow-lg\",\n      onClick: () => setIsChatOpen(!isChatOpen),\n      children: isChatOpen ? 'âœ–' : 'ðŸ’¬'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), isChatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-20 right-6 w-80 h-60 bg-white shadow-lg rounded-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm font-bold\",\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-40 overflow-y-auto bg-gray-100 p-2 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs\",\n          children: \"User1: Hello!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-right\",\n          children: \"You: Hi there!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"w-full h-10 mt-2 border border-gray-300 rounded-lg px-2\",\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-80 flex justify-center items-center z-50\",\n      onClick: () => setIsModalOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://a.travel-assets.com/findyours-php/viewfinder/images/res70/474000/474240-Left-Bank-Paris.jpg\",\n        alt: \"Full Size\",\n        className: \"max-w-full max-h-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 9\n  }, this);\n};\n_s(Play, \"X/332TdeTRBWeKKwvhh7lGS4BTw=\", false, function () {\n  return [useNavigate, useSearchParams, usePlayer, useHost, useTimeStart, useSearchParams, usePlayer];\n});\n_c = Play;\nexport default Play;\nvar _c;\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Header","usePlayer","setupOnDisconnect","useNavigate","useSearchParams","useHost","useTimeStart","jsxDEV","_jsxDEV","Play","questionComponent","isHost","PlayerScore","SideBar","_s","navigate","playerAnswerRef","isChatOpen","setIsChatOpen","isModalOpen","setIsModalOpen","userId","setUserId","localStorage","getItem","params","round","get","isRunning","setIsRunning","currentQuestionIndex","setCurrentQuestionIndex","startedListening","setStartedListening","players","setPlayers","roomId","setRoomId","playersArray","setPlayerArray","position","setCurrentQuestion","selectedTopic","setSelectedTopic","setScoreList","playerScores","setPlayerScores","isMounted","timeLeft","startTimer","searchParams","setInitialGrid","isFirstCallback","isAllowed","setIsAllowed","unsubscribePlayers","listenToRoundStart","data","currentRound","requestedRound","parseInt","console","log","replace","current","grid","handleKeyDown","event","key","inputElement","target","value","cancelOnDisconnect","listenToPlayers","updatedPlayers","Object","keys","length","playersList","values","initialScoreList","scoreList","JSON","parse","score","setItem","stringify","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","onClick","type","placeholder","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/layouts/Play.tsx"],"sourcesContent":["import React, { useState, useEffect, ReactNode, useRef, useCallback } from 'react';\r\nimport Header from './Header';\r\nimport { usePlayer } from '../context/playerContext';\r\nimport { Answer, User } from '../type';\r\nimport { addPlayerToRoom, listenTolistenToPlayers, listenToScores, listenToAnswers, listenToTimeStart, listenToBroadcastedAnswer, setupOnDisconnect } from '../services/firebaseServices';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { submitAnswer } from './services';\r\nimport { getNextQuestion } from '../pages/Host/Test/service';\r\nimport { useHost } from '../context/hostContext';\r\nimport HostManagement from '../components/HostManagement';\r\nimport PlayerScore from '../components/PlayerScore';\r\nimport HostScore from '../components/PlayerAnswer';\r\nimport { setCurrentPacketQuestion } from '../components/services';\r\nimport { useTimeStart } from '../context/timeListenerContext';\r\n\r\n\r\n\r\ninterface PlayProps {\r\n    questionComponent: ReactNode;\r\n    isHost?: boolean;\r\n    PlayerScore: ReactNode\r\n    SideBar: ReactNode\r\n}\r\n\r\ninterface Player {\r\n    score: number;\r\n    index: number;\r\n    username: string;\r\n    position: number;\r\n}\r\n\r\nconst Play: React.FC<PlayProps> = ({ questionComponent, isHost = false, PlayerScore, SideBar }) => {\r\n\r\n    const navigate = useNavigate()\r\n    const playerAnswerRef = useRef(\"\");\r\n    const [isChatOpen, setIsChatOpen] = useState(false);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [userId, setUserId] = useState(localStorage.getItem(\"userId\"))\r\n    const [params] = useSearchParams()\r\n    const round = params.get(\"round\") || \"1\"\r\n\r\n\r\n    const [isRunning, setIsRunning] = useState(false)\r\n    //const [playerAnswer, setPlayerAnswer] = useState<string>(\"\")\r\n\r\n\r\n    // const [playerFlashes, setPlayerFlashes] = useState(Array(playerScores.length).fill(\"\"));\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState<string>(\"0\")\r\n    const [startedListening, setStartedListening] = useState<boolean>(false)\r\n    const { players, setPlayers, roomId, setRoomId, playersArray, setPlayerArray, position, setCurrentQuestion, selectedTopic, setSelectedTopic, setScoreList } = usePlayer()\r\n    const { playerScores, setPlayerScores } = useHost()\r\n    const isMounted = useRef(false);\r\n    const { timeLeft, startTimer } = useTimeStart();\r\n    const [searchParams] = useSearchParams();\r\n\r\n    const { setInitialGrid } = usePlayer()\r\n\r\n    const isFirstCallback = useRef(true);\r\n    const [isAllowed, setIsAllowed] = useState<boolean | null>(null);\r\n\r\n    useEffect(() => {\r\n        const unsubscribePlayers = listenToRoundStart(roomId, (data) => {\r\n\r\n\r\n            const currentRound = data.round;\r\n            const requestedRound = parseInt(round || \"\", 10);\r\n\r\n            console.log(\"currentRound\",currentRound);\r\n            console.log(\"requestedRound\", requestedRound);\r\n            \r\n            \r\n            if (requestedRound === currentRound) {\r\n                setIsAllowed(true);\r\n            } else {\r\n                setIsAllowed(false);\r\n                if (currentRound) {\r\n                    navigate(`/play?round=${data.round}&roomId=${roomId}`, { replace: true });\r\n                }\r\n            }\r\n\r\n            \r\n            if (isFirstCallback.current) {\r\n                isFirstCallback.current = false;\r\n                return;\r\n            }\r\n\r\n\r\n            console.log(\"round\", data)\r\n            setInitialGrid(data.grid)\r\n            navigate(`/play?round=${data.round}&roomId=${roomId}`);\r\n        });\r\n\r\n        return () => {\r\n            unsubscribePlayers();\r\n        };\r\n    }, [roomId]);\r\n\r\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === \"Enter\") {\r\n            const inputElement = event.target as HTMLInputElement; // Type assertion\r\n            console.log(\"inputElement.value\", inputElement.value)\r\n            playerAnswerRef.current = inputElement.value\r\n            inputElement.value = \"\"; // Clears input field\r\n        }\r\n    };\r\n    // const startTimer = useCallback(() => {\r\n    //     let timer: NodeJS.Timeout;\r\n\r\n    //     timer = setInterval(() => {\r\n    //         setTimeLeft(prev => {\r\n    //             if (prev <= 1) {\r\n    //                 clearInterval(timer);\r\n    //                 if (round === \"3\") {\r\n    //                     setCurrentPacketQuestion(roomId, 1)\r\n    //                     setCurrentQuestion(\"\")\r\n    //                     setSelectedTopic(null)\r\n    //                     localStorage.removeItem(\"questions\")\r\n    //                 }\r\n    //                 if (!isHost && round !== \"3\") {\r\n    //                     submitAnswer(roomId, playerAnswerRef.current, position)\r\n    //                 }\r\n    //                 return 30;\r\n    //             }\r\n    //             return prev - 1;\r\n    //         });\r\n    //     }, 1000);\r\n\r\n    //     return () => clearInterval(timer);\r\n    // }, [isHost, position, roomId, round, setCurrentPacketQuestion, setCurrentQuestion, setSelectedTopic]);\r\n    // const isInitialMount = true;\r\n    // useEffect(() => {\r\n    //     if (isInitialMount) return\r\n\r\n    //     // Start timer when selectedTopic changes\r\n    //     startTimer(30);\r\n\r\n    //     // Side effects based on timer reaching 0\r\n    // }, []);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"timeLeft\", timeLeft);\r\n\r\n    //     if (timeLeft === 0) {\r\n    //         // When timer runs out, do your clean up / game logic:\r\n    //         submitAnswer(roomId, playerAnswerRef.current, position)\r\n    //         // If you want to reset timer, call startTimer again here or leave stopped\r\n    //     }\r\n    // }, [timeLeft]);\r\n    // useEffect(() => {\r\n    //     console.log(\"timeLeft on play\", timeLeft)\r\n    // }, [timeLeft]);\r\n\r\n    useEffect(() => {\r\n        if (!roomId || !userId) return;\r\n\r\n        // Setup onDisconnect to remove user from room when connection lost\r\n        const cancelOnDisconnect = setupOnDisconnect(roomId, userId);\r\n\r\n        return () => {\r\n            // Optional: cancel onDisconnect if component unmounts normally\r\n            cancelOnDisconnect();\r\n        };\r\n    }, [roomId, userId]);\r\n\r\n    useEffect(() => {\r\n        const unsubscribePlayers = listenToPlayers(roomId, (updatedPlayers) => {\r\n            console.log(\"updatedPlayers\", updatedPlayers)\r\n            console.log(\"Object.keys(updatedPlayers)\", Object.keys(updatedPlayers))\r\n            console.log(\"Object.keys(updatedPlayers).length\", Object.keys(updatedPlayers).length)\r\n            if (updatedPlayers && Object.keys(updatedPlayers).length > 0) {\r\n                const playersList = Object.values(updatedPlayers);\r\n                const initialScoreList = [...playersList]\r\n                const scoreList = localStorage.getItem(\"scoreList\");\r\n                if (scoreList) {\r\n                    setScoreList(JSON.parse(scoreList))\r\n                } else {\r\n                    for (var score of initialScoreList) {\r\n                        score[\"score\"] = \"0\";\r\n                        score[\"isCorrect\"] = false;\r\n                        score[\"isModified\"] = false\r\n                    }\r\n                    console.log(\"initialScoreList\", initialScoreList);\r\n\r\n                    setScoreList(initialScoreList)\r\n                    setPlayerScores(initialScoreList)\r\n                }\r\n\r\n                setPlayerArray(playersList);\r\n                localStorage.setItem(\"playerList\", JSON.stringify(playersList));\r\n                console.log(\"Updated localStorage:\", localStorage.getItem(\"playerList\"));\r\n            } else {\r\n                console.log(\"Room is empty or players node deleted\");\r\n                setPlayerArray([]); // Clear state\r\n                localStorage.removeItem(\"playerList\"); // Clear localStorage\r\n            }\r\n        });\r\n\r\n        // No need to set state here; it's handled by useState initializer\r\n        return () => {\r\n            unsubscribePlayers();\r\n        };\r\n    }, []);\r\n\r\n\r\n    // useEffect(() => {\r\n\r\n    //     let timerCleanup: (() => void) | undefined;\r\n    //     const unsubscribeTimeStart = listenToTimeStart(roomId, startTimer);\r\n    //     console.log(\"listening on time start\");\r\n\r\n\r\n    //     return () => {\r\n    //         unsubscribeTimeStart();\r\n    //         if (timerCleanup) timerCleanup();\r\n    //     };\r\n    // }, [roomId]);\r\n\r\n\r\n    return (\r\n        <div className=\"w-screen h-screen bg-gradient-to-r from-blue-500 to-teal-400 flex flex-col overflow-auto\">\r\n            <Header />\r\n            <div className=\"flex flex-1 p-4 gap-4\">\r\n                <div className=\"w-4/5 flex flex-col\">\r\n                    <div className=\"w-full h-2 bg-gray-300 rounded-full mb-2\">\r\n                        <div\r\n                            className=\"h-full bg-red-500 rounded-full transition-all duration-1000\"\r\n                            style={{ width: `${(timeLeft / 30) * 100}%` }}\r\n                        ></div>\r\n                    </div>\r\n                    {questionComponent}\r\n                    {/* {!isHost && (\r\n                        <div className=\"mt-2 w-full\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"w-full h-14 border border-gray-300 rounded-lg px-4 text-lg text-center\"\r\n                                placeholder=\"Type your answer...\"\r\n                                onKeyDown={handleKeyDown}\r\n                            // value={playerAnswer} \r\n                            // onChange={(e) => setPlayerAnswer(e.target.value)}\r\n                            />\r\n                            <p className=\"mt-2 text-lg\">{playerAnswerRef.current && `Your answer: ${playerAnswerRef.current}`}</p>\r\n                        </div>\r\n                    )} */}\r\n                    {PlayerScore}\r\n\r\n                </div>\r\n                <div className=\"w-1/5 flex flex-col\">\r\n                    <div className=\"bg-gray-300 text-center font-bold text-lg p-3 rounded-lg\">\r\n                        ROUND 1\r\n                    </div>\r\n                    {SideBar}\r\n                </div>\r\n            </div>\r\n            <button\r\n                className=\"fixed bottom-6 right-6 bg-gray-800 text-white w-12 h-12 flex items-center justify-center rounded-full shadow-lg\"\r\n                onClick={() => setIsChatOpen(!isChatOpen)}\r\n            >\r\n                {isChatOpen ? 'âœ–' : 'ðŸ’¬'}\r\n            </button>\r\n            {isChatOpen && (\r\n                <div className=\"fixed bottom-20 right-6 w-80 h-60 bg-white shadow-lg rounded-lg p-4\">\r\n                    <p className=\"text-sm font-bold\">Chat</p>\r\n                    <div className=\"h-40 overflow-y-auto bg-gray-100 p-2 rounded-lg\">\r\n                        <p className=\"text-xs\">User1: Hello!</p>\r\n                        <p className=\"text-xs text-right\">You: Hi there!</p>\r\n                    </div>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"w-full h-10 mt-2 border border-gray-300 rounded-lg px-2\"\r\n                        placeholder=\"Type a message...\"\r\n                    />\r\n                </div>\r\n            )}\r\n            {isModalOpen && (\r\n                <div\r\n                    className=\"fixed inset-0 bg-black bg-opacity-80 flex justify-center items-center z-50\"\r\n                    onClick={() => setIsModalOpen(false)}\r\n                >\r\n                    <img\r\n                        src=\"https://a.travel-assets.com/findyours-php/viewfinder/images/res70/474000/474240-Left-Bank-Paris.jpg\"\r\n                        alt=\"Full Size\"\r\n                        className=\"max-w-full max-h-full\"\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Play;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}