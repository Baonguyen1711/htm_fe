{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\context\\\\hostContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, createContext, useContext } from \"react\";\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { getNextQuestion } from '../pages/Host/Test/service';\n\n// Create a context for Axios with Authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HostContext = /*#__PURE__*/createContext(null);\nexport const HostProvider = ({\n  children\n}) => {\n  _s();\n  const spotsNumber = [1, 2, 3, 4];\n  const [searchParams] = useSearchParams();\n  const currentRound = searchParams.get(\"round\") || \"\";\n  const testName = searchParams.get(\"testName\") || \"\";\n  const hostRoomId = searchParams.get(\"roomId\") || \"\";\n  const navigate = useNavigate();\n  const [playerScores, setPlayerScores] = useState([0, 0, 0, 0]);\n  const [playerFlashes, setPlayerFlashes] = useState(Array(playerScores.length).fill(\"\"));\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(\"0\");\n  const [timeLeft, setTimeLeft] = useState(30);\n  const triggerPlayerFlash = (index, isCorrect) => {\n    const flashColor = isCorrect ? \"flash-correct\" : \"flash-incorrect\";\n    setPlayerFlashes(prevFlashes => {\n      const newFlashes = [...prevFlashes];\n      newFlashes[index] = flashColor;\n      return newFlashes;\n    });\n    setTimeout(() => {\n      setPlayerFlashes(prevFlashes => {\n        const newFlashes = [...prevFlashes];\n        newFlashes[index] = \"\";\n        return newFlashes;\n      });\n    }, 3000);\n  };\n  const handleScoreAdjust = (index, amount) => {\n    setPlayerScores(prevScores => {\n      const newScores = [...prevScores];\n      newScores[index] += amount;\n      return newScores;\n    });\n    triggerPlayerFlash(index, amount > 0);\n  };\n  const handleNextQuestion = async () => {\n    setCurrentQuestionIndex(prev => (parseInt(prev) + 1).toString());\n    const question = await getNextQuestion(testName, currentQuestionIndex, currentRound, hostRoomId);\n    console.log(question);\n    alert('Moving to the next question!');\n  };\n\n  // const getSortedPlayers = (): Player[] => {\n  //     return playerScores\n  //         .map((score, index) => ({ score, index, username: `Player ${index + 1}`, position: index }))\n  //         .sort((a, b) => b.score - a.score)\n  //         .map((player, rank) => ({ ...player, position: rank }));\n  // };\n\n  return /*#__PURE__*/_jsxDEV(HostContext.Provider, {\n    value: {\n      handleScoreAdjust,\n      handleNextQuestion,\n      triggerPlayerFlash,\n      currentQuestionIndex,\n      setCurrentQuestionIndex,\n      playerFlashes,\n      setPlayerFlashes,\n      playerScores,\n      setPlayerScores,\n      spotsNumber,\n      handleNextQuestion\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use Axios with Bearer authentication\n_s(HostProvider, \"PFlN9x1QnlnYCjHjAeUGYqWUr4k=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = HostProvider;\nexport const useHost = () => {\n  _s2();\n  return useContext(HostContext);\n};\n_s2(useHost, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"HostProvider\");","map":{"version":3,"names":["useState","createContext","useContext","useNavigate","useSearchParams","getNextQuestion","jsxDEV","_jsxDEV","HostContext","HostProvider","children","_s","spotsNumber","searchParams","currentRound","get","testName","hostRoomId","navigate","playerScores","setPlayerScores","playerFlashes","setPlayerFlashes","Array","length","fill","currentQuestionIndex","setCurrentQuestionIndex","timeLeft","setTimeLeft","triggerPlayerFlash","index","isCorrect","flashColor","prevFlashes","newFlashes","setTimeout","handleScoreAdjust","amount","prevScores","newScores","handleNextQuestion","prev","parseInt","toString","question","console","log","alert","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useHost","_s2","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/context/hostContext.tsx"],"sourcesContent":["\r\nimport { useEffect, useState, createContext, useContext } from \"react\";\r\nimport { User } from \"../type\";\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { getNextQuestion } from '../pages/Host/Test/service';\r\n\r\n// Create a context for Axios with Authentication\r\nconst HostContext = createContext<any>(null);\r\n\r\nexport const HostProvider = ({ children }: { children: React.ReactNode }) => {\r\n    const spotsNumber = [1,2,3,4]\r\n    const [searchParams] = useSearchParams()\r\n    const currentRound = searchParams.get(\"round\") || \"\"\r\n    const testName = searchParams.get(\"testName\") || \"\"\r\n    const hostRoomId = searchParams.get(\"roomId\") || \"\"\r\n    const navigate = useNavigate()\r\n    const [playerScores, setPlayerScores] = useState<number[]>([0, 0, 0, 0]);\r\n    const [playerFlashes, setPlayerFlashes] = useState(Array(playerScores.length).fill(\"\"));\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState<string>(\"0\")\r\n    const [timeLeft, setTimeLeft] = useState(30);\r\n\r\n    const triggerPlayerFlash = (index: number, isCorrect: boolean) => {\r\n        const flashColor = isCorrect ? \"flash-correct\" : \"flash-incorrect\";\r\n        setPlayerFlashes((prevFlashes) => {\r\n            const newFlashes = [...prevFlashes];\r\n            newFlashes[index] = flashColor;\r\n            return newFlashes;\r\n        });\r\n        setTimeout(() => {\r\n            setPlayerFlashes((prevFlashes) => {\r\n                const newFlashes = [...prevFlashes];\r\n                newFlashes[index] = \"\";\r\n                return newFlashes;\r\n            });\r\n        }, 3000);\r\n    };\r\n\r\n    const handleScoreAdjust = (index: number, amount: number) => {\r\n        setPlayerScores((prevScores) => {\r\n            const newScores = [...prevScores];\r\n            newScores[index] += amount;\r\n            return newScores;\r\n        });\r\n        triggerPlayerFlash(index, amount > 0);\r\n    };\r\n\r\n    const handleNextQuestion = async () => {\r\n        setCurrentQuestionIndex((prev)=>(parseInt(prev)+1).toString())\r\n        const question = await getNextQuestion(testName,currentQuestionIndex,currentRound,hostRoomId)\r\n        console.log(question)\r\n        alert('Moving to the next question!');\r\n    };\r\n\r\n    // const getSortedPlayers = (): Player[] => {\r\n    //     return playerScores\r\n    //         .map((score, index) => ({ score, index, username: `Player ${index + 1}`, position: index }))\r\n    //         .sort((a, b) => b.score - a.score)\r\n    //         .map((player, rank) => ({ ...player, position: rank }));\r\n    // };\r\n\r\n  return (\r\n    <HostContext.Provider value={{handleScoreAdjust, handleNextQuestion, triggerPlayerFlash, currentQuestionIndex,setCurrentQuestionIndex,playerFlashes,setPlayerFlashes,playerScores,setPlayerScores, spotsNumber, handleNextQuestion}}>\r\n      {children}\r\n    </HostContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use Axios with Bearer authentication\r\nexport const useHost = () => {\r\n  return useContext(HostContext);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}