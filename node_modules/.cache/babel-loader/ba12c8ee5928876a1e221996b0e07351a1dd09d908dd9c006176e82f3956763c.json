{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\layouts\\\\RoundBase\\\\Round3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getPacketNames } from '../../components/services';\nimport { useSearchParams } from 'react-router-dom';\nimport { listenToPackets, listenToQuestions, listenToCurrentQuestionsNumber } from '../../services/firebaseServices';\nimport { usePlayer } from '../../context/playerContext';\nimport { setCurrentPacketQuestion } from '../../components/services';\n// const topics = [\n//     { name: \"Xuân\", questions: [\"Question 1.1\", \"Question 1.2\", \"Question 1.3\", \"Question 1.4\", \"Question 1.5\", \"Question 1.6\", \"Question 1.7\", \"Question 1.8\", \"Question 1.9\", \"Question 1.10\", \"Question 1.11\", \"Question 1.12\", \"Question 1.13\", \"Question 1.14\", \"Question 1.15\"] },\n//     { name: \"Hạ\", questions: [\"Question 2.1\", \"Question 2.2\", \"Question 2.3\", \"Question 2.4\", \"Question 2.5\", \"Question 2.6\", \"Question 2.7\", \"Question 2.8\", \"Question 2.9\", \"Question 2.10\", \"Question 2.11\", \"Question 2.12\", \"Question 2.13\", \"Question 2.14\", \"Question 2.15\"] },\n//     { name: \"Thu\", questions: [\"Question 1.1\", \"Question 1.2\", \"Question 1.3\", \"Question 1.4\", \"Question 1.5\", \"Question 1.6\", \"Question 1.7\", \"Question 1.8\", \"Question 1.9\", \"Question 1.10\", \"Question 1.11\", \"Question 1.12\", \"Question 1.13\", \"Question 1.14\", \"Question 1.15\"] },\n//     { name: \"Đông\", questions: [\"Question 1.1\", \"Question 1.2\", \"Question 1.3\", \"Question 1.4\", \"Question 1.5\", \"Question 1.6\", \"Question 1.7\", \"Question 1.8\", \"Question 1.9\", \"Question 1.10\", \"Question 1.11\", \"Question 1.12\", \"Question 1.13\", \"Question 1.14\", \"Question 1.15\"] },\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionBoxRound3 = ({\n  isHost = false\n}) => {\n  _s();\n  const [topics, setTopics] = useState([]);\n  //const [selectedTopic, setSelectedTopic] = useState<string | null>(null);\n  const [hiddenTopics, setHiddenTopics] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(\"\");\n  const [timeLeft, setTimeLeft] = useState(60);\n  const {\n    selectedTopic,\n    setSelectedTopic\n  } = usePlayer();\n  const [searchParams] = useSearchParams();\n  const testName = searchParams.get(\"testName\") || \"\";\n  const roomId = searchParams.get(\"roomId\") || \"\";\n  const isFirstMounted = useRef(true);\n  useEffect(() => {\n    if (!isHost) return;\n    const getTopic = async () => {\n      const topics = await getPacketNames(testName, roomId);\n      setTopics(topics);\n    };\n    getTopic();\n  }, []);\n  useEffect(() => {\n    if (isHost) return;\n    const unsubscribePlayers = listenToPackets(roomId, packets => {\n      setTopics(packets);\n      setSelectedTopic(packets);\n    });\n    return () => {\n      unsubscribePlayers();\n    };\n  }, []);\n  useEffect(() => {\n    if (isHost) return;\n    const unsubscribePlayers = listenToQuestions(roomId, data => {\n      console.log(\"questions\", data);\n      if (!data.questions) return;\n      if (!localStorage.getItem(\"questions\")) {\n        const questions = [...data.questions];\n        localStorage.setItem(\"questions\", JSON.stringify(questions));\n      } else {\n        const questions = [...JSON.parse(localStorage.getItem(\"questions\") || \"\"), ...data.questions];\n        localStorage.setItem(\"questions\", JSON.stringify(questions));\n      }\n    });\n    return () => {\n      unsubscribePlayers();\n    };\n  }, []);\n  useEffect(() => {\n    const unsubscribePlayers = listenToCurrentQuestionsNumber(roomId, questionNumber => {\n      console.log(\"questionNumber\", questionNumber);\n      if (localStorage.getItem(\"questions\")) {\n        const question = JSON.parse(localStorage.getItem(\"questions\") || \"\")[questionNumber - 1];\n        if (question) {\n          setCurrentQuestion(question.question);\n          if (questionNumber === 15) {\n            {\n              setCurrentPacketQuestion(roomId, 1);\n            }\n          }\n        }\n      }\n    });\n    return () => {\n      unsubscribePlayers();\n    };\n  }, []);\n  const handleTopicSelect = topic => {\n    if (!isHost) return; // Non-host users cannot select topics\n    setSelectedTopic(topic);\n    setHiddenTopics(prev => [...prev, topic]); // Add the selected topic to the hidden list\n    setCurrentQuestionIndex(0);\n    setTimeLeft(60); // Reset timer for the question\n  };\n  useEffect(() => {\n    if (selectedTopic && timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (timeLeft === 0 && isHost) {\n      // Automatically navigate back for hosts\n      const resetTimer = setTimeout(() => {\n        setSelectedTopic(null);\n      }, 3000);\n      return () => clearTimeout(resetTimer);\n    }\n  }, [timeLeft, selectedTopic, isHost]);\n  const handleHostCommand = () => {\n    if (!isHost) return; // Non-host users cannot change questions\n    setCurrentQuestionIndex(prevIndex => prevIndex < 14 ? prevIndex + 1 : prevIndex);\n  };\n\n  //const currentQuestions = topics.find((topic) => topic.name === selectedTopic)?.questions;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: !selectedTopic ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-4 gap-4\",\n      children: topics.filter(topic => !hiddenTopics.includes(topic)) // Hide already chosen topics\n      .map(topic => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `bg-blue-500 text-white p-2 rounded-lg shadow-md hover:bg-blue-700 ${!isHost ? \"cursor-not-allowed opacity-50\" : \"\"}`,\n        onClick: () => handleTopicSelect(topic),\n        disabled: !isHost // Disable for non-host users\n        ,\n        children: topic\n      }, topic, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold\",\n        children: selectedTopic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: [\"Time Left: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [timeLeft, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mt-2\",\n          children: currentQuestion ? currentQuestion : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this), isHost && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 bg-green-500 text-white p-2 rounded-lg\",\n        onClick: handleHostCommand,\n        children: \"Show Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n\n// const Round3: React.FC<RoundBase> = ({ isHost }) => {\n//     return (\n//         <Play\n//             questionComponent={<QuestionComponent isHost={isHost}/>}\n//             isHost={isHost}\n//         />\n//     );\n// }\n_s(QuestionBoxRound3, \"xt3LSbzw1q90HzpqhVsaZvCur6g=\", false, function () {\n  return [usePlayer, useSearchParams];\n});\n_c = QuestionBoxRound3;\nexport default QuestionBoxRound3;\nvar _c;\n$RefreshReg$(_c, \"QuestionBoxRound3\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getPacketNames","useSearchParams","listenToPackets","listenToQuestions","listenToCurrentQuestionsNumber","usePlayer","setCurrentPacketQuestion","jsxDEV","_jsxDEV","QuestionBoxRound3","isHost","_s","topics","setTopics","hiddenTopics","setHiddenTopics","currentQuestionIndex","setCurrentQuestionIndex","currentQuestion","setCurrentQuestion","timeLeft","setTimeLeft","selectedTopic","setSelectedTopic","searchParams","testName","get","roomId","isFirstMounted","getTopic","unsubscribePlayers","packets","data","console","log","questions","localStorage","getItem","setItem","JSON","stringify","parse","questionNumber","question","handleTopicSelect","topic","prev","timer","setTimeout","clearTimeout","resetTimer","handleHostCommand","prevIndex","className","children","filter","includes","map","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/layouts/RoundBase/Round3.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Play from '../Play';\r\nimport { RoundBase } from '../../type';\r\nimport { getPacketNames } from '../../components/services';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { listenToPackets, listenToQuestions, listenToCurrentQuestionsNumber } from '../../services/firebaseServices';\r\nimport { usePlayer } from '../../context/playerContext';\r\nimport { setCurrentPacketQuestion } from '../../components/services';\r\n// const topics = [\r\n//     { name: \"Xuân\", questions: [\"Question 1.1\", \"Question 1.2\", \"Question 1.3\", \"Question 1.4\", \"Question 1.5\", \"Question 1.6\", \"Question 1.7\", \"Question 1.8\", \"Question 1.9\", \"Question 1.10\", \"Question 1.11\", \"Question 1.12\", \"Question 1.13\", \"Question 1.14\", \"Question 1.15\"] },\r\n//     { name: \"Hạ\", questions: [\"Question 2.1\", \"Question 2.2\", \"Question 2.3\", \"Question 2.4\", \"Question 2.5\", \"Question 2.6\", \"Question 2.7\", \"Question 2.8\", \"Question 2.9\", \"Question 2.10\", \"Question 2.11\", \"Question 2.12\", \"Question 2.13\", \"Question 2.14\", \"Question 2.15\"] },\r\n//     { name: \"Thu\", questions: [\"Question 1.1\", \"Question 1.2\", \"Question 1.3\", \"Question 1.4\", \"Question 1.5\", \"Question 1.6\", \"Question 1.7\", \"Question 1.8\", \"Question 1.9\", \"Question 1.10\", \"Question 1.11\", \"Question 1.12\", \"Question 1.13\", \"Question 1.14\", \"Question 1.15\"] },\r\n//     { name: \"Đông\", questions: [\"Question 1.1\", \"Question 1.2\", \"Question 1.3\", \"Question 1.4\", \"Question 1.5\", \"Question 1.6\", \"Question 1.7\", \"Question 1.8\", \"Question 1.9\", \"Question 1.10\", \"Question 1.11\", \"Question 1.12\", \"Question 1.13\", \"Question 1.14\", \"Question 1.15\"] },\r\n// ];\r\n\r\ninterface QuestionComponentProps {\r\n    isHost?: boolean; // Determines if the user is a host or not\r\n}\r\n\r\n\r\n\r\nconst QuestionBoxRound3: React.FC<QuestionComponentProps> = ({ isHost = false }) => {\r\n    const [topics, setTopics] = useState<string[]>([]);\r\n    //const [selectedTopic, setSelectedTopic] = useState<string | null>(null);\r\n    const [hiddenTopics, setHiddenTopics] = useState<string[]>([]);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [currentQuestion, setCurrentQuestion] = useState<string>(\"\")\r\n    const [timeLeft, setTimeLeft] = useState(60);\r\n    const { selectedTopic, setSelectedTopic } = usePlayer()\r\n    const [searchParams] = useSearchParams()\r\n    const testName = searchParams.get(\"testName\") || \"\"\r\n    const roomId = searchParams.get(\"roomId\") || \"\"\r\n    const isFirstMounted = useRef(true)\r\n\r\n    useEffect(() => {\r\n        if (!isHost) return\r\n        const getTopic = async () => {\r\n            const topics = await getPacketNames(testName, roomId)\r\n            setTopics(topics)\r\n        }\r\n\r\n        getTopic()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (isHost) return\r\n        const unsubscribePlayers = listenToPackets(roomId, (packets) => {\r\n            setTopics(packets)\r\n            setSelectedTopic(packets)\r\n        });\r\n\r\n        return () => {\r\n            unsubscribePlayers();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isHost) return\r\n\r\n        const unsubscribePlayers = listenToQuestions(roomId, (data) => {\r\n            console.log(\"questions\", data);\r\n            if (!data.questions) return\r\n\r\n            if (!localStorage.getItem(\"questions\")) {\r\n                const questions = [...data.questions]\r\n                localStorage.setItem(\"questions\", JSON.stringify(questions))\r\n            } else {\r\n                const questions = [...JSON.parse(localStorage.getItem(\"questions\") || \"\"), ...data.questions]\r\n                localStorage.setItem(\"questions\", JSON.stringify(questions))\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            unsubscribePlayers();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        const unsubscribePlayers = listenToCurrentQuestionsNumber(roomId, (questionNumber) => {\r\n            console.log(\"questionNumber\", questionNumber);\r\n            if (localStorage.getItem(\"questions\")) {\r\n                const question = JSON.parse(localStorage.getItem(\"questions\") || \"\")[questionNumber - 1]\r\n                if (question) {\r\n                    setCurrentQuestion(question.question)\r\n\r\n                    if (questionNumber === 15) {{\r\n                        setCurrentPacketQuestion(roomId, 1)\r\n                    }}\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            unsubscribePlayers();\r\n        };\r\n    }, []);\r\n\r\n    const handleTopicSelect = (topic: string) => {\r\n        if (!isHost) return; // Non-host users cannot select topics\r\n        setSelectedTopic(topic);\r\n        setHiddenTopics((prev) => [...prev, topic]); // Add the selected topic to the hidden list\r\n        setCurrentQuestionIndex(0);\r\n        setTimeLeft(60); // Reset timer for the question\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (selectedTopic && timeLeft > 0) {\r\n            const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n            return () => clearTimeout(timer);\r\n        } else if (timeLeft === 0 && isHost) {\r\n            // Automatically navigate back for hosts\r\n            const resetTimer = setTimeout(() => {\r\n                setSelectedTopic(null);\r\n            }, 3000);\r\n            return () => clearTimeout(resetTimer);\r\n        }\r\n    }, [timeLeft, selectedTopic, isHost]);\r\n\r\n    const handleHostCommand = () => {\r\n        if (!isHost) return; // Non-host users cannot change questions\r\n        setCurrentQuestionIndex((prevIndex) =>\r\n            prevIndex < 14 ? prevIndex + 1 : prevIndex\r\n        );\r\n    };\r\n\r\n    //const currentQuestions = topics.find((topic) => topic.name === selectedTopic)?.questions;\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center\">\r\n            {!selectedTopic ? (\r\n                <div className=\"grid grid-cols-4 gap-4\">\r\n                    {topics\r\n                        .filter((topic) => !hiddenTopics.includes(topic)) // Hide already chosen topics\r\n                        .map((topic) => (\r\n                            <button\r\n                                key={topic}\r\n                                className={`bg-blue-500 text-white p-2 rounded-lg shadow-md hover:bg-blue-700 ${!isHost ? \"cursor-not-allowed opacity-50\" : \"\"\r\n                                    }`}\r\n                                onClick={() => handleTopicSelect(topic)}\r\n                                disabled={!isHost} // Disable for non-host users\r\n                            >\r\n                                {topic}\r\n                            </button>\r\n                        ))}\r\n                </div>\r\n            ) : (\r\n                <div className=\"w-full text-center\">\r\n                    <h2 className=\"text-xl font-bold\">{selectedTopic}</h2>\r\n                    <div className=\"my-4\">\r\n                        <p className=\"text-lg\">\r\n                            Time Left: <b>{timeLeft}s</b>\r\n                        </p>\r\n                        <p className=\"text-lg mt-2\">\r\n                            {currentQuestion ? currentQuestion : \"\"}\r\n                        </p>\r\n                    </div>\r\n                    {/* Simulated host control button for testing */}\r\n                    {isHost && (\r\n                        <button\r\n                            className=\"mt-4 bg-green-500 text-white p-2 rounded-lg\"\r\n                            onClick={handleHostCommand}\r\n                        >\r\n                            Show Next Question\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n// const Round3: React.FC<RoundBase> = ({ isHost }) => {\r\n//     return (\r\n//         <Play\r\n//             questionComponent={<QuestionComponent isHost={isHost}/>}\r\n//             isHost={isHost}\r\n//         />\r\n//     );\r\n// }\r\n\r\nexport default QuestionBoxRound3"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}