{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\layouts\\\\RoundBase\\\\Round3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getPacketNames } from '../../components/services';\nimport { useSearchParams } from 'react-router-dom';\nimport { deletePath, listenToSound, listenToPackets, listenToQuestions, listenToCurrentQuestionsNumber, listenToTimeStart, listenToAnswers } from '../../services/firebaseServices';\nimport { usePlayer } from '../../context/playerContext';\nimport { setCurrentPacketQuestion } from '../../components/services';\nimport { useTimeStart } from '../../context/timeListenerContext';\nimport { setSelectedPacketToPlayer } from '../services';\nimport { useHost } from '../../context/hostContext';\nimport { useSounds } from '../../context/soundContext';\n// const topics = [\n//     { name: \"Xuân\", questions: [\"Question 1.1\", \"Question 1.2\", \"Question 1.3\", \"Question 1.4\", \"Question 1.5\", \"Question 1.6\", \"Question 1.7\", \"Question 1.8\", \"Question 1.9\", \"Question 1.10\", \"Question 1.11\", \"Question 1.12\", \"Question 1.13\", \"Question 1.14\", \"Question 1.15\"] },\n//     { name: \"Hạ\", questions: [\"Question 2.1\", \"Question 2.2\", \"Question 2.3\", \"Question 2.4\", \"Question 2.5\", \"Question 2.6\", \"Question 2.7\", \"Question 2.8\", \"Question 2.9\", \"Question 2.10\", \"Question 2.11\", \"Question 2.12\", \"Question 2.13\", \"Question 2.14\", \"Question 2.15\"] },\n//     { name: \"Thu\", questions: [\"Question 1.1\", \"Question 1.2\", \"Question 1.3\", \"Question 1.4\", \"Question 1.5\", \"Question 1.6\", \"Question 1.7\", \"Question 1.8\", \"Question 1.9\", \"Question 1.10\", \"Question 1.11\", \"Question 1.12\", \"Question 1.13\", \"Question 1.14\", \"Question 1.15\"] },\n//     { name: \"Đông\", questions: [\"Question 1.1\", \"Question 1.2\", \"Question 1.3\", \"Question 1.4\", \"Question 1.5\", \"Question 1.6\", \"Question 1.7\", \"Question 1.8\", \"Question 1.9\", \"Question 1.10\", \"Question 1.11\", \"Question 1.12\", \"Question 1.13\", \"Question 1.14\", \"Question 1.15\"] },\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionBoxRound3 = ({\n  isHost = false\n}) => {\n  _s();\n  const sounds = useSounds();\n  const [topics, setTopics] = useState([]);\n  const [correctAnswer, setCorrectAnswer] = useState(\"\");\n  //const [selectedTopic, setSelectedTopic] = useState<string | null>(null);\n  const [hiddenTopics, setHiddenTopics] = useState([]);\n  // const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const {\n    selectedTopic,\n    setSelectedTopic,\n    currentQuestion,\n    setCurrentQuestion,\n    animationKey,\n    setAnimationKey\n  } = usePlayer();\n  const {\n    currentQuestionIndex,\n    setCurrentQuestionIndex\n  } = useHost();\n  const [searchParams] = useSearchParams();\n  const testName = searchParams.get(\"testName\") || \"\";\n  const roomId = searchParams.get(\"roomId\") || \"\";\n  const isFirstMounted = useRef(true);\n  const {\n    timeLeft,\n    startTimer\n  } = useTimeStart();\n  const salt = \"HTMNBK2025\";\n  function decodeQuestion(encoded) {\n    // Decode base64 to bytes\n    const binaryString = atob(encoded);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    // Convert bytes to UTF-8 string\n    const decoded = new TextDecoder(\"utf-8\").decode(bytes);\n\n    // Check for tampering\n    if (!decoded.startsWith(salt)) throw new Error(\"Tampered data!\");\n    return decoded.slice(salt.length);\n  }\n  useEffect(() => {\n    const unsubscribePlayers = listenToSound(roomId, async type => {\n      const audio = sounds[`${type}`];\n      if (audio) {\n        audio.play();\n      }\n      console.log(\"sound type\", type);\n      await deletePath(roomId, \"sound\");\n    });\n\n    // No need to set state here; it's handled by useState initializer\n    return () => {\n      unsubscribePlayers();\n    };\n  }, []);\n  useEffect(() => {\n    const unsubscribePlayers = listenToAnswers(roomId, answer => {\n      setCorrectAnswer(`Đáp án: ${answer}`);\n      const timeOut = setTimeout(() => {\n        setCorrectAnswer(\"\");\n      }, 1000);\n      console.log(\"answer\", answer);\n    });\n\n    // No need to set state here; it's handled by useState initializer\n    return () => {\n      unsubscribePlayers();\n    };\n  }, []);\n  const isInitialMount = useRef(false);\n  useEffect(() => {\n    const unsubscribe = listenToTimeStart(roomId, async () => {\n      // Skip the timer setting on the first mount, but allow future calls to run\n      if (isInitialMount.current) {\n        isInitialMount.current = false;\n        return;\n      }\n      startTimer(10);\n      return () => {\n        unsubscribe();\n      };\n    });\n  }, []);\n\n  // useEffect(() => {\n  //     if (!selectedTopic) return;\n\n  //     // Start timer when selectedTopic changes\n  //     startTimer(60);\n\n  //     return () => {\n\n  //     }\n\n  //     // Side effects based on timer reaching 0\n  // }, []);\n\n  useEffect(() => {\n    console.log(\"timeLeft\", timeLeft);\n    if (timeLeft === 0) {\n      setAnimationKey(prev => prev + 1); // Trigger animation or any other side effect\n      // When timer runs out, do your clean up / game logic:\n      if (isHost) {\n        deletePath(roomId, \"currentQuestions\");\n        deletePath(roomId, \"answers\");\n        setCurrentQuestionIndex(1);\n      }\n      setCurrentQuestion(\"\");\n      setCorrectAnswer(\"\");\n      setSelectedTopic(null);\n      localStorage.removeItem(\"questions\");\n\n      // If you want to reset timer, call startTimer again here or leave stopped\n    }\n  }, [timeLeft]);\n  useEffect(() => {\n    if (!isHost) return;\n    const getTopic = async () => {\n      const topics = await getPacketNames(testName, roomId);\n      setTopics(topics);\n    };\n    getTopic();\n  }, []);\n  useEffect(() => {\n    const unsubscribePlayers = listenToPackets(roomId, packets => {\n      console.log(\"packets\", packets);\n      setTopics(packets);\n      // setSelectedTopic(packets)\n    });\n    return () => {\n      unsubscribePlayers();\n    };\n  }, []);\n  useEffect(() => {\n    const unsubscribePlayers = listenToQuestions(roomId, questions => {\n      console.log(\"questions\", questions);\n      if (!isHost && questions.length > 0) {\n        setSelectedTopic(questions[0].packetName);\n        localStorage.setItem(\"questions\", JSON.stringify(questions));\n      }\n    });\n    return () => {\n      unsubscribePlayers();\n    };\n  }, []);\n  useEffect(() => {\n    const unsubscribePlayers = listenToCurrentQuestionsNumber(roomId, questionNumber => {\n      console.log(\"questionNumber outside\", questionNumber);\n      if (localStorage.getItem(\"questions\")) {\n        const question = JSON.parse(localStorage.getItem(\"questions\") || \"\")[questionNumber - 1];\n        if (question) {\n          console.log(\"decodeQuestion(question.question)\", decodeQuestion(question.question));\n          const timeOut = setTimeout(() => {\n            setCurrentQuestion(decodeQuestion(question.question));\n          }, 1000);\n          if (questionNumber === 12) {\n            {\n              console.log(\"questionNumber inside\", questionNumber);\n              setCurrentPacketQuestion(roomId, 1);\n              setCurrentQuestion(\"\");\n              setSelectedTopic(null);\n              setCorrectAnswer(\"\");\n              localStorage.removeItem(\"questions\");\n            }\n          }\n        }\n      }\n    });\n    return () => {\n      unsubscribePlayers();\n    };\n  }, []);\n  const handleTopicSelect = async topic => {\n    console.log(\"topic\", topic);\n    if (isHost) {\n      const questions = await setSelectedPacketToPlayer(roomId, topic, testName);\n      localStorage.setItem(\"questions\", JSON.stringify(questions));\n    }\n    if (!isHost) return; // Non-host users cannot select topics\n    setSelectedTopic(topic);\n    setHiddenTopics(prev => [...prev, topic]); // Add the selected topic to the hidden list\n  };\n\n  // useEffect(() => {\n  //     if (selectedTopic && timeLeft > 0) {\n  //         const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n  //         return () => clearTimeout(timer);\n  //     } else if (timeLeft === 0 && isHost) {\n  //         // Automatically navigate back for hosts\n  //         const resetTimer = setTimeout(() => {\n  //             setSelectedTopic(null);\n  //         }, 3000);\n  //         return () => clearTimeout(resetTimer);\n  //     }\n  // }, [timeLeft, selectedTopic, isHost]);\n\n  //const currentQuestions = topics.find((topic) => topic.name === selectedTopic)?.questions;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: !selectedTopic ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-6 w-full max-w-xl\",\n      children: Array.isArray(topics) && topics.length > 0 ? topics.filter(topic => !hiddenTopics.includes(topic)).slice(0, 8) // Only show up to 8 packages\n      .map(topic => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `bg-blue-500 text-white text-xl font-bold p-8 rounded-2xl shadow-lg hover:bg-blue-700 transition-all duration-200 ${!isHost ? \"cursor-not-allowed opacity-50\" : \"\"}`,\n        onClick: () => handleTopicSelect(topic),\n        disabled: !isHost,\n        style: {\n          minHeight: \"100px\"\n        },\n        children: topic\n      }, topic, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 33\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold\",\n        children: selectedTopic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mt-2\",\n          children: currentQuestion ? currentQuestion : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mt-2\",\n          children: correctAnswer ? correctAnswer : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 9\n  }, this);\n};\n\n// const Round3: React.FC<RoundBase> = ({ isHost }) => {\n//     return (\n//         <Play\n//             questionComponent={<QuestionComponent isHost={isHost}/>}\n//             isHost={isHost}\n//         />\n//     );\n// }\n_s(QuestionBoxRound3, \"gCCZ8jtvdp10Wkmg2DMJpV7vfpY=\", false, function () {\n  return [useSounds, usePlayer, useHost, useSearchParams, useTimeStart];\n});\n_c = QuestionBoxRound3;\nexport default QuestionBoxRound3;\nvar _c;\n$RefreshReg$(_c, \"QuestionBoxRound3\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getPacketNames","useSearchParams","deletePath","listenToSound","listenToPackets","listenToQuestions","listenToCurrentQuestionsNumber","listenToTimeStart","listenToAnswers","usePlayer","setCurrentPacketQuestion","useTimeStart","setSelectedPacketToPlayer","useHost","useSounds","jsxDEV","_jsxDEV","QuestionBoxRound3","isHost","_s","sounds","topics","setTopics","correctAnswer","setCorrectAnswer","hiddenTopics","setHiddenTopics","selectedTopic","setSelectedTopic","currentQuestion","setCurrentQuestion","animationKey","setAnimationKey","currentQuestionIndex","setCurrentQuestionIndex","searchParams","testName","get","roomId","isFirstMounted","timeLeft","startTimer","salt","decodeQuestion","encoded","binaryString","atob","bytes","Uint8Array","length","i","charCodeAt","decoded","TextDecoder","decode","startsWith","Error","slice","unsubscribePlayers","type","audio","play","console","log","answer","timeOut","setTimeout","isInitialMount","unsubscribe","current","prev","localStorage","removeItem","getTopic","packets","questions","packetName","setItem","JSON","stringify","questionNumber","getItem","question","parse","handleTopicSelect","topic","className","children","Array","isArray","filter","includes","map","onClick","disabled","style","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/layouts/RoundBase/Round3.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Play from '../Play';\r\nimport { RoundBase } from '../../type';\r\nimport { getPacketNames } from '../../components/services';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { deletePath, listenToSound, listenToPackets, listenToQuestions, listenToCurrentQuestionsNumber, listenToTimeStart, listenToAnswers } from '../../services/firebaseServices';\r\nimport { usePlayer } from '../../context/playerContext';\r\nimport { setCurrentPacketQuestion } from '../../components/services';\r\nimport { useTimeStart } from '../../context/timeListenerContext';\r\nimport { setSelectedPacketToPlayer } from '../services';\r\nimport { sendCorrectAnswer } from '../../components/services';\r\nimport { useHost } from '../../context/hostContext';\r\n\r\nimport { useSounds } from '../../context/soundContext';\r\n// const topics = [\r\n//     { name: \"Xuân\", questions: [\"Question 1.1\", \"Question 1.2\", \"Question 1.3\", \"Question 1.4\", \"Question 1.5\", \"Question 1.6\", \"Question 1.7\", \"Question 1.8\", \"Question 1.9\", \"Question 1.10\", \"Question 1.11\", \"Question 1.12\", \"Question 1.13\", \"Question 1.14\", \"Question 1.15\"] },\r\n//     { name: \"Hạ\", questions: [\"Question 2.1\", \"Question 2.2\", \"Question 2.3\", \"Question 2.4\", \"Question 2.5\", \"Question 2.6\", \"Question 2.7\", \"Question 2.8\", \"Question 2.9\", \"Question 2.10\", \"Question 2.11\", \"Question 2.12\", \"Question 2.13\", \"Question 2.14\", \"Question 2.15\"] },\r\n//     { name: \"Thu\", questions: [\"Question 1.1\", \"Question 1.2\", \"Question 1.3\", \"Question 1.4\", \"Question 1.5\", \"Question 1.6\", \"Question 1.7\", \"Question 1.8\", \"Question 1.9\", \"Question 1.10\", \"Question 1.11\", \"Question 1.12\", \"Question 1.13\", \"Question 1.14\", \"Question 1.15\"] },\r\n//     { name: \"Đông\", questions: [\"Question 1.1\", \"Question 1.2\", \"Question 1.3\", \"Question 1.4\", \"Question 1.5\", \"Question 1.6\", \"Question 1.7\", \"Question 1.8\", \"Question 1.9\", \"Question 1.10\", \"Question 1.11\", \"Question 1.12\", \"Question 1.13\", \"Question 1.14\", \"Question 1.15\"] },\r\n// ];\r\n\r\ninterface QuestionComponentProps {\r\n    isHost?: boolean;// Determines if the user is a spectator or not\r\n}\r\n\r\n\r\n\r\nconst QuestionBoxRound3: React.FC<QuestionComponentProps> = ({ isHost = false }) => {\r\n    const sounds = useSounds();\r\n    const [topics, setTopics] = useState<string[]>([]);\r\n    const [correctAnswer, setCorrectAnswer] = useState<string>(\"\")\r\n    //const [selectedTopic, setSelectedTopic] = useState<string | null>(null);\r\n    const [hiddenTopics, setHiddenTopics] = useState<string[]>([]);\r\n    // const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const { selectedTopic, setSelectedTopic, currentQuestion, setCurrentQuestion, animationKey, setAnimationKey } = usePlayer()\r\n    const { currentQuestionIndex, setCurrentQuestionIndex } = useHost()\r\n    const [searchParams] = useSearchParams()\r\n    const testName = searchParams.get(\"testName\") || \"\"\r\n    const roomId = searchParams.get(\"roomId\") || \"\"\r\n    const isFirstMounted = useRef(true)\r\n    const { timeLeft, startTimer } = useTimeStart();\r\n    const salt = \"HTMNBK2025\";\r\n    function decodeQuestion(encoded: string): string {\r\n        // Decode base64 to bytes\r\n        const binaryString = atob(encoded);\r\n        const bytes = new Uint8Array(binaryString.length);\r\n        for (let i = 0; i < binaryString.length; i++) {\r\n            bytes[i] = binaryString.charCodeAt(i);\r\n        }\r\n\r\n        // Convert bytes to UTF-8 string\r\n        const decoded = new TextDecoder(\"utf-8\").decode(bytes);\r\n\r\n        // Check for tampering\r\n        if (!decoded.startsWith(salt)) throw new Error(\"Tampered data!\");\r\n\r\n        return decoded.slice(salt.length);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribePlayers = listenToSound(roomId, async (type) => {\r\n\r\n            const audio = sounds[`${type}`];\r\n            if (audio) {\r\n                audio.play();\r\n            }\r\n            console.log(\"sound type\", type)\r\n            await deletePath(roomId, \"sound\")\r\n        });\r\n\r\n        // No need to set state here; it's handled by useState initializer\r\n        return () => {\r\n            unsubscribePlayers();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        const unsubscribePlayers = listenToAnswers(roomId, (answer) => {\r\n            setCorrectAnswer(`Đáp án: ${answer}`)\r\n            const timeOut = setTimeout(() => {\r\n                setCorrectAnswer(\"\")\r\n            }, 1000)\r\n            console.log(\"answer\", answer)\r\n        });\r\n\r\n        // No need to set state here; it's handled by useState initializer\r\n        return () => {\r\n            unsubscribePlayers();\r\n\r\n        };\r\n    }, []);\r\n\r\n    const isInitialMount = useRef(false)\r\n        useEffect(() => {\r\n            const unsubscribe = listenToTimeStart(roomId, async () => {\r\n    \r\n    \r\n                // Skip the timer setting on the first mount, but allow future calls to run\r\n                if (isInitialMount.current) {\r\n                  isInitialMount.current = false;\r\n                  return;\r\n                }\r\n                startTimer(10)\r\n                return () => {\r\n                    unsubscribe();\r\n    \r\n                };\r\n            })\r\n    \r\n        }, [])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     if (!selectedTopic) return;\r\n\r\n    //     // Start timer when selectedTopic changes\r\n    //     startTimer(60);\r\n\r\n    //     return () => {\r\n\r\n\r\n    //     }\r\n\r\n    //     // Side effects based on timer reaching 0\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"timeLeft\", timeLeft);\r\n\r\n        if (timeLeft === 0) {\r\n            setAnimationKey((prev: number) => prev + 1); // Trigger animation or any other side effect\r\n            // When timer runs out, do your clean up / game logic:\r\n            if (isHost) {\r\n                deletePath(roomId, \"currentQuestions\")\r\n                deletePath(roomId, \"answers\")\r\n                setCurrentQuestionIndex(1)\r\n            }\r\n            setCurrentQuestion(\"\");\r\n            setCorrectAnswer(\"\")\r\n            setSelectedTopic(null);\r\n            localStorage.removeItem(\"questions\");\r\n\r\n            // If you want to reset timer, call startTimer again here or leave stopped\r\n        }\r\n    }, [timeLeft]);\r\n\r\n    useEffect(() => {\r\n        if (!isHost) return\r\n        const getTopic = async () => {\r\n            const topics = await getPacketNames(testName, roomId)\r\n            setTopics(topics)\r\n        }\r\n\r\n        getTopic()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const unsubscribePlayers = listenToPackets(roomId, (packets) => {\r\n            console.log(\"packets\", packets);\r\n\r\n            setTopics(packets)\r\n            // setSelectedTopic(packets)\r\n        });\r\n\r\n        return () => {\r\n            unsubscribePlayers();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        const unsubscribePlayers = listenToQuestions(roomId, (questions) => {\r\n            console.log(\"questions\", questions);\r\n\r\n            if (!isHost && questions.length > 0) {\r\n                setSelectedTopic(questions[0].packetName)\r\n                localStorage.setItem(\"questions\", JSON.stringify(questions))\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            unsubscribePlayers();\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        const unsubscribePlayers = listenToCurrentQuestionsNumber(roomId, (questionNumber) => {\r\n            console.log(\"questionNumber outside\", questionNumber);\r\n            if (localStorage.getItem(\"questions\")) {\r\n                const question = JSON.parse(localStorage.getItem(\"questions\") || \"\")[questionNumber - 1]\r\n                if (question) {\r\n                    console.log(\"decodeQuestion(question.question)\", decodeQuestion(question.question));\r\n\r\n                    const timeOut = setTimeout(() => {\r\n                        setCurrentQuestion(decodeQuestion(question.question))\r\n                    }, 1000)\r\n\r\n\r\n\r\n                    if (questionNumber === 12) {\r\n                        {\r\n                            console.log(\"questionNumber inside\", questionNumber);\r\n                            setCurrentPacketQuestion(roomId, 1)\r\n                            setCurrentQuestion(\"\")\r\n                            setSelectedTopic(null)\r\n                            setCorrectAnswer(\"\")\r\n                            localStorage.removeItem(\"questions\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            unsubscribePlayers();\r\n        };\r\n    }, []);\r\n\r\n    const handleTopicSelect = async (topic: string) => {\r\n        console.log(\"topic\", topic);\r\n        if (isHost) {\r\n            const questions = await setSelectedPacketToPlayer(roomId, topic, testName)\r\n            localStorage.setItem(\"questions\", JSON.stringify(questions))\r\n        }\r\n        if (!isHost) return; // Non-host users cannot select topics\r\n        setSelectedTopic(topic);\r\n        setHiddenTopics((prev) => [...prev, topic]); // Add the selected topic to the hidden list\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     if (selectedTopic && timeLeft > 0) {\r\n    //         const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n    //         return () => clearTimeout(timer);\r\n    //     } else if (timeLeft === 0 && isHost) {\r\n    //         // Automatically navigate back for hosts\r\n    //         const resetTimer = setTimeout(() => {\r\n    //             setSelectedTopic(null);\r\n    //         }, 3000);\r\n    //         return () => clearTimeout(resetTimer);\r\n    //     }\r\n    // }, [timeLeft, selectedTopic, isHost]);\r\n\r\n\r\n    //const currentQuestions = topics.find((topic) => topic.name === selectedTopic)?.questions;\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center\">\r\n            {!selectedTopic ? (\r\n                <div className=\"grid grid-cols-2 gap-6 w-full max-w-xl\">\r\n                    {Array.isArray(topics) && topics.length > 0 ? (\r\n                        topics\r\n                            .filter((topic) => !hiddenTopics.includes(topic))\r\n                            .slice(0, 8) // Only show up to 8 packages\r\n                            .map((topic) => (\r\n                                <button\r\n                                    key={topic}\r\n                                    className={`bg-blue-500 text-white text-xl font-bold p-8 rounded-2xl shadow-lg hover:bg-blue-700 transition-all duration-200 ${!isHost ? \"cursor-not-allowed opacity-50\" : \"\"\r\n                                        }`}\r\n                                    onClick={() => handleTopicSelect(topic)}\r\n                                    disabled={!isHost}\r\n                                    style={{ minHeight: \"100px\" }}\r\n                                >\r\n                                    {topic}\r\n                                </button>\r\n                            ))\r\n                    ) : null}\r\n                </div>\r\n            ) : (\r\n                <div className=\"w-full text-center\">\r\n                    <h2 className=\"text-xl font-bold\">{selectedTopic}</h2>\r\n                    <div className=\"my-4\">\r\n                        <p className=\"text-lg mt-2\">\r\n                            {currentQuestion ? currentQuestion : \"\"}\r\n                        </p>\r\n                        <p className=\"text-lg mt-2\">\r\n                            {correctAnswer ? correctAnswer : \"\"}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n// const Round3: React.FC<RoundBase> = ({ isHost }) => {\r\n//     return (\r\n//         <Play\r\n//             questionComponent={<QuestionComponent isHost={isHost}/>}\r\n//             isHost={isHost}\r\n//         />\r\n//     );\r\n// }\r\n\r\nexport default QuestionBoxRound3"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}