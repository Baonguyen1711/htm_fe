{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\pages\\\\User\\\\UserRound1.tsx\",\n  _s = $RefreshSig$();\nimport Round1 from '../../layouts/RoundBase/Round1';\nimport User from '../../layouts/User/User';\nimport { listenToRoundStart } from '../../services/firebaseServices';\nimport { useEffect, useRef, useState } from 'react';\nimport { usePlayer } from '../../context/playerContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserRound1() {\n  _s();\n  const {\n    setInitialGrid\n  } = usePlayer();\n  const isFirstCallback = useRef(true);\n  const [isAllowed, setIsAllowed] = useState(null);\n  useEffect(() => {\n    if (isHost) return;\n    const unsubscribePlayers = listenToRoundStart(roomId, data => {\n      const currentRound = data.round;\n      const requestedRound = parseInt(round || \"\", 10);\n      console.log(\"currentRound\", currentRound);\n      console.log(\"requestedRound\", requestedRound);\n      if (requestedRound === currentRound) {\n        setIsAllowed(true);\n      } else {\n        setIsAllowed(false);\n        if (currentRound) {\n          navigate(`/play?round=${data.round}&roomId=${roomId}`, {\n            replace: true\n          });\n        }\n      }\n      if (isFirstCallback.current) {\n        isFirstCallback.current = false;\n        return;\n      }\n      console.log(\"round\", data);\n      setInitialGrid(data.grid);\n      navigate(`/play?round=${data.round}&roomId=${roomId}`);\n    });\n    return () => {\n      unsubscribePlayers();\n    };\n  }, [roomId]);\n  return /*#__PURE__*/_jsxDEV(User, {\n    QuestionComponent: /*#__PURE__*/_jsxDEV(Round1, {\n      isHost: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(UserRound1, \"4GRMNNjlK8NN0DmHYZv47ghTpzA=\", false, function () {\n  return [usePlayer];\n});\n_c = UserRound1;\nexport default UserRound1;\nvar _c;\n$RefreshReg$(_c, \"UserRound1\");","map":{"version":3,"names":["Round1","User","listenToRoundStart","useEffect","useRef","useState","usePlayer","jsxDEV","_jsxDEV","UserRound1","_s","setInitialGrid","isFirstCallback","isAllowed","setIsAllowed","isHost","unsubscribePlayers","roomId","data","currentRound","round","requestedRound","parseInt","console","log","navigate","replace","current","grid","QuestionComponent","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/pages/User/UserRound1.tsx"],"sourcesContent":["import Round1 from '../../layouts/RoundBase/Round1';\r\nimport User from '../../layouts/User/User';\r\nimport { listenToRoundStart } from '../../services/firebaseServices';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { usePlayer } from '../../context/playerContext';\r\n\r\nfunction UserRound1() {\r\n    \r\n    const { setInitialGrid } = usePlayer()\r\n    \r\n        const isFirstCallback = useRef(true);\r\n        const [isAllowed, setIsAllowed] = useState<boolean | null>(null);\r\n    \r\n        useEffect(() => {\r\n            if (isHost) return;\r\n            const unsubscribePlayers = listenToRoundStart(roomId, (data) => {\r\n    \r\n    \r\n                const currentRound = data.round;\r\n                const requestedRound = parseInt(round || \"\", 10);\r\n    \r\n                console.log(\"currentRound\", currentRound);\r\n                console.log(\"requestedRound\", requestedRound);\r\n    \r\n    \r\n                if (requestedRound === currentRound) {\r\n                    setIsAllowed(true);\r\n                } else {\r\n                    setIsAllowed(false);\r\n                    if (currentRound) {\r\n                        navigate(`/play?round=${data.round}&roomId=${roomId}`, { replace: true });\r\n                    }\r\n                }\r\n    \r\n    \r\n                if (isFirstCallback.current) {\r\n                    isFirstCallback.current = false;\r\n                    return;\r\n                }\r\n    \r\n    \r\n                console.log(\"round\", data)\r\n                setInitialGrid(data.grid)\r\n                navigate(`/play?round=${data.round}&roomId=${roomId}`);\r\n            });\r\n    \r\n            return () => {\r\n                unsubscribePlayers();\r\n            };\r\n        }, [roomId]);\r\n    return (\r\n        <User\r\n            QuestionComponent={<Round1 isHost={false} />}\r\n        />\r\n    );\r\n}\r\n\r\nexport default UserRound1;\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,gCAAgC;AACnD,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,SAASC,kBAAkB,QAAQ,iCAAiC;AACpE,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,SAASC,SAAS,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAM;IAAEC;EAAe,CAAC,GAAGL,SAAS,CAAC,CAAC;EAElC,MAAMM,eAAe,GAAGR,MAAM,CAAC,IAAI,CAAC;EACpC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAiB,IAAI,CAAC;EAEhEF,SAAS,CAAC,MAAM;IACZ,IAAIY,MAAM,EAAE;IACZ,MAAMC,kBAAkB,GAAGd,kBAAkB,CAACe,MAAM,EAAGC,IAAI,IAAK;MAG5D,MAAMC,YAAY,GAAGD,IAAI,CAACE,KAAK;MAC/B,MAAMC,cAAc,GAAGC,QAAQ,CAACF,KAAK,IAAI,EAAE,EAAE,EAAE,CAAC;MAEhDG,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEL,YAAY,CAAC;MACzCI,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,cAAc,CAAC;MAG7C,IAAIA,cAAc,KAAKF,YAAY,EAAE;QACjCL,YAAY,CAAC,IAAI,CAAC;MACtB,CAAC,MAAM;QACHA,YAAY,CAAC,KAAK,CAAC;QACnB,IAAIK,YAAY,EAAE;UACdM,QAAQ,CAAC,eAAeP,IAAI,CAACE,KAAK,WAAWH,MAAM,EAAE,EAAE;YAAES,OAAO,EAAE;UAAK,CAAC,CAAC;QAC7E;MACJ;MAGA,IAAId,eAAe,CAACe,OAAO,EAAE;QACzBf,eAAe,CAACe,OAAO,GAAG,KAAK;QAC/B;MACJ;MAGAJ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEN,IAAI,CAAC;MAC1BP,cAAc,CAACO,IAAI,CAACU,IAAI,CAAC;MACzBH,QAAQ,CAAC,eAAeP,IAAI,CAACE,KAAK,WAAWH,MAAM,EAAE,CAAC;IAC1D,CAAC,CAAC;IAEF,OAAO,MAAM;MACTD,kBAAkB,CAAC,CAAC;IACxB,CAAC;EACL,CAAC,EAAE,CAACC,MAAM,CAAC,CAAC;EAChB,oBACIT,OAAA,CAACP,IAAI;IACD4B,iBAAiB,eAAErB,OAAA,CAACR,MAAM;MAACe,MAAM,EAAE;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAACvB,EAAA,CAjDQD,UAAU;EAAA,QAEYH,SAAS;AAAA;AAAA4B,EAAA,GAF/BzB,UAAU;AAmDnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}