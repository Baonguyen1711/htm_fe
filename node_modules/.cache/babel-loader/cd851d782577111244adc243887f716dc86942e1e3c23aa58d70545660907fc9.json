{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\layouts\\\\RoundBase\\\\Round2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { renderGrid } from \"./utils\";\nimport { usePlayer } from \"../../context/playerContext\";\nimport { listenToSelectRow } from \"../../services/firebaseServices\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mainKeyword = \"BÒCÔNGANH\";\nconst QuestionBoxRound2 = ({\n  obstacleWord = mainKeyword,\n  hintWordArray,\n  initialGrid,\n  isHost = false\n}) => {\n  _s();\n  console.log(\"hintWordArray\", typeof hintWordArray);\n  console.log(\"obstacle\", obstacleWord);\n  const [searchParams] = useSearchParams();\n  const {\n    setInitialGrid\n  } = usePlayer();\n  const roomId = searchParams.get(\"roomId\") || \"\";\n  const GRID_SIZE = 20;\n  const generateEmptyGrid = () => {\n    return Array(GRID_SIZE).fill(null).map(() => Array(GRID_SIZE).fill(\"\"));\n  };\n  const [grid, setGrid] = useState(generateEmptyGrid());\n  const [hintWords, setHintWords] = useState([]);\n  const [cellStyles, setCellStyles] = useState({}); // Tracks background and text styles\n  const [menu, setMenu] = useState({\n    visible: false\n  });\n  const [hintWordsLength, setHintWordsLength] = useState([]);\n  const menuRef = useRef(null);\n  useEffect(() => {\n    if (hintWordArray) {\n      hintWordArray.forEach((word, index) => {\n        console.log(`Word ${index}: '${word}' has length: ${word.length}`);\n        console.log([...word]);\n      });\n      const lengthArray = hintWordArray.map(word => word.length);\n      setHintWordsLength(lengthArray);\n    }\n  }, [hintWordArray]);\n  useEffect(() => {\n    const unsubscribePlayers = listenToSelectRow(roomId, rowNumber => {});\n\n    // No need to set state here; it's handled by useState initializer\n    return () => {\n      unsubscribePlayers();\n    };\n  }, []);\n  // Initialize grid\n  useEffect(() => {\n    if (isHost) {\n      const wordList = [\"GIÓ\", \"HẠTGIỐNG\", \"DREAM\", \"THUỐC\", \"CÚC\", \"CHÂUKIỆTLUÂN\"];\n      console.log(\"wordList\", wordList);\n      console.log(\"hintWordArray\", hintWordArray);\n      if (hintWordArray && obstacleWord) {\n        const {\n          randomHintWords,\n          newGrid\n        } = renderGrid(hintWordArray, obstacleWord, GRID_SIZE);\n        console.log(\"randomHintWords\", randomHintWords);\n        console.log(\"newGrid\", newGrid);\n        setHintWords(randomHintWords);\n        setInitialGrid(newGrid);\n        setGrid(newGrid);\n      }\n    } else {\n      if (initialGrid) {\n        setGrid(initialGrid);\n      }\n    }\n  }, [isHost, hintWordArray, obstacleWord, initialGrid, setInitialGrid]);\n\n  // Reveal cells in a row or column\n\n  // Handle number click to show menu\n  const handleNumberClick = (rowIndex, colIndex) => {\n    if (!isHost) return;\n    setMenu({\n      visible: true,\n      rowIndex,\n      colIndex\n    });\n  };\n\n  // Handle menu actions\n  const handleMenuAction = (action, rowIndex, colIndex, hintWordNumber) => {\n    revealCells(rowIndex, colIndex, action, hintWordNumber);\n    setMenu({\n      visible: false\n    });\n  };\n\n  // Handle cell click to reveal\n  const handleCellClick = (rowIndex, colIndex) => {\n    if (!isHost) return;\n    revealCells(rowIndex, colIndex, \"open\");\n  };\n\n  // Close menu on outside click\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenu({\n          visible: false\n        });\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center bg-white rounded-lg shadow-md p-6 relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-700 text-xl font-semibold text-center mb-4 max-w-[90%]\",\n      children: \"Trong c\\xE1c gi\\u1EA3i \\u0111\\u1EA5u th\\u1EC3 thao, nh\\u1EEFng \\u0111\\u1ED9i hay v\\u1EADn \\u0111\\u1ED9ng vi\\xEAn m\\u1EA1nh s\\u1EBD \\u0111\\u01B0\\u1EE3c x\\u1EBFp v\\xE0o c\\xF9ng m\\u1ED9t ho\\u1EB7c nhi\\u1EC1u nh\\xF3m trong khi b\\u1ED1c th\\u0103m \\u0111\\u1EC3 tr\\xE1nh vi\\u1EC7c g\\u1EB7p nhau s\\u1EDBm. T\\xEAn g\\u1ECDi chung c\\u1EE7a c\\xE1c nh\\xF3m v\\u1EADn \\u0111\\u1ED9ng vi\\xEAn n\\xE0y l\\xE0 g\\xEC?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-[repeat(20,40px)] grid-rows-[repeat(20,40px)] gap-1 max-h-[400px] overflow-y-scroll\",\n      children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: row.map((cell, colIndex) => {\n          const cellKey = `${rowIndex}-${colIndex}`;\n          const cellStyle = cellStyles[cellKey] || {\n            background: cell === \"\" ? \"bg-white\" : \"bg-gray-50\",\n            textColor: cell.includes(\"number\") ? \"text-blue-500\" : \"text-transparent\"\n          };\n          const showMenu = menu.visible && menu.rowIndex === rowIndex && menu.colIndex === colIndex && cell.includes(\"number\");\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-10 h-10 flex items-center justify-center text-lg font-semibold select-none\n                      ${cell.includes(\"number\") ? \"text-blue-500 border-none\" : \"\"}\n                      ${cell.includes(\"number\") ? \"\" : cellStyle.background}\n                      ${cell.includes(\"number\") ? \"text-blue-500\" : cellStyle.textColor}\n                      ${obstacleWord !== null && obstacleWord !== void 0 && obstacleWord.includes(cell) && cellStyle.textColor === \"text-black\" && !cell.includes(\"number\") && isNaN(Number(cell)) ? \"font-bold text-red-500\" : \"\"}\n                    `,\n              onClick: () => {\n                if (isHost) {\n                  if (cell.includes(\"number\")) {\n                    handleNumberClick(rowIndex, colIndex);\n                  } else {\n                    handleCellClick(rowIndex, colIndex);\n                  }\n                }\n              },\n              style: {\n                cursor: isHost && (cell.includes(\"number\") || hintWords.some(word => word.y === rowIndex || word.x === colIndex)) ? \"pointer\" : \"default\"\n              },\n              children: cell.includes(\"number\") ? cell.replace(\"number\", \"\").trim() : cell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: menuRef,\n              className: \"absolute left-12 top-1/2 transform -translate-y-1/2 flex space-x-2 bg-white border border-gray-300 rounded shadow-lg p-1 z-10\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"px-2 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600\",\n                onClick: () => handleMenuAction(\"open\", rowIndex, colIndex, cell.replace(\"number\", \"\")),\n                children: \"SELECT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"px-2 py-1 text-sm bg-green-500 text-white rounded hover:bg-green-600\",\n                onClick: () => handleMenuAction(\"correct\", rowIndex, colIndex, cell.replace(\"number\", \"\")),\n                children: \"Correct\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"px-2 py-1 text-sm bg-red-500 text-white rounded hover:bg-red-600\",\n                onClick: () => handleMenuAction(\"incorrect\", rowIndex, colIndex, cell.replace(\"number\", \"\")),\n                children: \"Incorrect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this)]\n          }, colIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this);\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionBoxRound2, \"aHlPZzA4prry9ulQN7/64E2LZp8=\", false, function () {\n  return [useSearchParams, usePlayer];\n});\n_c = QuestionBoxRound2;\nexport default QuestionBoxRound2;\nvar _c;\n$RefreshReg$(_c, \"QuestionBoxRound2\");","map":{"version":3,"names":["React","useState","useEffect","useRef","renderGrid","usePlayer","listenToSelectRow","useSearchParams","jsxDEV","_jsxDEV","mainKeyword","QuestionBoxRound2","obstacleWord","hintWordArray","initialGrid","isHost","_s","console","log","searchParams","setInitialGrid","roomId","get","GRID_SIZE","generateEmptyGrid","Array","fill","map","grid","setGrid","hintWords","setHintWords","cellStyles","setCellStyles","menu","setMenu","visible","hintWordsLength","setHintWordsLength","menuRef","forEach","word","index","length","lengthArray","unsubscribePlayers","rowNumber","wordList","randomHintWords","newGrid","handleNumberClick","rowIndex","colIndex","handleMenuAction","action","hintWordNumber","revealCells","handleCellClick","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","row","Fragment","cell","cellKey","cellStyle","background","textColor","includes","showMenu","isNaN","Number","onClick","style","cursor","some","y","x","replace","trim","ref","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/layouts/RoundBase/Round2.tsx"],"sourcesContent":["import Play from \"../Play\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { renderGrid } from \"./utils\";\r\nimport { usePlayer } from \"../../context/playerContext\";\r\nimport { setSelectedRow, setCorrectRow, setIncorectRow } from \"../../components/services\";\r\nimport { listenToCorrectRow, listenToIncorrectRow, listenToSelectRow } from \"../../services/firebaseServices\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\n\r\ninterface HintWord {\r\n  word: string;\r\n  x: number;\r\n  y: number;\r\n  direction: \"horizontal\" | \"vertical\";\r\n}\r\n\r\ninterface ObstacleQuestionBoxProps {\r\n  obstacleWord?: string;\r\n  hintWordArray?: string[];\r\n  isHost?: boolean;\r\n  initialGrid?: string[][];\r\n}\r\n\r\nconst mainKeyword = \"BÒCÔNGANH\";\r\n\r\nconst QuestionBoxRound2: React.FC<ObstacleQuestionBoxProps> = ({\r\n  obstacleWord = mainKeyword,\r\n  hintWordArray,\r\n  initialGrid,\r\n  isHost = false,\r\n}) => {\r\n  console.log(\"hintWordArray\", typeof hintWordArray);\r\n  console.log(\"obstacle\", obstacleWord);\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const { setInitialGrid } = usePlayer();\r\n  const roomId = searchParams.get(\"roomId\") || \"\";\r\n  const GRID_SIZE = 20;\r\n\r\n  const generateEmptyGrid = () => {\r\n    return Array(GRID_SIZE)\r\n      .fill(null)\r\n      .map(() => Array(GRID_SIZE).fill(\"\"));\r\n  };\r\n\r\n  const [grid, setGrid] = useState<string[][]>(generateEmptyGrid());\r\n  const [hintWords, setHintWords] = useState<HintWord[]>([]);\r\n  const [cellStyles, setCellStyles] = useState<\r\n    Record<string, { background: string; textColor: string }>\r\n  >({}); // Tracks background and text styles\r\n  const [menu, setMenu] = useState<{\r\n    visible: boolean;\r\n    rowIndex?: number;\r\n    colIndex?: number;\r\n  }>({ visible: false });\r\n  const [hintWordsLength, setHintWordsLength] = useState<number[]>([]);\r\n\r\n  const menuRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (hintWordArray) {\r\n        hintWordArray.forEach((word, index) => {\r\n        console.log(`Word ${index}: '${word}' has length: ${word.length}`);\r\n        console.log([...word]);\r\n      });\r\n      const lengthArray = hintWordArray.map((word) => word.length);\r\n      setHintWordsLength(lengthArray);\r\n    }\r\n  }, [hintWordArray]);\r\n\r\n  useEffect(() => {\r\n          const unsubscribePlayers = listenToSelectRow(roomId, (rowNumber) => {\r\n             \r\n              \r\n          });\r\n  \r\n          // No need to set state here; it's handled by useState initializer\r\n          return () => {\r\n              unsubscribePlayers();\r\n          };\r\n      }, []);\r\n  // Initialize grid\r\n  useEffect(() => {\r\n    if (isHost) {\r\n      const wordList = [\"GIÓ\", \"HẠTGIỐNG\", \"DREAM\", \"THUỐC\", \"CÚC\", \"CHÂUKIỆTLUÂN\"];\r\n      console.log(\"wordList\", wordList);\r\n      console.log(\"hintWordArray\", hintWordArray);\r\n      if (hintWordArray && obstacleWord) {\r\n        const { randomHintWords, newGrid } = renderGrid(hintWordArray, obstacleWord, GRID_SIZE);\r\n        console.log(\"randomHintWords\", randomHintWords);\r\n        console.log(\"newGrid\", newGrid);\r\n        setHintWords(randomHintWords);\r\n        setInitialGrid(newGrid);\r\n        setGrid(newGrid);\r\n      }\r\n    } else {\r\n      if (initialGrid) {\r\n        setGrid(initialGrid);\r\n      }\r\n    }\r\n  }, [isHost, hintWordArray, obstacleWord, initialGrid, setInitialGrid]);\r\n\r\n  // Reveal cells in a row or column\r\n  \r\n\r\n  // Handle number click to show menu\r\n  const handleNumberClick = (rowIndex: number, colIndex: number) => {\r\n    if (!isHost) return;\r\n    setMenu({\r\n      visible: true,\r\n      rowIndex,\r\n      colIndex,\r\n    });\r\n  };\r\n\r\n  // Handle menu actions\r\n  const handleMenuAction = (\r\n    action: \"open\" | \"correct\" | \"incorrect\",\r\n    rowIndex: number,\r\n    colIndex: number,\r\n    hintWordNumber: string\r\n  ) => {\r\n    revealCells(rowIndex, colIndex, action, hintWordNumber);\r\n    setMenu({ visible: false });\r\n  };\r\n\r\n  // Handle cell click to reveal\r\n  const handleCellClick = (rowIndex: number, colIndex: number) => {\r\n    if (!isHost) return;\r\n    revealCells(rowIndex, colIndex, \"open\");\r\n  };\r\n\r\n  // Close menu on outside click\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\r\n        setMenu({ visible: false });\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center bg-white rounded-lg shadow-md p-6 relative\">\r\n      <div className=\"text-gray-700 text-xl font-semibold text-center mb-4 max-w-[90%]\">\r\n        Trong các giải đấu thể thao, những đội hay vận động viên mạnh sẽ được xếp vào cùng một hoặc nhiều nhóm trong khi bốc thăm để tránh việc gặp nhau sớm. Tên gọi chung của các nhóm vận động viên này là gì?\r\n      </div>\r\n      <div className=\"grid grid-cols-[repeat(20,40px)] grid-rows-[repeat(20,40px)] gap-1 max-h-[400px] overflow-y-scroll\">\r\n        {grid.map((row, rowIndex) => (\r\n          <React.Fragment key={rowIndex}>\r\n            {row.map((cell, colIndex) => {\r\n              const cellKey = `${rowIndex}-${colIndex}`;\r\n              const cellStyle = cellStyles[cellKey] || {\r\n                background: cell === \"\" ? \"bg-white\" : \"bg-gray-50\",\r\n                textColor: cell.includes(\"number\") ? \"text-blue-500\" : \"text-transparent\",\r\n              };\r\n\r\n              const showMenu =\r\n                menu.visible &&\r\n                menu.rowIndex === rowIndex &&\r\n                menu.colIndex === colIndex &&\r\n                cell.includes(\"number\");\r\n\r\n              return (\r\n                <div className=\"relative flex items-center\" key={colIndex}>\r\n                  <div\r\n                    className={`w-10 h-10 flex items-center justify-center text-lg font-semibold select-none\r\n                      ${cell.includes(\"number\") ? \"text-blue-500 border-none\" : \"\"}\r\n                      ${cell.includes(\"number\") ? \"\" : cellStyle.background}\r\n                      ${cell.includes(\"number\") ? \"text-blue-500\" : cellStyle.textColor}\r\n                      ${obstacleWord?.includes(cell) &&\r\n                      cellStyle.textColor === \"text-black\" &&\r\n                      !cell.includes(\"number\") &&\r\n                      isNaN(Number(cell))\r\n                        ? \"font-bold text-red-500\"\r\n                        : \"\"}\r\n                    `}\r\n                    onClick={() => {\r\n                      if (isHost) {\r\n                        if (cell.includes(\"number\")) {\r\n                          handleNumberClick(rowIndex, colIndex);\r\n                        } else {\r\n                          handleCellClick(rowIndex, colIndex);\r\n                        }\r\n                      }\r\n                    }}\r\n                    style={{\r\n                      cursor:\r\n                        isHost &&\r\n                        (cell.includes(\"number\") ||\r\n                          hintWords.some((word) => word.y === rowIndex || word.x === colIndex))\r\n                          ? \"pointer\"\r\n                          : \"default\",\r\n                    }}\r\n                  >\r\n                    {cell.includes(\"number\") ? cell.replace(\"number\", \"\").trim() : cell}\r\n                  </div>\r\n                  {showMenu && (\r\n                    <div\r\n                      ref={menuRef}\r\n                      className=\"absolute left-12 top-1/2 transform -translate-y-1/2 flex space-x-2 bg-white border border-gray-300 rounded shadow-lg p-1 z-10\"\r\n                    >\r\n                      <button\r\n                        className=\"px-2 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n                        onClick={() =>\r\n                          handleMenuAction(\"open\", rowIndex, colIndex, cell.replace(\"number\", \"\"))\r\n                        }\r\n                      >\r\n                        SELECT\r\n                      </button>\r\n                      <button\r\n                        className=\"px-2 py-1 text-sm bg-green-500 text-white rounded hover:bg-green-600\"\r\n                        onClick={() =>\r\n                          handleMenuAction(\"correct\", rowIndex, colIndex, cell.replace(\"number\", \"\"))\r\n                        }\r\n                      >\r\n                        Correct\r\n                      </button>\r\n                      <button\r\n                        className=\"px-2 py-1 text-sm bg-red-500 text-white rounded hover:bg-red-600\"\r\n                        onClick={() =>\r\n                          handleMenuAction(\"incorrect\", rowIndex, colIndex, cell.replace(\"number\", \"\"))\r\n                        }\r\n                      >\r\n                        Incorrect\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBoxRound2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}