{"ast":null,"code":"var _s = $RefreshSig$();\nimport { getQuestionByRound } from '../Test/service';\nimport React, { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HostRound2 = () => {\n  _s();\n  const [params] = useSearchParams();\n  const roomId = params.get(\"roomId\") || \"\";\n  const testName = params.get(\"testName\") || \"\";\n  useEffect(() => {\n    const getSecondRoundQuestion = async () => {\n      const result = await getQuestionByRound(testName, \"2\", roomId);\n      console.log(\"round 2 data\", result);\n      const obstacleWord = result[6].answer;\n      const hintWords = [];\n      for (let question of result) {}\n    };\n    getSecondRoundQuestion();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <Host\n    //     QuestionComponent={<QuestionBoxRound2/>}\n    // />\n    // <Round2 isHost={true}/>\n    _jsxDEV(_Fragment, {}, void 0, false)\n  );\n};\n_s(HostRound2, \"5jNo9fmnhG+F6aGLcScjzU4trR8=\", false, function () {\n  return [useSearchParams];\n});\n_c = HostRound2;\nexport default HostRound2;\nvar _c;\n$RefreshReg$(_c, \"HostRound2\");","map":{"version":3,"names":["getQuestionByRound","React","useEffect","useSearchParams","Fragment","_Fragment","jsxDEV","_jsxDEV","HostRound2","_s","params","roomId","get","testName","getSecondRoundQuestion","result","console","log","obstacleWord","answer","hintWords","question","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/pages/Host/Management/HostRound2.tsx"],"sourcesContent":["import Round2 from '../../../layouts/RoundBase/Round2';\r\nimport Host from '../../../layouts/Host/Host';\r\nimport QuestionBoxRound2 from '../../../layouts/RoundBase/Round2';\r\nimport { getQuestionByRound } from '../Test/service';\r\nimport React,{useEffect} from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\n\r\nconst HostRound2: React.FC = () => {\r\n    const [params] = useSearchParams()\r\n    const roomId = params.get(\"roomId\") || \"\"\r\n    const testName = params.get(\"testName\") || \"\"\r\n    useEffect(()=> {\r\n        const getSecondRoundQuestion = async () => {\r\n            const result = await getQuestionByRound(testName,\"2\",roomId)\r\n            console.log(\"round 2 data\", result)\r\n            const obstacleWord = result[6].answer\r\n            const hintWords = []\r\n            for (let question of result) {\r\n                \r\n            }\r\n        }\r\n\r\n        getSecondRoundQuestion()\r\n\r\n    },[])\r\n    return (\r\n        // <Host\r\n        //     QuestionComponent={<QuestionBoxRound2/>}\r\n        // />\r\n        // <Round2 isHost={true}/>\r\n        <>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default HostRound2;\r\n"],"mappings":";AAGA,SAASA,kBAAkB,QAAQ,iBAAiB;AACpD,OAAOC,KAAK,IAAEC,SAAS,QAAO,OAAO;AACrC,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,CAAC,GAAGP,eAAe,CAAC,CAAC;EAClC,MAAMQ,MAAM,GAAGD,MAAM,CAACE,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE;EACzC,MAAMC,QAAQ,GAAGH,MAAM,CAACE,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE;EAC7CV,SAAS,CAAC,MAAK;IACX,MAAMY,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACvC,MAAMC,MAAM,GAAG,MAAMf,kBAAkB,CAACa,QAAQ,EAAC,GAAG,EAACF,MAAM,CAAC;MAC5DK,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,MAAM,CAAC;MACnC,MAAMG,YAAY,GAAGH,MAAM,CAAC,CAAC,CAAC,CAACI,MAAM;MACrC,MAAMC,SAAS,GAAG,EAAE;MACpB,KAAK,IAAIC,QAAQ,IAAIN,MAAM,EAAE,CAE7B;IACJ,CAAC;IAEDD,sBAAsB,CAAC,CAAC;EAE5B,CAAC,EAAC,EAAE,CAAC;EACL;IAAA;IACI;IACA;IACA;IACA;IACAP,OAAA,CAAAF,SAAA,mBACE;EAAC;AAEX,CAAC;AAACI,EAAA,CA1BID,UAAoB;EAAA,QACLL,eAAe;AAAA;AAAAmB,EAAA,GAD9Bd,UAAoB;AA4B1B,eAAeA,UAAU;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}