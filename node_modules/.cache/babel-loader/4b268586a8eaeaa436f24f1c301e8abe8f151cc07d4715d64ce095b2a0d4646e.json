{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\pages\\\\User\\\\Round2\\\\UserRound2.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport User from \"../../../layouts/User/User\";\nimport Round2 from \"../../../layouts/RoundBase/Round2\";\nimport ReactPlaceholder from \"react-placeholder\";\nimport \"react-placeholder/lib/reactPlaceholder.css\";\nimport { listenToBuzzing } from \"../../../services/firebaseServices\";\nimport { usePlayer } from \"../../../context/playerContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserRound2() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(\"\");\n  const {\n    roomId,\n    initialGrid\n  } = usePlayer();\n  //const [grid, setGrid] = useState<string[][]>([])\n  useEffect(() => {\n    if (initialGrid && initialGrid.length > 0) {\n      setLoading(false);\n    }\n  }, [initialGrid]);\n  useEffect(() => {\n    const unsubscribeBuzzing = listenToBuzzing(roomId, data => {\n      if (!initialGrid || !grid) return;\n      let rowIndex = -1;\n      let colIndex = -1;\n      for (let row = 0; row < grid.length; row++) {\n        for (let col = 0; col < grid[row].length; col++) {\n          if (grid[row][col] === `number${data.selected_row_number}`) {\n            rowIndex = row;\n            colIndex = col;\n            break;\n          }\n        }\n        if (rowIndex !== -1) break;\n      }\n      if (rowIndex === -1 || colIndex === -1) {\n        console.warn(`Number cell number${data.selected_row_number} not found`);\n        return;\n      }\n    });\n    return () => {\n      unsubscribeIncorrect();\n    };\n  }, [roomId]);\n  // useEffect(() => {\n  //         const unsubscribePlayers = listenToGrid(roomId, (grid) => {\n  //             setGrid(grid)\n  //         });\n\n  //         return () => {\n  //             unsubscribePlayers();\n  //         };\n  //     }, []);\n\n  return /*#__PURE__*/_jsxDEV(ReactPlaceholder, {\n    type: \"text\",\n    rows: 3,\n    ready: !loading,\n    children: /*#__PURE__*/_jsxDEV(User, {\n      QuestionComponent: /*#__PURE__*/_jsxDEV(Round2, {\n        initialGrid: initialGrid,\n        isHost: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(UserRound2, \"l3Jc/WlmviWxKyqcl8qLIGHLe+I=\", false, function () {\n  return [usePlayer];\n});\n_c = UserRound2;\nexport default UserRound2;\nvar _c;\n$RefreshReg$(_c, \"UserRound2\");","map":{"version":3,"names":["useEffect","useState","User","Round2","ReactPlaceholder","listenToBuzzing","usePlayer","jsxDEV","_jsxDEV","UserRound2","_s","loading","setLoading","data","setData","roomId","initialGrid","length","unsubscribeBuzzing","grid","rowIndex","colIndex","row","col","selected_row_number","console","warn","unsubscribeIncorrect","type","rows","ready","children","QuestionComponent","isHost","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/pages/User/Round2/UserRound2.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport User from \"../../../layouts/User/User\";\r\nimport Round2 from \"../../../layouts/RoundBase/Round2\";\r\nimport ReactPlaceholder from \"react-placeholder\";\r\nimport \"react-placeholder/lib/reactPlaceholder.css\";\r\nimport { listenToGrid, listenToRoundStart, listenToBuzzing } from \"../../../services/firebaseServices\";\r\nimport { usePlayer } from \"../../../context/playerContext\";\r\nfunction UserRound2() {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [data, setData] = useState<string>(\"\");\r\n    const {roomId, initialGrid} = usePlayer()\r\n    //const [grid, setGrid] = useState<string[][]>([])\r\n    useEffect(() => {\r\n\r\n        if (initialGrid && initialGrid.length > 0) {\r\n            setLoading(false); \r\n        }\r\n    }, [initialGrid]);\r\n\r\n    useEffect(() => {\r\n        const unsubscribeBuzzing = listenToBuzzing(roomId, (data) => {\r\n\r\n          if (!initialGrid || !grid) return;\r\n    \r\n          let rowIndex = -1;\r\n          let colIndex = -1;\r\n          for (let row = 0; row < grid.length; row++) {\r\n            for (let col = 0; col < grid[row].length; col++) {\r\n              if (grid[row][col] === `number${data.selected_row_number}`) {\r\n                rowIndex = row;\r\n                colIndex = col;\r\n                break;\r\n              }\r\n            }\r\n            if (rowIndex !== -1) break;\r\n          }\r\n    \r\n          if (rowIndex === -1 || colIndex === -1) {\r\n            console.warn(`Number cell number${data.selected_row_number} not found`);\r\n            return;\r\n          }\r\n    \r\n        });\r\n    \r\n        return () => {\r\n          unsubscribeIncorrect();\r\n        };\r\n      }, [roomId]);\r\n    // useEffect(() => {\r\n    //         const unsubscribePlayers = listenToGrid(roomId, (grid) => {\r\n    //             setGrid(grid)\r\n    //         });\r\n\r\n    //         return () => {\r\n    //             unsubscribePlayers();\r\n    //         };\r\n    //     }, []);\r\n\r\n    return (\r\n        <ReactPlaceholder\r\n            type=\"text\"\r\n            rows={3}\r\n            ready={!loading}\r\n        >\r\n\r\n            <User\r\n                QuestionComponent={<Round2 initialGrid={initialGrid} isHost={false}/>}\r\n            />\r\n        </ReactPlaceholder>\r\n    )\r\n\r\n}\r\n\r\nexport default UserRound2;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,MAAM,MAAM,mCAAmC;AACtD,OAAOC,gBAAgB,MAAM,mBAAmB;AAChD,OAAO,4CAA4C;AACnD,SAA2CC,eAAe,QAAQ,oCAAoC;AACtG,SAASC,SAAS,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3D,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM;IAACc,MAAM;IAAEC;EAAW,CAAC,GAAGV,SAAS,CAAC,CAAC;EACzC;EACAN,SAAS,CAAC,MAAM;IAEZ,IAAIgB,WAAW,IAAIA,WAAW,CAACC,MAAM,GAAG,CAAC,EAAE;MACvCL,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,CAACI,WAAW,CAAC,CAAC;EAEjBhB,SAAS,CAAC,MAAM;IACZ,MAAMkB,kBAAkB,GAAGb,eAAe,CAACU,MAAM,EAAGF,IAAI,IAAK;MAE3D,IAAI,CAACG,WAAW,IAAI,CAACG,IAAI,EAAE;MAE3B,IAAIC,QAAQ,GAAG,CAAC,CAAC;MACjB,IAAIC,QAAQ,GAAG,CAAC,CAAC;MACjB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGH,IAAI,CAACF,MAAM,EAAEK,GAAG,EAAE,EAAE;QAC1C,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGJ,IAAI,CAACG,GAAG,CAAC,CAACL,MAAM,EAAEM,GAAG,EAAE,EAAE;UAC/C,IAAIJ,IAAI,CAACG,GAAG,CAAC,CAACC,GAAG,CAAC,KAAK,SAASV,IAAI,CAACW,mBAAmB,EAAE,EAAE;YAC1DJ,QAAQ,GAAGE,GAAG;YACdD,QAAQ,GAAGE,GAAG;YACd;UACF;QACF;QACA,IAAIH,QAAQ,KAAK,CAAC,CAAC,EAAE;MACvB;MAEA,IAAIA,QAAQ,KAAK,CAAC,CAAC,IAAIC,QAAQ,KAAK,CAAC,CAAC,EAAE;QACtCI,OAAO,CAACC,IAAI,CAAC,qBAAqBb,IAAI,CAACW,mBAAmB,YAAY,CAAC;QACvE;MACF;IAEF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXG,oBAAoB,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,CAACZ,MAAM,CAAC,CAAC;EACd;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACIP,OAAA,CAACJ,gBAAgB;IACbwB,IAAI,EAAC,MAAM;IACXC,IAAI,EAAE,CAAE;IACRC,KAAK,EAAE,CAACnB,OAAQ;IAAAoB,QAAA,eAGhBvB,OAAA,CAACN,IAAI;MACD8B,iBAAiB,eAAExB,OAAA,CAACL,MAAM;QAACa,WAAW,EAAEA,WAAY;QAACiB,MAAM,EAAE;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAG3B;AAAC3B,EAAA,CAjEQD,UAAU;EAAA,QAIeH,SAAS;AAAA;AAAAgC,EAAA,GAJlC7B,UAAU;AAmEnB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}