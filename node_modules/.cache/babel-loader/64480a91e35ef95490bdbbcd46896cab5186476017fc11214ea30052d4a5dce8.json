{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\pages\\\\User\\\\Round2.tsx\",\n  _s = $RefreshSig$();\nimport Play from \"../../layouts/Play\";\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\";\n\n// Từ khóa chướng ngại vật\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mainKeyword = \"BÒCÔNGANH\";\nconst hintWords = [\"GIÓ\", \"HẠT GIỐNG\", \"DREAM\", \"THUỐC\", \"CÚC\", \"CHÂU KIỆT LUÂN\"];\n\n// Kích thước bảng\nconst gridSize = 10;\n\n// Hàm tạo bảng crossword\nconst generateGrid = () => {\n  const grid = Array(gridSize).fill(null).map(() => Array(gridSize).fill(\"\"));\n\n  // Điền từ khóa gợi ý vào bảng\n  hintWords.forEach(({\n    word,\n    position,\n    direction\n  }) => {\n    const [startRow, startCol] = position;\n    for (let i = 0; i < word.length; i++) {\n      const row = direction === \"vertical\" ? startRow + i : startRow;\n      const col = direction === \"horizontal\" ? startCol + i : startCol;\n      grid[row][col] = word[i];\n    }\n  });\n  return grid;\n};\n\n// Hàm lấy vị trí của các chữ trong từ khóa chướng ngại vật\nconst getObstacleLetterPositions = grid => {\n  const positions = new Set();\n  grid.forEach((row, r) => row.forEach((char, c) => {\n    if (obstacleWord.includes(char)) {\n      positions.add(`${r}-${c}`);\n    }\n  }));\n  return positions;\n};\nconst Crossword = () => {\n  _s();\n  const grid = generateGrid();\n  const obstaclePositions = getObstacleLetterPositions(grid);\n\n  // Trạng thái kiểm tra ô nào đã được mở\n  const [revealedCells, setRevealedCells] = useState(new Set());\n\n  // Khi người chơi nhấn vào ô chữ\n  const handleClick = (row, col) => {\n    const newRevealed = new Set(revealedCells);\n    newRevealed.add(`${row}-${col}`);\n    setRevealedCells(newRevealed);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-black text-white p-6 flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-10 gap-1 border-4 border-gray-600 p-2\",\n      children: grid.map((row, r) => row.map((char, c) => {\n        if (!char) return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-8 h-8\"\n        }, `${r}-${c}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 31\n        }, this); // Ẩn ô trống\n\n        const isObstacleLetter = obstaclePositions.has(`${r}-${c}`);\n        const isRevealed = revealedCells.has(`${r}-${c}`);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(\"w-8 h-8 flex items-center justify-center border border-gray-400 text-lg font-bold cursor-pointer\", {\n            \"bg-white text-black\": isRevealed,\n            \"bg-gray-700\": !isRevealed,\n            \"text-red-500\": isObstacleLetter && isRevealed\n          }),\n          onClick: () => handleClick(r, c),\n          children: isRevealed ? char : \"\"\n        }, `${r}-${c}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-lg\",\n      children: hintWords.map(({\n        word\n      }, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-blue-400 font-bold\",\n        children: [index + 1, \". \", word]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Crossword, \"roUpWTKsS1RcQkm6dx1Ma661u4k=\");\n_c = Crossword;\nfunction Round2() {\n  return /*#__PURE__*/_jsxDEV(Play, {\n    questionComponent: /*#__PURE__*/_jsxDEV(Crossword, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Round2;\nexport default Round2;\nvar _c, _c2;\n$RefreshReg$(_c, \"Crossword\");\n$RefreshReg$(_c2, \"Round2\");","map":{"version":3,"names":["Play","React","useState","clsx","jsxDEV","_jsxDEV","mainKeyword","hintWords","gridSize","generateGrid","grid","Array","fill","map","forEach","word","position","direction","startRow","startCol","i","length","row","col","getObstacleLetterPositions","positions","Set","r","char","c","obstacleWord","includes","add","Crossword","_s","obstaclePositions","revealedCells","setRevealedCells","handleClick","newRevealed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isObstacleLetter","has","isRevealed","onClick","index","_c","Round2","questionComponent","_c2","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/pages/User/Round2.tsx"],"sourcesContent":["import Play from \"../../layouts/Play\";\r\nimport React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\n// Từ khóa chướng ngại vật\r\nconst mainKeyword = \"BÒCÔNGANH\";\r\nconst hintWords = [\"GIÓ\", \"HẠT GIỐNG\", \"DREAM\", \"THUỐC\", \"CÚC\", \"CHÂU KIỆT LUÂN\"];\r\n\r\n\r\n\r\n// Kích thước bảng\r\nconst gridSize = 10;\r\n\r\n// Hàm tạo bảng crossword\r\nconst generateGrid = () => {\r\n  const grid = Array(gridSize)\r\n    .fill(null)\r\n    .map(() => Array(gridSize).fill(\"\"));\r\n\r\n  // Điền từ khóa gợi ý vào bảng\r\n  hintWords.forEach(({ word, position, direction }) => {\r\n    const [startRow, startCol] = position;\r\n    for (let i = 0; i < word.length; i++) {\r\n      const row = direction === \"vertical\" ? startRow + i : startRow;\r\n      const col = direction === \"horizontal\" ? startCol + i : startCol;\r\n      grid[row][col] = word[i];\r\n    }\r\n  });\r\n\r\n  return grid;\r\n};\r\n\r\n// Hàm lấy vị trí của các chữ trong từ khóa chướng ngại vật\r\nconst getObstacleLetterPositions = (grid: string[][]) => {\r\n  const positions: Set<string> = new Set();\r\n  grid.forEach((row, r) =>\r\n    row.forEach((char, c) => {\r\n      if (obstacleWord.includes(char)) {\r\n        positions.add(`${r}-${c}`);\r\n      }\r\n    })\r\n  );\r\n  return positions;\r\n};\r\n\r\nconst Crossword: React.FC = () => {\r\n  const grid = generateGrid();\r\n  const obstaclePositions = getObstacleLetterPositions(grid);\r\n\r\n  // Trạng thái kiểm tra ô nào đã được mở\r\n  const [revealedCells, setRevealedCells] = useState<Set<string>>(new Set());\r\n\r\n  // Khi người chơi nhấn vào ô chữ\r\n  const handleClick = (row: number, col: number) => {\r\n    const newRevealed = new Set(revealedCells);\r\n    newRevealed.add(`${row}-${col}`);\r\n    setRevealedCells(newRevealed);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-black text-white p-6 flex flex-col items-center\">\r\n      <div className=\"grid grid-cols-10 gap-1 border-4 border-gray-600 p-2\">\r\n        {grid.map((row, r) =>\r\n          row.map((char, c) => {\r\n            if (!char) return <div key={`${r}-${c}`} className=\"w-8 h-8\"></div>; // Ẩn ô trống\r\n\r\n            const isObstacleLetter = obstaclePositions.has(`${r}-${c}`);\r\n            const isRevealed = revealedCells.has(`${r}-${c}`);\r\n\r\n            return (\r\n              <div\r\n                key={`${r}-${c}`}\r\n                className={clsx(\r\n                  \"w-8 h-8 flex items-center justify-center border border-gray-400 text-lg font-bold cursor-pointer\",\r\n                  {\r\n                    \"bg-white text-black\": isRevealed,\r\n                    \"bg-gray-700\": !isRevealed,\r\n                    \"text-red-500\": isObstacleLetter && isRevealed,\r\n                  }\r\n                )}\r\n                onClick={() => handleClick(r, c)}\r\n              >\r\n                {isRevealed ? char : \"\"}\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n\r\n      {/* Danh sách từ gợi ý */}\r\n      <div className=\"mt-4 text-lg\">\r\n        {hintWords.map(({ word }, index) => (\r\n          <p key={index} className=\"text-blue-400 font-bold\">\r\n            {index + 1}. {word}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Round2() {\r\n    return (\r\n        <Play\r\n            questionComponent= {<Crossword/>}\r\n            \r\n        />\r\n    )\r\n}\r\n\r\nexport default Round2"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}