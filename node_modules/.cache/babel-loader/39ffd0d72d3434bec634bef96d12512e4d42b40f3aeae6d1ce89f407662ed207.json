{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\layouts\\\\RoundBase\\\\Round4.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Play from '../Play';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exampleGrid = [['!', '', '?', '', '!'], ['', '?', '!', '', '?'], ['?', '', '', '!', '?'], ['!', '?', '', '', '!'], ['?', '!', '', '?', '']];\n\n// Example questions for testing\nconst exampleQuestions = ['Question 1', 'Question 2', 'Question 3', 'Question 4', 'Question 5', 'Question 6', 'Question 7', 'Question 8', 'Question 9', 'Question 10', 'Question 11', 'Question 12', 'Question 13', 'Question 14', 'Question 15', 'Question 16', 'Question 17', 'Question 18', 'Question 19', 'Question 20', 'Question 21', 'Question 22', 'Question 23', 'Question 24', 'Question 25'];\nconst QuestionComponent = ({\n  initialGrid,\n  questions,\n  isHost = false\n}) => {\n  _s();\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const [gridColors, setGridColors] = useState(Array(5).fill(Array(5).fill('#FFFFFF')) // Default grid colors are white\n  );\n\n  // Function to handle cell click (only for host)\n  const handleCellClick = (row, col) => {\n    if (!isHost) return; // Prevent non-host users from interacting\n    const questionIndex = row * 5 + col; // Calculate question index from grid position\n    if (questions[questionIndex]) {\n      setSelectedQuestion(questions[questionIndex]);\n    }\n  };\n\n  // Simulated listener for host events (only for host)\n  const listenToHostEvents = () => {\n    if (!isHost) return; // Prevent non-host users from listening\n    setTimeout(() => {\n      const simulatedRow = 2; // Simulated row index\n      const simulatedCol = 3; // Simulated column index\n      const simulatedColor = '#FFFF99'; // Simulated background color\n\n      // Highlight the simulated cell\n      setGridColors(prev => {\n        const newGrid = [...prev];\n        newGrid[simulatedRow][simulatedCol] = simulatedColor;\n        return newGrid;\n      });\n    }, 3000);\n  };\n\n  // Effect to start listening for host events\n  useEffect(() => {\n    listenToHostEvents();\n  }, [isHost]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold text-black mb-4\",\n      children: selectedQuestion ? `Question: ${selectedQuestion}` : 'Select a cell to view a question'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-6 gap-2 mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), \" \", ['1', '2', '3', '4', '5'].map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center font-bold text-black w-16 h-16\",\n        children: label\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-rows-5 gap-2\",\n      children: ['A', 'B', 'C', 'D', 'E'].map((rowLabel, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center font-bold text-black w-16 h-16\",\n          children: [rowLabel, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), initialGrid[rowIndex].map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleCellClick(rowIndex, colIndex),\n          className: `flex items-center justify-center w-16 h-16 rounded-md cursor-pointer ${isHost ? '' : 'cursor-not-allowed'}` // Disable interaction for non-hosts\n          ,\n          style: {\n            backgroundColor: gridColors[rowIndex][colIndex],\n            border: '1px solid #000'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-black text-lg\",\n            children: cell\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this)\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this))]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n// Example component integrating QuestionComponent\n_s(QuestionComponent, \"SZIN6THMZpCbmj6R/ChOCvKYtEg=\");\n_c = QuestionComponent;\nfunction Round4() {\n  return /*#__PURE__*/_jsxDEV(Play, {\n    questionComponent: /*#__PURE__*/_jsxDEV(QuestionComponent, {\n      initialGrid: exampleGrid,\n      questions: exampleQuestions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Round4;\nexport default Round4;\nvar _c, _c2;\n$RefreshReg$(_c, \"QuestionComponent\");\n$RefreshReg$(_c2, \"Round4\");","map":{"version":3,"names":["React","useState","useEffect","Play","jsxDEV","_jsxDEV","exampleGrid","exampleQuestions","QuestionComponent","initialGrid","questions","isHost","_s","selectedQuestion","setSelectedQuestion","gridColors","setGridColors","Array","fill","handleCellClick","row","col","questionIndex","listenToHostEvents","setTimeout","simulatedRow","simulatedCol","simulatedColor","prev","newGrid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","label","rowLabel","rowIndex","cell","colIndex","onClick","style","backgroundColor","border","_c","Round4","questionComponent","_c2","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/layouts/RoundBase/Round4.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Play from '../Play';\r\n\r\ninterface QuestionComponentProps {\r\n    initialGrid: string[][]; // 5x5 grid (can be passed from parent or generated)\r\n    questions: string[]; // Array of questions for testing\r\n    isHost?: boolean; // Indicates whether the user is the host\r\n}\r\n\r\nconst exampleGrid = [\r\n    ['!', '', '?', '', '!'],\r\n    ['', '?', '!', '', '?'],\r\n    ['?', '', '', '!', '?'],\r\n    ['!', '?', '', '', '!'],\r\n    ['?', '!', '', '?', ''],\r\n];\r\n\r\n// Example questions for testing\r\nconst exampleQuestions = [\r\n    'Question 1', 'Question 2', 'Question 3', 'Question 4', 'Question 5',\r\n    'Question 6', 'Question 7', 'Question 8', 'Question 9', 'Question 10',\r\n    'Question 11', 'Question 12', 'Question 13', 'Question 14', 'Question 15',\r\n    'Question 16', 'Question 17', 'Question 18', 'Question 19', 'Question 20',\r\n    'Question 21', 'Question 22', 'Question 23', 'Question 24', 'Question 25',\r\n];\r\n\r\nconst QuestionComponent: React.FC<QuestionComponentProps> = ({\r\n    initialGrid,\r\n    questions,\r\n    isHost = false,\r\n}) => {\r\n    const [selectedQuestion, setSelectedQuestion] = useState<string | null>(null);\r\n    const [gridColors, setGridColors] = useState<string[][]>(\r\n        Array(5).fill(Array(5).fill('#FFFFFF')) // Default grid colors are white\r\n    );\r\n\r\n    // Function to handle cell click (only for host)\r\n    const handleCellClick = (row: number, col: number) => {\r\n        if (!isHost) return; // Prevent non-host users from interacting\r\n        const questionIndex = row * 5 + col; // Calculate question index from grid position\r\n        if (questions[questionIndex]) {\r\n            setSelectedQuestion(questions[questionIndex]);\r\n        }\r\n    };\r\n\r\n    // Simulated listener for host events (only for host)\r\n    const listenToHostEvents = () => {\r\n        if (!isHost) return; // Prevent non-host users from listening\r\n        setTimeout(() => {\r\n            const simulatedRow = 2; // Simulated row index\r\n            const simulatedCol = 3; // Simulated column index\r\n            const simulatedColor = '#FFFF99'; // Simulated background color\r\n\r\n            // Highlight the simulated cell\r\n            setGridColors((prev) => {\r\n                const newGrid = [...prev];\r\n                newGrid[simulatedRow][simulatedCol] = simulatedColor;\r\n                return newGrid;\r\n            });\r\n        }, 3000);\r\n    };\r\n\r\n    // Effect to start listening for host events\r\n    useEffect(() => {\r\n        listenToHostEvents();\r\n    }, [isHost]);\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center\">\r\n            {/* Display selected question */}\r\n            <h2 className=\"text-xl font-bold text-black mb-4\">\r\n                {selectedQuestion ? `Question: ${selectedQuestion}` : 'Select a cell to view a question'}\r\n            </h2>\r\n\r\n            {/* Column labels (1, 2, 3, 4, 5) */}\r\n            <div className=\"grid grid-cols-6 gap-2 mb-2\">\r\n                <div></div> {/* Empty corner cell */}\r\n                {['1', '2', '3', '4', '5'].map((label) => (\r\n                    <div key={label} className=\"flex items-center justify-center font-bold text-black w-16 h-16\">\r\n                        {label}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Render 5x5 grid with row labels (A, B, C, D, E) */}\r\n            <div className=\"grid grid-rows-5 gap-2\">\r\n                {['A', 'B', 'C', 'D', 'E'].map((rowLabel, rowIndex) => (\r\n                    <div key={rowIndex} className=\"flex\">\r\n                        <div className=\"flex items-center justify-center font-bold text-black w-16 h-16\">\r\n                            {rowLabel} {/* Row label */}\r\n                        </div>\r\n                        {initialGrid[rowIndex].map((cell, colIndex) => (\r\n                            <div\r\n                                key={`${rowIndex}-${colIndex}`}\r\n                                onClick={() => handleCellClick(rowIndex, colIndex)}\r\n                                className={`flex items-center justify-center w-16 h-16 rounded-md cursor-pointer ${\r\n                                    isHost ? '' : 'cursor-not-allowed'\r\n                                }`} // Disable interaction for non-hosts\r\n                                style={{\r\n                                    backgroundColor: gridColors[rowIndex][colIndex],\r\n                                    border: '1px solid #000',\r\n                                }}\r\n                            >\r\n                                <span className=\"text-black text-lg\">{cell}</span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Example component integrating QuestionComponent\r\nfunction Round4() {\r\n    return (\r\n        <Play\r\n            questionComponent={<QuestionComponent initialGrid={exampleGrid} questions={exampleQuestions}/>}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Round4;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}