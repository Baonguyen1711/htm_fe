{"ast":null,"code":"import { getAxiosAuthContext } from \"../context/authContext\";\nexport const submitAnswer = async (roomId, answer, stt) => {\n  try {\n    const context = getAxiosAuthContext();\n    const {\n      authToken,\n      getAxiosInstance\n    } = context;\n    const axiosInstance = getAxiosInstance();\n    if (!authToken) {\n      throw new Error(\"No token found. Please log in.\");\n    }\n    const response = await axiosInstance.post(`/api/test/submit?room_id=${roomId}`, {\n      \"answer\": answer,\n      \"stt\": stt\n    }, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}` // Nếu API yêu cầu token\n      }\n    });\n    if (response.status !== 200) {\n      throw new Error(`Failed to send answer, Status: ${response.status}`);\n    }\n\n    // Phân tích dữ liệu từ response JSON\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching test data:', error);\n    throw error; // Quăng lỗi để xử lý ở nơi gọi hàm\n  }\n};","map":{"version":3,"names":["getAxiosAuthContext","submitAnswer","roomId","answer","stt","context","authToken","getAxiosInstance","axiosInstance","Error","response","post","headers","status","data","error","console"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/layouts/services.ts"],"sourcesContent":["import { getAxiosAuthContext } from \"../context/authContext\";\r\n\r\nexport const submitAnswer = async (roomId: string, answer: string, stt: string): Promise<any> => {\r\n    try {\r\n      \r\n      const context = getAxiosAuthContext()\r\n      const { authToken, getAxiosInstance } = context\r\n      const axiosInstance = getAxiosInstance()\r\n      if (!authToken) {\r\n        throw new Error(\"No token found. Please log in.\");\r\n      }\r\n      const response = await axiosInstance.post(`/api/test/submit?room_id=${roomId}`,{\r\n        \"answer\": answer,\r\n        \"stt\": stt\r\n      } ,{\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${authToken}`, // Nếu API yêu cầu token\r\n        },\r\n      });\r\n  \r\n      if (response.status !== 200) {\r\n        throw new Error(`Failed to send answer, Status: ${response.status}`);\r\n      }\r\n  \r\n      // Phân tích dữ liệu từ response JSON\r\n      return response.data;\r\n  \r\n    } catch (error) {\r\n      console.error('Error fetching test data:', error);\r\n      throw error; // Quăng lỗi để xử lý ở nơi gọi hàm\r\n    }\r\n  };\r\n  \r\n\r\n  "],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,wBAAwB;AAE5D,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,MAAc,EAAEC,MAAc,EAAEC,GAAW,KAAmB;EAC7F,IAAI;IAEF,MAAMC,OAAO,GAAGL,mBAAmB,CAAC,CAAC;IACrC,MAAM;MAAEM,SAAS;MAAEC;IAAiB,CAAC,GAAGF,OAAO;IAC/C,MAAMG,aAAa,GAAGD,gBAAgB,CAAC,CAAC;IACxC,IAAI,CAACD,SAAS,EAAE;MACd,MAAM,IAAIG,KAAK,CAAC,gCAAgC,CAAC;IACnD;IACA,MAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,IAAI,CAAC,4BAA4BT,MAAM,EAAE,EAAC;MAC7E,QAAQ,EAAEC,MAAM;MAChB,KAAK,EAAEC;IACT,CAAC,EAAE;MACDQ,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUN,SAAS,EAAE,CAAE;MAC1C;IACF,CAAC,CAAC;IAEF,IAAII,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAM,IAAIJ,KAAK,CAAC,kCAAkCC,QAAQ,CAACG,MAAM,EAAE,CAAC;IACtE;;IAEA;IACA,OAAOH,QAAQ,CAACI,IAAI;EAEtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}