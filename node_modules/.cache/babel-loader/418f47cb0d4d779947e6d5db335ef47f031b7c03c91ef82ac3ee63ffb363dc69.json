{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\components\\\\PlayerAnswer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { usePlayer } from '../context/playerContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerAnswer = () => {\n  _s();\n  const {\n    playersArray,\n    playerFlashes,\n    roomId\n  } = usePlayer();\n  const [answerList, setAnswerList] = useState([]);\n  const spots = [1, 2, 3, 4];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-around mt-4\",\n      children: spots.map(spotNumber => {\n        const storedPlayers = localStorage.getItem(\"playerList\");\n        {\n          console.log(\"storedPlayers\", storedPlayers);\n        }\n        const array = playersArray !== null ? playersArray : storedPlayers ? JSON.parse(storedPlayers) : [];\n        {\n          console.log(\"array\", array);\n        }\n        const player = array.find(p => parseInt(p.stt) === spotNumber);\n        if (player) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex flex-col items-center ${playerFlashes[spotNumber]}`,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: player.avatar,\n              alt: \"Player\",\n              className: \"w-16 h-16 rounded-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-white mt-2 \",\n              children: \"PlayerAnswer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-white\",\n              children: `player_${player.stt}: ${player.userName}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this)]\n          }, spotNumber, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(PlayerAnswer, \"Aw5nJyQOHuRqxpHvnoxVwgSzq8E=\", false, function () {\n  return [usePlayer];\n});\n_c = PlayerAnswer;\nexport default PlayerAnswer;\nvar _c;\n$RefreshReg$(_c, \"PlayerAnswer\");","map":{"version":3,"names":["React","useState","usePlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerAnswer","_s","playersArray","playerFlashes","roomId","answerList","setAnswerList","spots","children","className","map","spotNumber","storedPlayers","localStorage","getItem","console","log","array","JSON","parse","player","find","p","parseInt","stt","src","avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","userName","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/components/PlayerAnswer.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { usePlayer } from '../context/playerContext';\r\nimport { User, Answer } from '../type';\r\nimport { listenToBroadcastedAnswer } from '../services/firebaseServices';\r\n\r\n\r\n\r\nconst PlayerAnswer: React.FC = () => {\r\n    const { playersArray, playerFlashes, roomId } = usePlayer()\r\n        const [answerList, setAnswerList] = useState<Answer[]>([])\r\n    const spots = [1, 2, 3, 4]\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n\r\n            <div className=\"flex justify-around mt-4\">\r\n                {\r\n                    spots.map((spotNumber: number) => {\r\n\r\n                        const storedPlayers = localStorage.getItem(\"playerList\");\r\n                        { console.log(\"storedPlayers\", storedPlayers) }\r\n                        const array = playersArray !== null\r\n                            ? playersArray\r\n                            : (storedPlayers ? JSON.parse(storedPlayers) : []);\r\n                        { console.log(\"array\", array) }\r\n                        const player = array.find((p: User) => parseInt(p.stt) === spotNumber);\r\n                        if (player) {\r\n                            return (\r\n                                <div key={spotNumber} className={`flex flex-col items-center ${playerFlashes[spotNumber]}`}>\r\n                                    <img\r\n                                        src={player.avatar}\r\n                                        alt=\"Player\"\r\n                                        className=\"w-16 h-16 rounded-full\"\r\n                                    />\r\n                                    <p className=\"text-white mt-2 \">\r\n                                        PlayerAnswer\r\n                                    </p>\r\n                                    <p className=\"text-white\">{`player_${player.stt}: ${player.userName}`}</p>\r\n\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    })\r\n                }\r\n                {/* {playersArray.map((player, index) => (\r\n                           \r\n                        ))} */}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayerAnswer"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAMrD,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAAEC,YAAY;IAAEC,aAAa;IAAEC;EAAO,CAAC,GAAGT,SAAS,CAAC,CAAC;EACvD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAW,EAAE,CAAC;EAC9D,MAAMa,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAI1B,oBACIV,OAAA,CAAAE,SAAA;IAAAS,QAAA,eAEIX,OAAA;MAAKY,SAAS,EAAC,0BAA0B;MAAAD,QAAA,EAEjCD,KAAK,CAACG,GAAG,CAAEC,UAAkB,IAAK;QAE9B,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;QACxD;UAAEC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,aAAa,CAAC;QAAC;QAC9C,MAAMK,KAAK,GAAGf,YAAY,KAAK,IAAI,GAC7BA,YAAY,GACXU,aAAa,GAAGM,IAAI,CAACC,KAAK,CAACP,aAAa,CAAC,GAAG,EAAG;QACtD;UAAEG,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEC,KAAK,CAAC;QAAC;QAC9B,MAAMG,MAAM,GAAGH,KAAK,CAACI,IAAI,CAAEC,CAAO,IAAKC,QAAQ,CAACD,CAAC,CAACE,GAAG,CAAC,KAAKb,UAAU,CAAC;QACtE,IAAIS,MAAM,EAAE;UACR,oBACIvB,OAAA;YAAsBY,SAAS,EAAE,8BAA8BN,aAAa,CAACQ,UAAU,CAAC,EAAG;YAAAH,QAAA,gBACvFX,OAAA;cACI4B,GAAG,EAAEL,MAAM,CAACM,MAAO;cACnBC,GAAG,EAAC,QAAQ;cACZlB,SAAS,EAAC;YAAwB;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC,eACFlC,OAAA;cAAGY,SAAS,EAAC,kBAAkB;cAAAD,QAAA,EAAC;YAEhC;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACJlC,OAAA;cAAGY,SAAS,EAAC,YAAY;cAAAD,QAAA,EAAE,UAAUY,MAAM,CAACI,GAAG,KAAKJ,MAAM,CAACY,QAAQ;YAAE;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GATpEpB,UAAU;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWf,CAAC;QAEd;MAEJ,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKL;EAAC,gBAER,CAAC;AAEX,CAAC;AAAA9B,EAAA,CA/CKD,YAAsB;EAAA,QACwBL,SAAS;AAAA;AAAAsC,EAAA,GADvDjC,YAAsB;AAiD5B,eAAeA,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}