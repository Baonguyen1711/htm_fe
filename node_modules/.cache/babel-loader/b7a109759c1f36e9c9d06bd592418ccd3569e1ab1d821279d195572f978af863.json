{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\pages\\\\User\\\\Round2.tsx\";\nimport React from \"react\";\nimport Play from \"../../layouts/Play\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst crosswordData = {\n  mainWord: \"CHƯỚNGNGẠIVẬT\",\n  hints: [{\n    word: \"GIÓ\",\n    position: {\n      x: 0,\n      y: 3\n    },\n    direction: \"horizontal\"\n  }, {\n    word: \"HẠTGIỐNG\",\n    position: {\n      x: 0,\n      y: 0\n    },\n    direction: \"vertical\"\n  }, {\n    word: \"DREAM\",\n    position: {\n      x: 3,\n      y: 0\n    },\n    direction: \"horizontal\"\n  }, {\n    word: \"THUỐC\",\n    position: {\n      x: 2,\n      y: 3\n    },\n    direction: \"horizontal\"\n  }, {\n    word: \"CÚC\",\n    position: {\n      x: 5,\n      y: 0\n    },\n    direction: \"vertical\"\n  }, {\n    word: \"CHÂUKIẾTLUẬN\",\n    position: {\n      x: 6,\n      y: 0\n    },\n    direction: \"vertical\"\n  }],\n  highlightedLetters: [\"C\", \"G\", \"N\", \"A\"]\n};\nconst Crossword = () => {\n  const gridSize = 15; // Adjust this based on the actual layout needed\n  const grid = Array.from({\n    length: gridSize\n  }, () => Array(gridSize).fill(null));\n\n  // Fill the grid with words\n  crosswordData.hints.forEach(({\n    word,\n    position,\n    direction\n  }, index) => {\n    let {\n      x,\n      y\n    } = position;\n    for (let i = 0; i < word.length; i++) {\n      grid[y][x] = {\n        char: word[i],\n        hintIndex: index + 1\n      };\n      if (direction === \"horizontal\") x++;else y++;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center p-4 bg-black text-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-[repeat(15,1fr)] gap-1 border p-2\",\n      children: grid.map((row, rowIndex) => row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `w-8 h-8 flex items-center justify-center border bg-white text-black font-bold relative ${cell !== null && cell !== void 0 && cell.char && crosswordData.highlightedLetters.includes(cell.char) ? \"text-red-500\" : \"\"}`,\n        children: [(cell === null || cell === void 0 ? void 0 : cell.char) || \"\", (cell === null || cell === void 0 ? void 0 : cell.hintIndex) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"absolute -top-2 -left-2 text-xs bg-blue-500 text-white px-1 rounded-full\",\n          children: cell.hintIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this)]\n      }, `${rowIndex}-${colIndex}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n};\n_c = Crossword;\nfunction Round2() {\n  return /*#__PURE__*/_jsxDEV(Play, {\n    questionComponent: /*#__PURE__*/_jsxDEV(Play, {\n      questionComponent: /*#__PURE__*/_jsxDEV(Crossword, {\n        obstacleWord: \"B\\u1ED2 C\\xD4NG ANH\",\n        hintWords: [\"GIÓ\", \"HẠTGIỐNG\", \"DREAM\", \"CHÂUKIỆTLUÂN\", \"THUỐC\", \"CÚC\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Round2;\nexport default Round2;\nvar _c, _c2;\n$RefreshReg$(_c, \"Crossword\");\n$RefreshReg$(_c2, \"Round2\");","map":{"version":3,"names":["React","Play","jsxDEV","_jsxDEV","crosswordData","mainWord","hints","word","position","x","y","direction","highlightedLetters","Crossword","gridSize","grid","Array","from","length","fill","forEach","index","i","char","hintIndex","className","children","map","row","rowIndex","cell","colIndex","includes","fileName","_jsxFileName","lineNumber","columnNumber","_c","Round2","questionComponent","obstacleWord","hintWords","_c2","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/pages/User/Round2.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Play from \"../../layouts/Play\";\r\n\r\ninterface CrosswordQuestionBoxProps {\r\n    obstacleWord: string;\r\n    hintWords: string[];\r\n}\r\n\r\nconst crosswordData = {\r\n    mainWord: \"CHƯỚNGNGẠIVẬT\",\r\n    hints: [\r\n      { word: \"GIÓ\", position: { x: 0, y: 3 }, direction: \"horizontal\" },\r\n      { word: \"HẠTGIỐNG\", position: { x: 0, y: 0 }, direction: \"vertical\" },\r\n      { word: \"DREAM\", position: { x: 3, y: 0 }, direction: \"horizontal\" },\r\n      { word: \"THUỐC\", position: { x: 2, y: 3 }, direction: \"horizontal\" },\r\n      { word: \"CÚC\", position: { x: 5, y: 0 }, direction: \"vertical\" },\r\n      { word: \"CHÂUKIẾTLUẬN\", position: { x: 6, y: 0 }, direction: \"vertical\" },\r\n    ],\r\n    highlightedLetters: [\"C\", \"G\", \"N\", \"A\"],\r\n  };\r\n  \r\n  const Crossword = () => {\r\n    const gridSize = 15; // Adjust this based on the actual layout needed\r\n    const grid = Array.from({ length: gridSize }, () => Array(gridSize).fill(null));\r\n  \r\n    // Fill the grid with words\r\n    crosswordData.hints.forEach(({ word, position, direction }, index) => {\r\n      let { x, y } = position;\r\n      for (let i = 0; i < word.length; i++) {\r\n        grid[y][x] = { char: word[i], hintIndex: index + 1 };\r\n        if (direction === \"horizontal\") x++;\r\n        else y++;\r\n      }\r\n    });\r\n  \r\n    return (\r\n      <div className=\"flex flex-col items-center p-4 bg-black text-white\">\r\n        <div className=\"grid grid-cols-[repeat(15,1fr)] gap-1 border p-2\">\r\n          {grid.map((row, rowIndex) =>\r\n            row.map((cell, colIndex) => (\r\n              <div\r\n                key={`${rowIndex}-${colIndex}`}\r\n                className={`w-8 h-8 flex items-center justify-center border bg-white text-black font-bold relative ${\r\n                  cell?.char && crosswordData.highlightedLetters.includes(cell.char)\r\n                    ? \"text-red-500\"\r\n                    : \"\"\r\n                }`}\r\n              >\r\n                {cell?.char || \"\"}\r\n                {cell?.hintIndex && (\r\n                  <span className=\"absolute -top-2 -left-2 text-xs bg-blue-500 text-white px-1 rounded-full\">\r\n                    {cell.hintIndex}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nfunction Round2() {\r\n    return (\r\n        <Play\r\n            questionComponent={<Play questionComponent={<Crossword obstacleWord=\"BỒ CÔNG ANH\" hintWords={[\"GIÓ\", \"HẠTGIỐNG\", \"DREAM\", \"CHÂUKIỆTLUÂN\", \"THUỐC\", \"CÚC\"]} />} />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default Round2"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}