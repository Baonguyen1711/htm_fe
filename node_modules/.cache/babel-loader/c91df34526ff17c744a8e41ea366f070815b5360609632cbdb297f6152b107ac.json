{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\context\\\\authContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState, createContext, useContext } from \"react\";\n// Assuming this is your custom hook file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Create a context for Axios with Authentication\nconst AxiosAuthContext = /*#__PURE__*/createContext(null);\nexport const AxiosAuthProvider = ({\n  children\n}) => {\n  _s();\n  const [axiosInstance, setAxiosInstance] = useState(() => axios.create());\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(\"\");\n  const [authToken, setAuthToken] = useState(null);\n  const saveToken = token => {\n    setAuthToken(token);\n  };\n  const clearToken = () => {\n    setAuthToken(null);\n  };\n  useEffect(() => {\n    const initializeAxios = async () => {\n      const userToken = await (user === null || user === void 0 ? void 0 : user.getIdToken());\n      saveToken(userToken); // Fetch Bearer token from Firebase Auth\n      const newAxiosInstance = axios.create({\n        baseURL: \"http://localhost:8000\" // Replace with your API endpoint\n      });\n\n      // Add interceptor to include token in the Authorization header\n      newAxiosInstance.interceptors.request.use(config => {\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      }, error => {\n        console.error(\"Request error:\", error);\n        return Promise.reject(error);\n      });\n      setAxiosInstance(newAxiosInstance);\n    };\n    initializeAxios();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(AxiosAuthContext.Provider, {\n    value: {\n      axiosInstance,\n      token,\n      setToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use Axios with Bearer authentication\n_s(AxiosAuthProvider, \"uxWYI1kvn9m6zy0H9h7FjaZ7ynE=\");\n_c = AxiosAuthProvider;\nexport const useAxiosAuth = () => {\n  _s2();\n  return useContext(AxiosAuthContext);\n};\n_s2(useAxiosAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AxiosAuthProvider\");","map":{"version":3,"names":["axios","useEffect","useState","createContext","useContext","jsxDEV","_jsxDEV","AxiosAuthContext","AxiosAuthProvider","children","_s","axiosInstance","setAxiosInstance","create","user","setUser","token","setToken","authToken","setAuthToken","saveToken","clearToken","initializeAxios","userToken","getIdToken","newAxiosInstance","baseURL","interceptors","request","use","config","headers","Authorization","error","console","Promise","reject","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAxiosAuth","_s2","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/context/authContext.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState, createContext, useContext } from \"react\";\r\nimport useAuth from \"../hooks/useAuth\"; // Assuming this is your custom hook file\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  User,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\n\r\n// Create a context for Axios with Authentication\r\nconst AxiosAuthContext = createContext<any>(null);\r\n\r\nexport const AxiosAuthProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [axiosInstance, setAxiosInstance] = useState(() => axios.create());\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | undefined>(\"\")\r\n  const [authToken, setAuthToken] = useState<string | null>(null);\r\n\r\n  const saveToken = (token: string | undefined) => {\r\n    setAuthToken(token);\r\n  };\r\n\r\n  const clearToken = () => {\r\n    setAuthToken(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initializeAxios = async () => {\r\n      const userToken = await user?.getIdToken();\r\n      saveToken(userToken) // Fetch Bearer token from Firebase Auth\r\n      const newAxiosInstance = axios.create({\r\n        baseURL: \"http://localhost:8000\", // Replace with your API endpoint\r\n      });\r\n\r\n      // Add interceptor to include token in the Authorization header\r\n      newAxiosInstance.interceptors.request.use(\r\n        (config) => {\r\n          if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n          }\r\n          return config;\r\n        },\r\n        (error) => {\r\n          console.error(\"Request error:\", error);\r\n          return Promise.reject(error);\r\n        }\r\n      );\r\n\r\n      setAxiosInstance(newAxiosInstance);\r\n    };\r\n\r\n    initializeAxios();\r\n  }, [token]);\r\n\r\n  return (\r\n    <AxiosAuthContext.Provider value={{axiosInstance, token, setToken}}>\r\n      {children}\r\n    </AxiosAuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use Axios with Bearer authentication\r\nexport const useAxiosAuth = () => {\r\n  return useContext(AxiosAuthContext);\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAC9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASxC;AACA,MAAMC,gBAAgB,gBAAGJ,aAAa,CAAM,IAAI,CAAC;AAEjD,OAAO,MAAMK,iBAAiB,GAAGA,CAAC;EAAEC;AAAwC,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,MAAMF,KAAK,CAACa,MAAM,CAAC,CAAC,CAAC;EACxE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAqB,EAAE,CAAC;EAC1D,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAgB,IAAI,CAAC;EAE/D,MAAMkB,SAAS,GAAIJ,KAAyB,IAAK;IAC/CG,YAAY,CAACH,KAAK,CAAC;EACrB,CAAC;EAED,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvBF,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACd,MAAMqB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAMC,SAAS,GAAG,OAAMT,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,UAAU,CAAC,CAAC;MAC1CJ,SAAS,CAACG,SAAS,CAAC,EAAC;MACrB,MAAME,gBAAgB,GAAGzB,KAAK,CAACa,MAAM,CAAC;QACpCa,OAAO,EAAE,uBAAuB,CAAE;MACpC,CAAC,CAAC;;MAEF;MACAD,gBAAgB,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CACtCC,MAAM,IAAK;QACV,IAAId,KAAK,EAAE;UACTc,MAAM,CAACC,OAAO,CAACC,aAAa,GAAG,UAAUhB,KAAK,EAAE;QAClD;QACA,OAAOc,MAAM;MACf,CAAC,EACAG,KAAK,IAAK;QACTC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;QACtC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;MAC9B,CACF,CAAC;MAEDrB,gBAAgB,CAACa,gBAAgB,CAAC;IACpC,CAAC;IAEDH,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,oBACEV,OAAA,CAACC,gBAAgB,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAC3B,aAAa;MAAEK,KAAK;MAAEC;IAAQ,CAAE;IAAAR,QAAA,EAChEA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;;AAED;AAAAhC,EAAA,CAjDaF,iBAAiB;AAAAmC,EAAA,GAAjBnC,iBAAiB;AAkD9B,OAAO,MAAMoC,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAChC,OAAOzC,UAAU,CAACG,gBAAgB,CAAC;AACrC,CAAC;AAACsC,GAAA,CAFWD,YAAY;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}