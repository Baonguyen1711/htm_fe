{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\components\\\\HostAnswer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useHost } from '../context/hostContext';\nimport { usePlayer } from '../context/playerContext';\nimport { updateScore } from '../pages/Host/Management/service';\nimport { listenToBroadcastedAnswer } from '../services/firebaseServices';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HostAnswer() {\n  _s();\n  const {\n    playersArray,\n    playerFlashes,\n    roomId,\n    answerList,\n    setAnswerList\n  } = usePlayer();\n  const {\n    handleScoreAdjust,\n    playerScores,\n    triggerPlayerFlash\n  } = useHost();\n  useEffect(() => {\n    const unsubscribeBroadcastedAnswer = listenToBroadcastedAnswer(roomId, answerList => {\n      setAnswerList(answerList);\n      console.log(\"answerList\", answerList);\n    });\n    return () => {\n      unsubscribeBroadcastedAnswer();\n    };\n  }, [roomId]);\n  const spots = [1, 2, 3, 4];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        alert('Score Updated!');\n        updateScore(roomId, playerScores);\n      },\n      className: \"bg-green-500 text-white p-2 flex-1 rounded-md\",\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-around mt-4\",\n      children: spots.map(spotNumber => {\n        const storedPlayers = localStorage.getItem(\"playerList\");\n        const array = playersArray !== null ? playersArray : storedPlayers ? JSON.parse(storedPlayers) : [];\n        console.log(\"array\", array);\n        const player = array.find(p => parseInt(p.stt) === spotNumber);\n        if (player) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex flex-col items-center ${playerFlashes[spotNumber]}`,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: player.avatar,\n                alt: \"Player\",\n                className: \"w-16 h-16 rounded-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-white mt-2 \",\n                children: \"PlayerAnswer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-white mt-2 \",\n                children: playerScores[spotNumber - 1] ? playerScores[spotNumber - 1].score : \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-white\",\n                children: `player_${player.stt}: ${player.userName}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2 mt-2\",\n                children: [[10, 20, 30].map(amount => /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleScoreAdjust(spotNumber - 1, amount, true, player.userName, player.avatar),\n                  className: \"bg-green-500 text-white p-2 rounded-md\",\n                  children: [\"+\", amount]\n                }, amount, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 49\n                }, this)), [10, 20, 30].map(amount => /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleScoreAdjust(spotNumber - 1, -amount, false, player.userName, player.avatar),\n                  className: \"bg-red-500 text-white p-2 rounded-md\",\n                  children: [\"-\", amount]\n                }, -amount, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 49\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, this)]\n            }, spotNumber, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this)\n          }, void 0, false);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(HostAnswer, \"dBPd9pY1U5cBDcDJcdDIG1izvUg=\", false, function () {\n  return [usePlayer, useHost];\n});\n_c = HostAnswer;\nexport default HostAnswer;\nvar _c;\n$RefreshReg$(_c, \"HostAnswer\");","map":{"version":3,"names":["React","useEffect","useHost","usePlayer","updateScore","listenToBroadcastedAnswer","jsxDEV","_jsxDEV","Fragment","_Fragment","HostAnswer","_s","playersArray","playerFlashes","roomId","answerList","setAnswerList","handleScoreAdjust","playerScores","triggerPlayerFlash","unsubscribeBroadcastedAnswer","console","log","spots","children","onClick","alert","className","fileName","_jsxFileName","lineNumber","columnNumber","map","spotNumber","storedPlayers","localStorage","getItem","array","JSON","parse","player","find","p","parseInt","stt","src","avatar","alt","score","userName","amount","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/components/HostAnswer.tsx"],"sourcesContent":["import React, {useEffect} from 'react'\r\nimport { useHost } from '../context/hostContext';\r\nimport { usePlayer } from '../context/playerContext';\r\nimport { User } from '../type';\r\nimport { updateScore } from '../pages/Host/Management/service';\r\nimport { listenToBroadcastedAnswer } from '../services/firebaseServices';\r\n\r\nfunction HostAnswer() {\r\n    const { playersArray, playerFlashes, roomId, answerList, setAnswerList } = usePlayer()\r\n    const { handleScoreAdjust, playerScores,triggerPlayerFlash } = useHost()\r\n    useEffect(() => {\r\n            const unsubscribeBroadcastedAnswer = listenToBroadcastedAnswer(roomId, (answerList) => {\r\n                setAnswerList(answerList)\r\n                console.log(\"answerList\", answerList)\r\n            })\r\n    \r\n            return () => {\r\n                unsubscribeBroadcastedAnswer();\r\n            };\r\n        }, [roomId]);\r\n    const spots = [1, 2, 3, 4]\r\n    return (\r\n        <>\r\n            <button\r\n                onClick={() => {\r\n                    alert('Score Updated!')\r\n                    updateScore(roomId, playerScores)\r\n                }}\r\n                className=\"bg-green-500 text-white p-2 flex-1 rounded-md\"\r\n            >\r\n                Confirm\r\n            </button>\r\n            <div className=\"flex justify-around mt-4\">\r\n\r\n                {\r\n                    spots.map((spotNumber: number) => {\r\n\r\n                        const storedPlayers = localStorage.getItem(\"playerList\");\r\n                        const array = playersArray !== null\r\n                            ? playersArray\r\n                            : (storedPlayers ? JSON.parse(storedPlayers) : []);\r\n                        console.log(\"array\", array)\r\n                        const player = array.find((p: User) => parseInt(p.stt) === spotNumber);\r\n                        if (player) {\r\n                            return (\r\n                                <>\r\n\r\n                                    <div key={spotNumber} className={`flex flex-col items-center ${playerFlashes[spotNumber]}`}>\r\n                                        <img\r\n                                            src={player.avatar}\r\n                                            alt=\"Player\"\r\n                                            className=\"w-16 h-16 rounded-full\"\r\n                                        />\r\n                                        <p className=\"text-white mt-2 \">\r\n                                            PlayerAnswer\r\n                                        </p>\r\n                                        <p className=\"text-white mt-2 \">\r\n                                            {playerScores[spotNumber-1]?playerScores[spotNumber-1].score:\"0\"}\r\n                                        </p>\r\n                                        <p className=\"text-white\">{`player_${player.stt}: ${player.userName}`}</p>\r\n                                        <div className=\"flex gap-2 mt-2\">\r\n                                            {[10, 20, 30].map((amount) => (\r\n                                                <button\r\n                                                    key={amount}\r\n                                                    onClick={() => handleScoreAdjust(spotNumber-1, amount, true, player.userName, player.avatar)}\r\n                                                    className=\"bg-green-500 text-white p-2 rounded-md\"\r\n                                                >\r\n                                                    +{amount}\r\n                                                </button>\r\n                                            ))}\r\n                                            {[10, 20, 30].map((amount) => (\r\n                                                <button\r\n                                                    key={-amount}\r\n                                                    onClick={() => handleScoreAdjust(spotNumber-1, -amount, false, player.userName, player.avatar)}\r\n                                                    className=\"bg-red-500 text-white p-2 rounded-md\"\r\n                                                >\r\n                                                    -{amount}\r\n                                                </button>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                </>\r\n\r\n                            )\r\n                        }\r\n\r\n                    })\r\n                }\r\n                {/* {playersArray.map((player, index) => (\r\n                           \r\n                        ))} */}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HostAnswer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}