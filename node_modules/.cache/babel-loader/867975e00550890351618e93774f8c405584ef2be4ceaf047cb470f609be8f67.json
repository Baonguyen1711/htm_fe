{"ast":null,"code":"// src/services/firebaseService.ts\nimport { ref, onValue, set, database } from \"../firebase-config\";\n\n// Định nghĩa kiểu dữ liệu cho player và scores\n\n// Listen for real-time updates to players in a room\nexport const listenToPlayers = (roomId, callback) => {\n  const playersRef = ref(database, `rooms/${roomId}/players`);\n  const unsubscribe = onValue(playersRef, snapshot => {\n    const data = snapshot.val() || {};\n    callback(data);\n  });\n  return unsubscribe; // Trả về hàm unsubscribe để cleanup\n};\n\n// Listen for real-time updates to scores in a room\nexport const listenToScores = (roomId, callback) => {\n  const scoresRef = ref(database, `rooms/${roomId}/scores`);\n  const unsubscribe = onValue(scoresRef, snapshot => {\n    const data = snapshot.val() || {};\n    callback(data);\n  });\n  return unsubscribe;\n};\n\n// Add a user to the players list in a room\nexport const addPlayerToRoom = async (roomId, uid, playerData) => {\n  const playerRef = ref(database, `rooms/${roomId}/players/${uid}`);\n  await set(playerRef, {\n    joined_at: Date.now(),\n    data: playerData // e.g., { username: \"Player1\", points: 10 }\n  });\n};","map":{"version":3,"names":["ref","onValue","set","database","listenToPlayers","roomId","callback","playersRef","unsubscribe","snapshot","data","val","listenToScores","scoresRef","addPlayerToRoom","uid","playerData","playerRef","joined_at","Date","now"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/services/firebaseServices.ts"],"sourcesContent":["// src/services/firebaseService.ts\r\nimport { ref, onValue, set, database } from \"../firebase-config\"\r\nimport { DatabaseReference, Unsubscribe } from \"firebase/database\";\r\nimport { User } from \"../type\";\r\n\r\n// Định nghĩa kiểu dữ liệu cho player và scores\r\ninterface PlayerData {\r\n  username: string;\r\n  points: number;\r\n  [key: string]: any; // Cho phép các thuộc tính bổ sung\r\n}\r\n\r\ninterface Player {\r\n  joined_at: number;\r\n  data: PlayerData;\r\n}\r\n\r\ninterface Players {\r\n  [uid: string]: Player;\r\n}\r\n\r\ninterface Scores {\r\n  [uid: string]: number;\r\n}\r\n\r\n// Listen for real-time updates to players in a room\r\nexport const listenToPlayers = (roomId: string, callback: (data: User) => void): Unsubscribe => {\r\n  const playersRef: DatabaseReference = ref(database, `rooms/${roomId}/players`);\r\n  const unsubscribe: Unsubscribe = onValue(playersRef, (snapshot) => {\r\n    const data: User = snapshot.val() || {};\r\n    callback(data);\r\n  });\r\n  return unsubscribe; // Trả về hàm unsubscribe để cleanup\r\n};\r\n\r\n// Listen for real-time updates to scores in a room\r\nexport const listenToScores = (roomId: string, callback: (data: Scores) => void): Unsubscribe => {\r\n  const scoresRef: DatabaseReference = ref(database, `rooms/${roomId}/scores`);\r\n  const unsubscribe: Unsubscribe = onValue(scoresRef, (snapshot) => {\r\n    const data: Scores = snapshot.val() || {};\r\n    callback(data);\r\n  });\r\n  return unsubscribe;\r\n};\r\n\r\n// Add a user to the players list in a room\r\nexport const addPlayerToRoom = async (roomId: string, uid: string, playerData: PlayerData): Promise<void> => {\r\n  const playerRef: DatabaseReference = ref(database, `rooms/${roomId}/players/${uid}`);\r\n  await set(playerRef, {\r\n    joined_at: Date.now(),\r\n    data: playerData, // e.g., { username: \"Player1\", points: 10 }\r\n  });\r\n};"],"mappings":"AAAA;AACA,SAASA,GAAG,EAAEC,OAAO,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,oBAAoB;;AAIhE;;AAoBA;AACA,OAAO,MAAMC,eAAe,GAAGA,CAACC,MAAc,EAAEC,QAA8B,KAAkB;EAC9F,MAAMC,UAA6B,GAAGP,GAAG,CAACG,QAAQ,EAAE,SAASE,MAAM,UAAU,CAAC;EAC9E,MAAMG,WAAwB,GAAGP,OAAO,CAACM,UAAU,EAAGE,QAAQ,IAAK;IACjE,MAAMC,IAAU,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;IACvCL,QAAQ,CAACI,IAAI,CAAC;EAChB,CAAC,CAAC;EACF,OAAOF,WAAW,CAAC,CAAC;AACtB,CAAC;;AAED;AACA,OAAO,MAAMI,cAAc,GAAGA,CAACP,MAAc,EAAEC,QAAgC,KAAkB;EAC/F,MAAMO,SAA4B,GAAGb,GAAG,CAACG,QAAQ,EAAE,SAASE,MAAM,SAAS,CAAC;EAC5E,MAAMG,WAAwB,GAAGP,OAAO,CAACY,SAAS,EAAGJ,QAAQ,IAAK;IAChE,MAAMC,IAAY,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;IACzCL,QAAQ,CAACI,IAAI,CAAC;EAChB,CAAC,CAAC;EACF,OAAOF,WAAW;AACpB,CAAC;;AAED;AACA,OAAO,MAAMM,eAAe,GAAG,MAAAA,CAAOT,MAAc,EAAEU,GAAW,EAAEC,UAAsB,KAAoB;EAC3G,MAAMC,SAA4B,GAAGjB,GAAG,CAACG,QAAQ,EAAE,SAASE,MAAM,YAAYU,GAAG,EAAE,CAAC;EACpF,MAAMb,GAAG,CAACe,SAAS,EAAE;IACnBC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;IACrBV,IAAI,EAAEM,UAAU,CAAE;EACpB,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}