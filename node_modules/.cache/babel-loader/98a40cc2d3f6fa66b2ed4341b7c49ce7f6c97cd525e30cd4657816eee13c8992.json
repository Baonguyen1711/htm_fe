{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\layouts\\\\RoundBase\\\\Round2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { renderGrid } from \"./utils\";\nimport { usePlayer } from \"../../context/playerContext\";\nimport { setSelectedRow } from \"../../components/services\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mainKeyword = \"BÒCÔNGANH\";\nconst QuestionBoxRound2 = ({\n  obstacleWord = mainKeyword,\n  hintWordArray,\n  initialGrid,\n  isHost = false\n}) => {\n  _s();\n  console.log(\"hintWordArray\", typeof hintWordArray);\n  console.log(\"obstacle\", obstacleWord);\n  const [searchParams] = useSearchParams();\n  const {\n    setInitialGrid\n  } = usePlayer();\n  const roomId = searchParams.get(\"roomId\") || \"\";\n  const GRID_SIZE = 20;\n  const generateEmptyGrid = () => {\n    return Array(GRID_SIZE).fill(null).map(() => Array(GRID_SIZE).fill(\"\"));\n  };\n  const [grid, setGrid] = useState(generateEmptyGrid());\n  const [revealedRows, setRevealedRows] = useState(Array(GRID_SIZE).fill(false));\n  const [revealedCols, setRevealedCols] = useState(Array(GRID_SIZE).fill(false));\n  const [hintWords, setHintWords] = useState([]);\n  const [cellStyles, setCellStyles] = useState({}); // Tracks background styles\n  const [menu, setMenu] = useState({\n    visible: false\n  });\n  const menuRef = useRef(null);\n\n  // Initialize grid\n  useEffect(() => {\n    if (isHost) {\n      const wordList = [\"GIÓ\", \"HẠTGIỐNG\", \"DREAM\", \"THUỐC\", \"CÚC\", \"CHÂUKIỆTLUÂN\"];\n      console.log(\"wordList\", wordList);\n      console.log(\"hintWordArray\", hintWordArray);\n      if (hintWordArray && obstacleWord) {\n        const {\n          randomHintWords,\n          newGrid\n        } = renderGrid(hintWordArray, obstacleWord, GRID_SIZE);\n        console.log(\"randomHintWords\", randomHintWords);\n        console.log(\"newGrid\", newGrid);\n        setHintWords(randomHintWords);\n        setInitialGrid(newGrid);\n        setGrid(newGrid);\n      }\n    } else {\n      if (initialGrid) {\n        setGrid(initialGrid);\n      }\n    }\n  }, [isHost, hintWordArray, obstacleWord, initialGrid, setInitialGrid]);\n\n  // Host: Toggle row\n  const toggleRow = rowIndex => {\n    if (!isHost) return;\n    setRevealedRows(prev => {\n      const newRevealed = [...prev];\n      newRevealed[rowIndex] = !newRevealed[rowIndex];\n      return newRevealed;\n    });\n    setSelectedRow(roomId, rowIndex.toString());\n  };\n\n  // Host: Toggle column\n  const toggleCol = colIndex => {\n    if (!isHost) return;\n    setRevealedCols(prev => {\n      const newRevealed = [...prev];\n      newRevealed[colIndex] = !newRevealed[colIndex];\n      return newRevealed;\n    });\n    setSelectedRow(roomId, colIndex.toString());\n  };\n\n  // Host: Handle number click to show menu\n  const handleNumberClick = (rowIndex, colIndex) => {\n    if (!isHost) return;\n    setMenu({\n      visible: true,\n      rowIndex,\n      colIndex\n    });\n  };\n\n  // Host: Handle menu actions\n  const handleMenuAction = (action, rowIndex, colIndex) => {\n    const isRow = hintWords.some(word => word.y === rowIndex && word.direction === \"horizontal\");\n    if (action === \"open\") {\n      if (isRow) {\n        toggleRow(rowIndex);\n        // Set row cells to yellow\n        setCellStyles(prev => {\n          const newStyles = {\n            ...prev\n          };\n          for (let col = 0; col < GRID_SIZE; col++) {\n            newStyles[`${rowIndex}-${col}`] = \"bg-yellow-200\";\n          }\n          return newStyles;\n        });\n      } else {\n        toggleCol(colIndex);\n        // Set column cells to yellow\n        setCellStyles(prev => {\n          const newStyles = {\n            ...prev\n          };\n          for (let row = 0; row < GRID_SIZE; row++) {\n            newStyles[`${row}-${colIndex}`] = \"bg-yellow-200\";\n          }\n          return newStyles;\n        });\n      }\n    } else if (action === \"correct\") {\n      if (isRow) {\n        toggleRow(rowIndex); // Reveal row\n      } else {\n        toggleCol(colIndex); // Reveal column\n      }\n    } else if (action === \"incorrect\") {\n      if (isRow) {\n        // Set row cells to grey\n        setCellStyles(prev => {\n          const newStyles = {\n            ...prev\n          };\n          for (let col = 0; col < GRID_SIZE; col++) {\n            newStyles[`${rowIndex}-${col}`] = \"bg-gray-400\";\n          }\n          return newStyles;\n        });\n      } else {\n        // Set column cells to grey\n        setCellStyles(prev => {\n          const newStyles = {\n            ...prev\n          };\n          for (let row = 0; row < GRID_SIZE; row++) {\n            newStyles[`${row}-${colIndex}`] = \"bg-gray-400\";\n          }\n          return newStyles;\n        });\n      }\n    }\n    setMenu({\n      visible: false\n    });\n  };\n\n  // Close menu on outside click\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenu({\n          visible: false\n        });\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center bg-white rounded-lg shadow-md p-6 relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-700 text-xl font-semibold text-center mb-4 max-w-[90%]\",\n      children: \"Trong c\\xE1c gi\\u1EA3i \\u0111\\u1EA5u th\\u1EC3 thao, nh\\u1EEFng \\u0111\\u1ED9i hay v\\u1EADn \\u0111\\u1ED9ng vi\\xEAn m\\u1EA1nh s\\u1EBD \\u0111\\u01B0\\u1EE3c x\\u1EBFp v\\xE0o c\\xF9ng m\\u1ED9t ho\\u1EB7c nhi\\u1EC1u nh\\xF3m trong khi b\\u1ED1c th\\u0103m \\u0111\\u1EC3 tr\\xE1nh vi\\u1EC7c g\\u1EB7p nhau s\\u1EDBm. T\\xEAn g\\u1ECDi chung c\\u1EE7a c\\xE1c nh\\xF3m v\\u1EADn \\u0111\\u1ED9ng vi\\xEAn n\\xE0y l\\xE0 g\\xEC?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-[repeat(20,40px)] grid-rows-[repeat(20,40px)] gap-1 max-h-[400px] overflow-y-scroll\",\n      children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: row.map((cell, colIndex) => {\n          const isRevealed = revealedRows[rowIndex] && hintWords.some(word => word.y === rowIndex && word.direction === \"horizontal\") || revealedCols[colIndex] && hintWords.some(word => word.x === colIndex && word.direction === \"vertical\");\n          const cellKey = `${rowIndex}-${colIndex}`;\n          const cellBg = cellStyles[cellKey] || (cell === \"\" ? \"bg-white\" : \"bg-gray-50\");\n          const showMenu = menu.visible && menu.rowIndex === rowIndex && menu.colIndex === colIndex && cell.includes(\"number\");\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-10 h-10 flex items-center justify-center text-lg font-semibold select-none \n                        ${cell.includes(\"number\") ? \"text-blue-500 border-none\" : \"\"}\n                        ${cellBg}\n                        ${!cell.includes(\"number\") && isRevealed && obstacleWord && !obstacleWord.includes(cell) ? \"text-black\" : !cell.includes(\"number\") ? \"text-transparent\" : \"\"}\n                        ${obstacleWord !== null && obstacleWord !== void 0 && obstacleWord.includes(cell) && isRevealed && isNaN(Number(cell)) ? \"font-bold text-red-500\" : \"\"}`,\n              onClick: () => {\n                if (isHost) {\n                  if (cell.includes(\"number\")) {\n                    handleNumberClick(rowIndex, colIndex);\n                  } else if (hintWords.some(word => word.y === rowIndex && word.direction === \"horizontal\")) {\n                    toggleRow(rowIndex);\n                  } else if (hintWords.some(word => word.x === colIndex && word.direction === \"vertical\")) {\n                    toggleCol(colIndex);\n                  }\n                }\n              },\n              style: {\n                cursor: isHost && (cell.includes(\"number\") || hintWords.some(word => word.y === rowIndex || word.x === colIndex)) ? \"pointer\" : \"default\"\n              },\n              children: cell.includes(\"number\") ? cell.replace(\"number\", \"\").trim() : cell\n            }, colIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 21\n            }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: menuRef,\n              className: \"absolute left-12 top-1/2 transform -translate-y-1/2 flex space-x-2 bg-white border border-gray-300 rounded shadow-lg p-1 z-10\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"px-2 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600\",\n                onClick: () => handleMenuAction(\"open\", rowIndex, colIndex),\n                children: \"Open\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"px-2 py-1 text-sm bg-green-500 text-white rounded hover:bg-green-600\",\n                onClick: () => handleMenuAction(\"correct\", rowIndex, colIndex),\n                children: \"Correct\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"px-2 py-1 text-sm bg-red-500 text-white rounded hover:bg-red-600\",\n                onClick: () => handleMenuAction(\"incorrect\", rowIndex, colIndex),\n                children: \"Incorrect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, this);\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionBoxRound2, \"+D/NFZyDceSGslHQzTu0sMyHvjI=\", false, function () {\n  return [useSearchParams, usePlayer];\n});\n_c = QuestionBoxRound2;\nexport default QuestionBoxRound2;\nvar _c;\n$RefreshReg$(_c, \"QuestionBoxRound2\");","map":{"version":3,"names":["React","useState","useEffect","useRef","renderGrid","usePlayer","setSelectedRow","useSearchParams","jsxDEV","_jsxDEV","mainKeyword","QuestionBoxRound2","obstacleWord","hintWordArray","initialGrid","isHost","_s","console","log","searchParams","setInitialGrid","roomId","get","GRID_SIZE","generateEmptyGrid","Array","fill","map","grid","setGrid","revealedRows","setRevealedRows","revealedCols","setRevealedCols","hintWords","setHintWords","cellStyles","setCellStyles","menu","setMenu","visible","menuRef","wordList","randomHintWords","newGrid","toggleRow","rowIndex","prev","newRevealed","toString","toggleCol","colIndex","handleNumberClick","handleMenuAction","action","isRow","some","word","y","direction","newStyles","col","row","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","cell","isRevealed","x","cellKey","cellBg","showMenu","includes","isNaN","Number","onClick","style","cursor","replace","trim","ref","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/layouts/RoundBase/Round2.tsx"],"sourcesContent":["    import Play from \"../Play\";\r\n    import React, { useState, useEffect, useRef } from \"react\";\r\n    import { renderGrid } from \"./utils\";\r\n    import { RoundBase } from \"../../type\";\r\n    import { useHost } from \"../../context/hostContext\";\r\n    import { usePlayer } from \"../../context/playerContext\";\r\n    import { setSelectedRow } from \"../../components/services\";\r\n    import { useSearchParams } from \"react-router-dom\";\r\n\r\n    interface HintWord {\r\n    word: string;\r\n    x: number;\r\n    y: number;\r\n    direction: \"horizontal\" | \"vertical\";\r\n    }\r\n\r\n    interface ObstacleQuestionBoxProps {\r\n    obstacleWord?: string;\r\n    hintWordArray?: string[];\r\n    isHost?: boolean;\r\n    initialGrid?: string[][];\r\n    }\r\n\r\n    const mainKeyword = \"BÒCÔNGANH\";\r\n\r\n    const QuestionBoxRound2: React.FC<ObstacleQuestionBoxProps> = ({\r\n    obstacleWord = mainKeyword,\r\n    hintWordArray,\r\n    initialGrid,\r\n    isHost = false,\r\n    }) => {\r\n    console.log(\"hintWordArray\", typeof hintWordArray);\r\n    console.log(\"obstacle\", obstacleWord);\r\n\r\n    const [searchParams] = useSearchParams();\r\n    const { setInitialGrid } = usePlayer();\r\n    const roomId = searchParams.get(\"roomId\") || \"\";\r\n    const GRID_SIZE = 20;\r\n\r\n    const generateEmptyGrid = () => {\r\n        return Array(GRID_SIZE)\r\n        .fill(null)\r\n        .map(() => Array(GRID_SIZE).fill(\"\"));\r\n    };\r\n\r\n    const [grid, setGrid] = useState<string[][]>(generateEmptyGrid());\r\n    const [revealedRows, setRevealedRows] = useState<boolean[]>(Array(GRID_SIZE).fill(false));\r\n    const [revealedCols, setRevealedCols] = useState<boolean[]>(Array(GRID_SIZE).fill(false));\r\n    const [hintWords, setHintWords] = useState<HintWord[]>([]);\r\n    const [cellStyles, setCellStyles] = useState<Record<string, string>>({}); // Tracks background styles\r\n    const [menu, setMenu] = useState<{\r\n        visible: boolean;\r\n        rowIndex?: number;\r\n        colIndex?: number;\r\n    }>({ visible: false });\r\n\r\n    const menuRef = useRef<HTMLDivElement>(null);\r\n\r\n    // Initialize grid\r\n    useEffect(() => {\r\n        if (isHost) {\r\n        const wordList = [\"GIÓ\", \"HẠTGIỐNG\", \"DREAM\", \"THUỐC\", \"CÚC\", \"CHÂUKIỆTLUÂN\"];\r\n        console.log(\"wordList\", wordList);\r\n        console.log(\"hintWordArray\", hintWordArray);\r\n        if (hintWordArray && obstacleWord) {\r\n            const { randomHintWords, newGrid } = renderGrid(hintWordArray, obstacleWord, GRID_SIZE);\r\n            console.log(\"randomHintWords\", randomHintWords);\r\n            console.log(\"newGrid\", newGrid);\r\n            setHintWords(randomHintWords);\r\n            setInitialGrid(newGrid);\r\n            setGrid(newGrid);\r\n        }\r\n        } else {\r\n        if (initialGrid) {\r\n            setGrid(initialGrid);\r\n        }\r\n        }\r\n    }, [isHost, hintWordArray, obstacleWord, initialGrid, setInitialGrid]);\r\n\r\n    // Host: Toggle row\r\n    const toggleRow = (rowIndex: number) => {\r\n        if (!isHost) return;\r\n        setRevealedRows((prev) => {\r\n        const newRevealed = [...prev];\r\n        newRevealed[rowIndex] = !newRevealed[rowIndex];\r\n        return newRevealed;\r\n        });\r\n        setSelectedRow(roomId, rowIndex.toString());\r\n    };\r\n\r\n    // Host: Toggle column\r\n    const toggleCol = (colIndex: number) => {\r\n        if (!isHost) return;\r\n        setRevealedCols((prev) => {\r\n        const newRevealed = [...prev];\r\n        newRevealed[colIndex] = !newRevealed[colIndex];\r\n        return newRevealed;\r\n        });\r\n        setSelectedRow(roomId, colIndex.toString());\r\n    };\r\n\r\n    // Host: Handle number click to show menu\r\n    const handleNumberClick = (rowIndex: number, colIndex: number) => {\r\n        if (!isHost) return;\r\n        setMenu({\r\n        visible: true,\r\n        rowIndex,\r\n        colIndex,\r\n        });\r\n    };\r\n\r\n    // Host: Handle menu actions\r\n    const handleMenuAction = (action: \"open\" | \"correct\" | \"incorrect\", rowIndex: number, colIndex: number) => {\r\n        const isRow = hintWords.some(\r\n        (word) => word.y === rowIndex && word.direction === \"horizontal\"\r\n        );\r\n        if (action === \"open\") {\r\n        if (isRow) {\r\n            toggleRow(rowIndex);\r\n            // Set row cells to yellow\r\n            setCellStyles((prev) => {\r\n            const newStyles = { ...prev };\r\n            for (let col = 0; col < GRID_SIZE; col++) {\r\n                newStyles[`${rowIndex}-${col}`] = \"bg-yellow-200\";\r\n            }\r\n            return newStyles;\r\n            });\r\n        } else {\r\n            toggleCol(colIndex);\r\n            // Set column cells to yellow\r\n            setCellStyles((prev) => {\r\n            const newStyles = { ...prev };\r\n            for (let row = 0; row < GRID_SIZE; row++) {\r\n                newStyles[`${row}-${colIndex}`] = \"bg-yellow-200\";\r\n            }\r\n            return newStyles;\r\n            });\r\n        }\r\n        } else if (action === \"correct\") {\r\n        if (isRow) {\r\n            toggleRow(rowIndex); // Reveal row\r\n        } else {\r\n            toggleCol(colIndex); // Reveal column\r\n        }\r\n        } else if (action === \"incorrect\") {\r\n        if (isRow) {\r\n            // Set row cells to grey\r\n            setCellStyles((prev) => {\r\n            const newStyles = { ...prev };\r\n            for (let col = 0; col < GRID_SIZE; col++) {\r\n                newStyles[`${rowIndex}-${col}`] = \"bg-gray-400\";\r\n            }\r\n            return newStyles;\r\n            });\r\n        } else {\r\n            // Set column cells to grey\r\n            setCellStyles((prev) => {\r\n            const newStyles = { ...prev };\r\n            for (let row = 0; row < GRID_SIZE; row++) {\r\n                newStyles[`${row}-${colIndex}`] = \"bg-gray-400\";\r\n            }\r\n            return newStyles;\r\n            });\r\n        }\r\n        }\r\n        setMenu({ visible: false });\r\n    };\r\n\r\n    // Close menu on outside click\r\n    useEffect(() => {\r\n        const handleClickOutside = (event: MouseEvent) => {\r\n        if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\r\n            setMenu({ visible: false });\r\n        }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center bg-white rounded-lg shadow-md p-6 relative\">\r\n        <div className=\"text-gray-700 text-xl font-semibold text-center mb-4 max-w-[90%]\">\r\n            Trong các giải đấu thể thao, những đội hay vận động viên mạnh sẽ được xếp vào cùng một hoặc nhiều nhóm trong khi bốc thăm để tránh việc gặp nhau sớm. Tên gọi chung của các nhóm vận động viên này là gì?\r\n        </div>\r\n        <div className=\"grid grid-cols-[repeat(20,40px)] grid-rows-[repeat(20,40px)] gap-1 max-h-[400px] overflow-y-scroll\">\r\n            {grid.map((row, rowIndex) => (\r\n            <React.Fragment key={rowIndex}>\r\n                {row.map((cell, colIndex) => {\r\n                const isRevealed =\r\n                    (revealedRows[rowIndex] &&\r\n                    hintWords.some(\r\n                        (word) => word.y === rowIndex && word.direction === \"horizontal\"\r\n                    )) ||\r\n                    (revealedCols[colIndex] &&\r\n                    hintWords.some(\r\n                        (word) => word.x === colIndex && word.direction === \"vertical\"\r\n                    ));\r\n\r\n                const cellKey = `${rowIndex}-${colIndex}`;\r\n                const cellBg = cellStyles[cellKey] || (cell === \"\" ? \"bg-white\" : \"bg-gray-50\");\r\n\r\n                const showMenu =\r\n                    menu.visible &&\r\n                    menu.rowIndex === rowIndex &&\r\n                    menu.colIndex === colIndex &&\r\n                    cell.includes(\"number\");\r\n\r\n                return (\r\n                    <div className=\"relative flex items-center\">\r\n                    <div\r\n                        key={colIndex}\r\n                        className={`w-10 h-10 flex items-center justify-center text-lg font-semibold select-none \r\n                        ${cell.includes(\"number\") ? \"text-blue-500 border-none\" : \"\"}\r\n                        ${cellBg}\r\n                        ${\r\n                            !cell.includes(\"number\") &&\r\n                            isRevealed &&\r\n                            obstacleWord &&\r\n                            !obstacleWord.includes(cell)\r\n                            ? \"text-black\"\r\n                            : !cell.includes(\"number\")\r\n                            ? \"text-transparent\"\r\n                            : \"\"\r\n                        }\r\n                        ${\r\n                            obstacleWord?.includes(cell) && isRevealed && isNaN(Number(cell))\r\n                            ? \"font-bold text-red-500\"\r\n                            : \"\"\r\n                        }`}\r\n                        onClick={() => {\r\n                        if (isHost) {\r\n                            if (cell.includes(\"number\")) {\r\n                            handleNumberClick(rowIndex, colIndex);\r\n                            } else if (\r\n                            hintWords.some(\r\n                                (word) => word.y === rowIndex && word.direction === \"horizontal\"\r\n                            )\r\n                            ) {\r\n                            toggleRow(rowIndex);\r\n                            } else if (\r\n                            hintWords.some(\r\n                                (word) => word.x === colIndex && word.direction === \"vertical\"\r\n                            )\r\n                            ) {\r\n                            toggleCol(colIndex);\r\n                            }\r\n                        }\r\n                        }}\r\n                        style={{\r\n                        cursor:\r\n                            isHost &&\r\n                            (cell.includes(\"number\") ||\r\n                            hintWords.some(\r\n                                (word) => word.y === rowIndex || word.x === colIndex\r\n                            ))\r\n                            ? \"pointer\"\r\n                            : \"default\",\r\n                        }}\r\n                    >\r\n                        {cell.includes(\"number\") ? cell.replace(\"number\", \"\").trim() : cell}\r\n                    </div>\r\n                    {showMenu && (\r\n                        <div\r\n                        ref={menuRef}\r\n                        className=\"absolute left-12 top-1/2 transform -translate-y-1/2 flex space-x-2 bg-white border border-gray-300 rounded shadow-lg p-1 z-10\"\r\n                        >\r\n                        <button\r\n                            className=\"px-2 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n                            onClick={() => handleMenuAction(\"open\", rowIndex, colIndex)}\r\n                        >\r\n                            Open\r\n                        </button>\r\n                        <button\r\n                            className=\"px-2 py-1 text-sm bg-green-500 text-white rounded hover:bg-green-600\"\r\n                            onClick={() => handleMenuAction(\"correct\", rowIndex, colIndex)}\r\n                        >\r\n                            Correct\r\n                        </button>\r\n                        <button\r\n                            className=\"px-2 py-1 text-sm bg-red-500 text-white rounded hover:bg-red-600\"\r\n                            onClick={() => handleMenuAction(\"incorrect\", rowIndex, colIndex)}\r\n                        >\r\n                            Incorrect\r\n                        </button>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                );\r\n                })}\r\n            </React.Fragment>\r\n            ))}\r\n        </div>\r\n        </div>\r\n    );\r\n    };\r\n\r\n    export default QuestionBoxRound2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}