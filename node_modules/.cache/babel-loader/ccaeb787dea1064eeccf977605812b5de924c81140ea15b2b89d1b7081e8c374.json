{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\routes\\\\ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\nimport authService from '../services/auth.service';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst routeRoleMap = {\n  '/host': 'host',\n  '/play': 'player',\n  '/spectator': 'spectator'\n};\nconst AccessDeniedModal = ({\n  onClose,\n  message\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"fixed inset-0 flex items-center justify-center bg-black/50 backdrop-blur-sm z-50\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-slate-800/90 border border-red-400/50 rounded-xl p-8 shadow-2xl max-w-md w-full mx-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-4xl mb-4\",\n        children: \"\\uD83D\\uDEAB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-semibold text-white mb-4\",\n        children: \"Access Denied\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-200/70 mb-6\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"bg-gradient-to-r from-red-600 to-orange-600 text-white px-6 py-3 rounded-lg hover:from-red-700 hover:to-orange-700 font-medium transition-colors duration-300 shadow-lg hover:shadow-red-600/30\",\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 5\n}, this);\n_c = AccessDeniedModal;\nconst ProtectedRoute = ({\n  element,\n  requireAccessToken = false,\n  requireHost = false\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [modalMessage, setModalMessage] = useState(\"You don't have permission to access this route.\");\n  const [isVerified, setIsVerified] = useState(false);\n  const [params] = useSearchParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const roomId = params.get(\"roomId\") || \"\";\n  useEffect(() => {\n    const verify = async () => {\n      if (requireAccessToken) {\n        const accessToken = localStorage.getItem('accessToken');\n        if (!accessToken) {\n          setModalMessage('No access token found. Please log in.');\n          setShowModal(true);\n          return;\n        }\n        try {\n          const response = await axios.post(`http://localhost:8000/api/auth/verify`, {}, {\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${accessToken}`\n            }\n          });\n          const payload = response.data;\n          if (!payload) {\n            setModalMessage('Invalid token payload.');\n            setShowModal(true);\n            return;\n          }\n          const requiredRole = routeRoleMap[`/${location.pathname.split('/')[1]}`];\n          console.log(\"payload room Id\", payload.roomId);\n          console.log(\"roomId\", roomId);\n          if (!requiredRole || payload.role !== requiredRole || payload.roomId !== roomId) {\n            setModalMessage(\"You don't have the right role to access this route.\");\n            setShowModal(true);\n            return;\n          }\n          if (payload.roomId !== roomId) {\n            setModalMessage(\"You don't have the host right to this room Id.\");\n            setShowModal(true);\n            return;\n          }\n          const currentTime = Date.now() / 1000;\n          if (payload.exp < currentTime) {\n            setModalMessage('Your session has expired. Please log in again.');\n            setShowModal(true);\n            return;\n          }\n          setIsVerified(true);\n        } catch (error) {\n          console.error('Error verifying access token:', error);\n          setModalMessage('Failed to verify access token. Please try again.');\n          setShowModal(true);\n        }\n      } else if (requireHost) {\n        // Example: check Firebase user info (maybe from localStorage or a backend API)\n        const response = await authService.isHost({});\n        console.log(\"response.data\", response);\n        if (!response) {\n          setModalMessage(\"You don't have the right role to access this route.\");\n          setShowModal(true);\n          return;\n        }\n        setIsVerified(true);\n      } else {\n        // No protection required (optional)\n        setIsVerified(true);\n      }\n    };\n    verify();\n  }, [location.pathname, requireAccessToken, requireHost]);\n  const handleCloseModal = () => {\n    setShowModal(false);\n    navigate(-1);\n  };\n  if (showModal) {\n    return /*#__PURE__*/_jsxDEV(AccessDeniedModal, {\n      onClose: handleCloseModal,\n      message: modalMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 16\n    }, this);\n  }\n  if (!isVerified) {\n    return null; // or <LoadingSpinner />\n  }\n  return element;\n};\n_s(ProtectedRoute, \"yb6pFCMprGEuOY/wEz+f1ZZare4=\", false, function () {\n  return [useSearchParams, useLocation, useNavigate];\n});\n_c2 = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c, _c2;\n$RefreshReg$(_c, \"AccessDeniedModal\");\n$RefreshReg$(_c2, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","useSearchParams","authService","axios","jsxDEV","_jsxDEV","routeRoleMap","AccessDeniedModal","onClose","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","ProtectedRoute","element","requireAccessToken","requireHost","_s","showModal","setShowModal","modalMessage","setModalMessage","isVerified","setIsVerified","params","location","navigate","roomId","get","verify","accessToken","localStorage","getItem","response","post","headers","payload","data","requiredRole","pathname","split","console","log","role","currentTime","Date","now","exp","error","isHost","handleCloseModal","_c2","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/routes/ProtectedRoute.tsx"],"sourcesContent":["import React, { ReactNode, useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport authService from '../services/auth.service';\r\nimport axios from 'axios';\r\n\r\ninterface VerifyResponse {\r\n\r\n    roomId: string;\r\n    role: 'host' | 'player' | 'spectator';\r\n    userId: string;\r\n    exp: number;\r\n\r\n}\r\n\r\nconst routeRoleMap: { [key: string]: 'host' | 'player' | 'spectator' } = {\r\n    '/host': 'host',\r\n    '/play': 'player',\r\n    '/spectator': 'spectator',\r\n};\r\n\r\nconst AccessDeniedModal: React.FC<{ onClose: () => void; message: string }> = ({ onClose, message }) => (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black/50 backdrop-blur-sm z-50\">\r\n        <div className=\"bg-slate-800/90 border border-red-400/50 rounded-xl p-8 shadow-2xl max-w-md w-full mx-4\">\r\n            <div className=\"text-center\">\r\n                <div className=\"text-4xl mb-4\">ðŸš«</div>\r\n                <h3 className=\"text-2xl font-semibold text-white mb-4\">Access Denied</h3>\r\n                <p className=\"text-red-200/70 mb-6\">{message}</p>\r\n                <button\r\n                    onClick={onClose}\r\n                    className=\"bg-gradient-to-r from-red-600 to-orange-600 text-white px-6 py-3 rounded-lg hover:from-red-700 hover:to-orange-700 font-medium transition-colors duration-300 shadow-lg hover:shadow-red-600/30\"\r\n                >\r\n                    Go Back\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst ProtectedRoute: React.FC<{ element: ReactNode, requireAccessToken?: boolean, requireHost?: boolean }> = ({\r\n    element, requireAccessToken = false, requireHost = false\r\n}) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalMessage, setModalMessage] = useState(\"You don't have permission to access this route.\");\r\n    const [isVerified, setIsVerified] = useState(false);\r\n    const [params] = useSearchParams()\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const roomId = params.get(\"roomId\") || \"\"\r\n    useEffect(() => {\r\n        const verify = async () => {\r\n            if (requireAccessToken) {\r\n                const accessToken = localStorage.getItem('accessToken');\r\n                if (!accessToken) {\r\n                    setModalMessage('No access token found. Please log in.');\r\n                    setShowModal(true);\r\n                    return;\r\n                }\r\n\r\n                try {\r\n                    const response = await axios.post<VerifyResponse>(\r\n                        `http://localhost:8000/api/auth/verify`,\r\n                        {},\r\n                        {\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                                'Authorization': `Bearer ${accessToken}`,\r\n                            },\r\n                        }\r\n                    );\r\n\r\n                    const payload = response.data;\r\n                    if (!payload) {\r\n                        setModalMessage('Invalid token payload.');\r\n                        setShowModal(true);\r\n                        return;\r\n                    }\r\n\r\n                    const requiredRole = routeRoleMap[`/${location.pathname.split('/')[1]}`];\r\n                    console.log(\"payload room Id\", payload.roomId);\r\n                    console.log(\"roomId\", roomId);\r\n                    \r\n                    \r\n\r\n                    if (!requiredRole || payload.role !== requiredRole || payload.roomId !== roomId) {\r\n                        setModalMessage(\"You don't have the right role to access this route.\");\r\n                        setShowModal(true);\r\n                        return;\r\n                    }\r\n\r\n                    if (payload.roomId !== roomId) {\r\n                        setModalMessage(\"You don't have the host right to this room Id.\");\r\n                        setShowModal(true);\r\n                        return;\r\n                    }\r\n\r\n                    const currentTime = Date.now() / 1000;\r\n                    if (payload.exp < currentTime) {\r\n                        setModalMessage('Your session has expired. Please log in again.');\r\n                        setShowModal(true);\r\n                        return;\r\n                    }\r\n\r\n                    setIsVerified(true);\r\n                } catch (error) {\r\n                    console.error('Error verifying access token:', error);\r\n                    setModalMessage('Failed to verify access token. Please try again.');\r\n                    setShowModal(true);\r\n                }\r\n            } else if (requireHost) {\r\n                // Example: check Firebase user info (maybe from localStorage or a backend API)\r\n                const response = await authService.isHost({})\r\n                console.log(\"response.data\", response);\r\n                \r\n                if(!response) {\r\n                    setModalMessage(\"You don't have the right role to access this route.\");\r\n                    setShowModal(true);\r\n                    return;\r\n                }\r\n\r\n                setIsVerified(true);\r\n\r\n\r\n            } else {\r\n                // No protection required (optional)\r\n                setIsVerified(true);\r\n            }\r\n        };\r\n\r\n        verify();\r\n    }, [location.pathname, requireAccessToken, requireHost]);\r\n\r\n    const handleCloseModal = () => {\r\n        setShowModal(false);\r\n        navigate(-1);\r\n    };\r\n\r\n    if (showModal) {\r\n        return <AccessDeniedModal onClose={handleCloseModal} message={modalMessage} />;\r\n    }\r\n\r\n    if (!isVerified) {\r\n        return null; // or <LoadingSpinner />\r\n    }\r\n\r\n    return element;\r\n};\r\n\r\n\r\nexport default ProtectedRoute"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}