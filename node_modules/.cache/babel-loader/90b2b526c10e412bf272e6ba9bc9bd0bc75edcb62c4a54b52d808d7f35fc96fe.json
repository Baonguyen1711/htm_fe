{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport app from \"../firebase-config\";\nimport { signify } from 'react-signify';\nconst sUser = signify(null);\nconst useAuth = () => {\n  _s();\n  const [user, setUser] = useState(null); // Allow state to be either a User object or null\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null); // Error can be a string or null\n\n  const login = async (email, password) => {\n    const auth = getAuth(app);\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      setUser(userCredential.user);\n      console.log(\"userCredential\", userCredential);\n      return userCredential.user; // Return the authenticated user\n    } catch (err) {\n      const error = err; // Assert that 'err' is of type 'Error'\n      console.error(\"Error:\", error.message);\n    }\n  };\n  const logout = async () => {\n    const auth = getAuth();\n    try {\n      await auth.signOut();\n      setUser(null); // Reset the user state to null after logging out\n      console.log(\"User signed out\");\n    } catch (err) {\n      console.error(\"Error signing out:\", err.message);\n    }\n  };\n  const getToken = async () => {\n    if (user) {\n      console.log(\"user\", user);\n      try {\n        const token = await user.getIdToken(); // Retrieve the ID token\n        return token;\n      } catch (err) {\n        console.error(\"Error fetching token:\", err.message);\n        setError(err.message);\n      }\n    }\n    return null;\n  };\n  return {\n    user,\n    login,\n    logout,\n    getToken,\n    loading,\n    error\n  };\n};\n_s(useAuth, \"wJbgydKmzProwqZ2PuaEI7aaFyo=\");\nexport default useAuth;","map":{"version":3,"names":["useState","getAuth","signInWithEmailAndPassword","app","signify","sUser","useAuth","_s","user","setUser","loading","setLoading","error","setError","login","email","password","auth","userCredential","console","log","err","message","logout","signOut","getToken","token","getIdToken"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/hooks/useAuth.ts"],"sourcesContent":["import { useState } from \"react\";\r\nimport { getAuth, signInWithEmailAndPassword, User } from \"firebase/auth\";\r\nimport app from \"../firebase-config\";\r\nimport { signify } from 'react-signify';\r\n\r\nconst sUser = signify<User|null>(null)\r\n\r\nconst useAuth = () => {\r\n    const [user, setUser] = useState<User | null>(null); // Allow state to be either a User object or null\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState<string | null>(null); // Error can be a string or null\r\n\r\n    const login = async (email: string, password: string) => {\r\n        const auth = getAuth(app);\r\n        try {   \r\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n            setUser(userCredential.user)\r\n            console.log(\"userCredential\", userCredential)\r\n            return userCredential.user; // Return the authenticated user\r\n        } catch (err) {\r\n            const error = err as Error; // Assert that 'err' is of type 'Error'\r\n            console.error(\"Error:\", error.message);\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        const auth = getAuth();\r\n        try {\r\n            await auth.signOut();\r\n            setUser(null); // Reset the user state to null after logging out\r\n            console.log(\"User signed out\");\r\n        } catch (err: any) {\r\n            console.error(\"Error signing out:\", err.message);\r\n        }\r\n    };\r\n\r\n\r\n    const getToken = async () => {\r\n        if (user) {\r\n            console.log(\"user\", user)\r\n            try {\r\n                const token = await user.getIdToken(); // Retrieve the ID token\r\n                return token;\r\n            } catch (err: any) {\r\n                console.error(\"Error fetching token:\", err.message);\r\n                setError(err.message);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    \r\n    return { user, login, logout, getToken, loading, error };\r\n};\r\n\r\nexport default useAuth;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,EAAEC,0BAA0B,QAAc,eAAe;AACzE,OAAOC,GAAG,MAAM,oBAAoB;AACpC,SAASC,OAAO,QAAQ,eAAe;AAEvC,MAAMC,KAAK,GAAGD,OAAO,CAAY,IAAI,CAAC;AAEtC,MAAME,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAc,IAAI,CAAC,CAAC,CAAC;EACrD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC,CAAC,CAAC;;EAEzD,MAAMc,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACrD,MAAMC,IAAI,GAAGhB,OAAO,CAACE,GAAG,CAAC;IACzB,IAAI;MACA,MAAMe,cAAc,GAAG,MAAMhB,0BAA0B,CAACe,IAAI,EAAEF,KAAK,EAAEC,QAAQ,CAAC;MAC9EP,OAAO,CAACS,cAAc,CAACV,IAAI,CAAC;MAC5BW,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,cAAc,CAAC;MAC7C,OAAOA,cAAc,CAACV,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOa,GAAG,EAAE;MACV,MAAMT,KAAK,GAAGS,GAAY,CAAC,CAAC;MAC5BF,OAAO,CAACP,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACU,OAAO,CAAC;IAC1C;EACJ,CAAC;EAED,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvB,MAAMN,IAAI,GAAGhB,OAAO,CAAC,CAAC;IACtB,IAAI;MACA,MAAMgB,IAAI,CAACO,OAAO,CAAC,CAAC;MACpBf,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;MACfU,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAClC,CAAC,CAAC,OAAOC,GAAQ,EAAE;MACfF,OAAO,CAACP,KAAK,CAAC,oBAAoB,EAAES,GAAG,CAACC,OAAO,CAAC;IACpD;EACJ,CAAC;EAGD,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAIjB,IAAI,EAAE;MACNW,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEZ,IAAI,CAAC;MACzB,IAAI;QACA,MAAMkB,KAAK,GAAG,MAAMlB,IAAI,CAACmB,UAAU,CAAC,CAAC,CAAC,CAAC;QACvC,OAAOD,KAAK;MAChB,CAAC,CAAC,OAAOL,GAAQ,EAAE;QACfF,OAAO,CAACP,KAAK,CAAC,uBAAuB,EAAES,GAAG,CAACC,OAAO,CAAC;QACnDT,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;MACzB;IACJ;IACA,OAAO,IAAI;EACf,CAAC;EAGD,OAAO;IAAEd,IAAI;IAAEM,KAAK;IAAES,MAAM;IAAEE,QAAQ;IAAEf,OAAO;IAAEE;EAAM,CAAC;AAC5D,CAAC;AAACL,EAAA,CA9CID,OAAO;AAgDb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}