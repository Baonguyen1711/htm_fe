{"ast":null,"code":"import http from \"./http\";\nimport { processFile } from \"../utils/processFile.utils\";\nclass TestManageMentService {\n  constructor() {\n    this.baseEndpoint = void 0;\n    this.baseEndpoint = \"test\";\n  }\n  async getTestNameByUser() {\n    return await http.get(`${this.baseEndpoint}/user`, true);\n  }\n  async getTestContent(testName) {\n    return await http.get(`${this.baseEndpoint}/${testName}`, true);\n  }\n  async uploadTestToServer(testName, file) {\n    console.log(\"testName\");\n    const uploadedFile = processFile(file);\n    await http.post(`${this.baseEndpoint}/upload`, true, uploadedFile, {\n      \"testName\": testName\n    });\n  }\n}\nconst testManageMentService = new TestManageMentService();\nexport default testManageMentService;","map":{"version":3,"names":["http","processFile","TestManageMentService","constructor","baseEndpoint","getTestNameByUser","get","getTestContent","testName","uploadTestToServer","file","console","log","uploadedFile","post","testManageMentService"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/services/testManagement.service.ts"],"sourcesContent":["import http from \"./http\";\r\nimport { processFile } from \"../utils/processFile.utils\";\r\n\r\nclass TestManageMentService {\r\n    baseEndpoint: string\r\n\r\n    constructor() {\r\n        this.baseEndpoint = \"test\"\r\n    }\r\n\r\n    async getTestNameByUser() {\r\n        return await http.get(`${this.baseEndpoint}/user`, true)\r\n    }\r\n\r\n    async getTestContent(testName: string) {\r\n        return await http.get(`${this.baseEndpoint}/${testName}`, true)\r\n    }\r\n\r\n    async uploadTestToServer(testName: HTMLInputElement, file: File) {\r\n        console.log(\"testName\");\r\n        \r\n        const uploadedFile = processFile(file)\r\n\r\n        await http.post(\r\n            `${this.baseEndpoint}/upload`,\r\n            true, \r\n            uploadedFile,\r\n            {\"testName\": testName}\r\n        )\r\n    }\r\n}\r\n\r\nconst testManageMentService = new TestManageMentService()\r\nexport default testManageMentService"],"mappings":"AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,SAASC,WAAW,QAAQ,4BAA4B;AAExD,MAAMC,qBAAqB,CAAC;EAGxBC,WAAWA,CAAA,EAAG;IAAA,KAFdC,YAAY;IAGR,IAAI,CAACA,YAAY,GAAG,MAAM;EAC9B;EAEA,MAAMC,iBAAiBA,CAAA,EAAG;IACtB,OAAO,MAAML,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACF,YAAY,OAAO,EAAE,IAAI,CAAC;EAC5D;EAEA,MAAMG,cAAcA,CAACC,QAAgB,EAAE;IACnC,OAAO,MAAMR,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACF,YAAY,IAAII,QAAQ,EAAE,EAAE,IAAI,CAAC;EACnE;EAEA,MAAMC,kBAAkBA,CAACD,QAA0B,EAAEE,IAAU,EAAE;IAC7DC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IAEvB,MAAMC,YAAY,GAAGZ,WAAW,CAACS,IAAI,CAAC;IAEtC,MAAMV,IAAI,CAACc,IAAI,CACX,GAAG,IAAI,CAACV,YAAY,SAAS,EAC7B,IAAI,EACJS,YAAY,EACZ;MAAC,UAAU,EAAEL;IAAQ,CACzB,CAAC;EACL;AACJ;AAEA,MAAMO,qBAAqB,GAAG,IAAIb,qBAAqB,CAAC,CAAC;AACzD,eAAea,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}