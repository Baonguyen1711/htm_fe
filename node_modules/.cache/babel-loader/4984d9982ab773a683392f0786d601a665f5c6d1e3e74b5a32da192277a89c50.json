{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\pages\\\\Host\\\\Test\\\\ViewTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getTest, getTestByUserId } from './service';\n\n// Interface for an Exam/Question (as defined)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewTest = () => {\n  _s();\n  const [testList, setTestList] = useState([]); // Updated type to Test[]\n  const [selectedTestName, setSelectedTestName] = useState(\"\"); // Track selected test\n  const [exams, setExams] = useState([]); // Store questions for the selected test\n\n  // Fetch the list of tests on component mount\n  useEffect(() => {\n    const getTestList = async () => {\n      try {\n        const testList = await getTestByUserId(\"mnbvcxz\");\n        setTestList(testList);\n        // Optionally set the first test as default\n      } catch (error) {\n        console.error(\"Error fetching test list:\", error);\n      }\n    };\n    getTestList();\n  }, []);\n\n  // Fetch questions when a test is selected\n  // useEffect(() => {\n  //   const fetchTestQuestions = async () => {\n  //     if (selectedTestId) {\n  //       try {\n  //         const testData = await getTest(\"mnbvcxz\", selectedTestId); // Adjust params as needed\n  //         // Assuming getTest returns questions directly or a structure like { questions: Exam[] }\n  //         const questions = testData.questions || testData; // Adjust based on API response\n  //         setExams(questions);\n  //       } catch (error) {\n  //         console.error(\"Error fetching test questions:\", error);\n  //         setExams([]);\n  //       }\n  //     }\n  //   };\n\n  //   fetchTestQuestions();\n  // }, [selectedTestId]);\n\n  // Handle dropdown change\n  const handleTestChange = event => {\n    setSelectedTestName(event.target.value);\n  };\n  const handleViewTest = async () => {\n    if (!selectedTestName) {\n      alert(\"Please select a test first!\");\n      return;\n    }\n    try {\n      const testData = await getTest(selectedTestName, \"mnbvcxz\");\n      console.log(testData);\n    } catch (e) {\n      console.log(\"some error happens\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-6 shadow-lg bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Uploaded Exams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block text-lg mb-2\",\n      htmlFor: \"testSelect\",\n      children: \"Ch\\u1ECDn b\\u1ED9 \\u0111\\u1EC1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"testSelect\",\n      name: \"testSelect\",\n      className: \"border rounded p-2 w-full mb-4\",\n      value: selectedTestName,\n      onChange: handleTestChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"-- Select a Test --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), testList.map(test => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: test,\n        children: test\n      }, test, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n      children: \"View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), exams.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-auto w-full border-collapse border border-gray-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-gray-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border p-2\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border p-2\",\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border p-2\",\n            children: \"Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border p-2\",\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border p-2\",\n            children: \"Url\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: exams.map((exam, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2\",\n            children: exam.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2\",\n            children: exam.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2\",\n            children: exam.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2\",\n            children: exam.imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)]\n        }, exam.testId + index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"No questions available for this test.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewTest, \"DXqiCnY/ERr+K8F9o7exmJV/3Nw=\");\n_c = ViewTest;\nexport default ViewTest;\nvar _c;\n$RefreshReg$(_c, \"ViewTest\");","map":{"version":3,"names":["React","useEffect","useState","getTest","getTestByUserId","jsxDEV","_jsxDEV","ViewTest","_s","testList","setTestList","selectedTestName","setSelectedTestName","exams","setExams","getTestList","error","console","handleTestChange","event","target","value","handleViewTest","alert","testData","log","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","name","onChange","disabled","map","test","type","length","exam","index","question","answer","imageUrl","testId","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/pages/Host/Test/ViewTest.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getTest, getTestByUserId } from './service';\r\n\r\n// Interface for an Exam/Question (as defined)\r\ninterface Exam {\r\n  testId: string;\r\n  question: string;\r\n  answer: string;\r\n  type: string;\r\n  imageUrl: string;\r\n}\r\n\r\nconst ViewTest: React.FC = () => {\r\n  const [testList, setTestList] = useState<string[]>([]); // Updated type to Test[]\r\n  const [selectedTestName, setSelectedTestName] = useState<string>(\"\"); // Track selected test\r\n  const [exams, setExams] = useState<Exam[]>([]); // Store questions for the selected test\r\n\r\n  // Fetch the list of tests on component mount\r\n  useEffect(() => {\r\n    const getTestList = async () => {\r\n      try {\r\n        const testList = await getTestByUserId(\"mnbvcxz\");\r\n        setTestList(testList);\r\n        // Optionally set the first test as default\r\n      } catch (error) {\r\n        console.error(\"Error fetching test list:\", error);\r\n      }\r\n    };\r\n\r\n    getTestList();\r\n  }, []);\r\n\r\n  // Fetch questions when a test is selected\r\n  // useEffect(() => {\r\n  //   const fetchTestQuestions = async () => {\r\n  //     if (selectedTestId) {\r\n  //       try {\r\n  //         const testData = await getTest(\"mnbvcxz\", selectedTestId); // Adjust params as needed\r\n  //         // Assuming getTest returns questions directly or a structure like { questions: Exam[] }\r\n  //         const questions = testData.questions || testData; // Adjust based on API response\r\n  //         setExams(questions);\r\n  //       } catch (error) {\r\n  //         console.error(\"Error fetching test questions:\", error);\r\n  //         setExams([]);\r\n  //       }\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchTestQuestions();\r\n  // }, [selectedTestId]);\r\n\r\n  // Handle dropdown change\r\n  const handleTestChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedTestName(event.target.value);\r\n  };\r\n\r\n  const handleViewTest = async () => {\r\n    if (!selectedTestName) {\r\n      alert(\"Please select a test first!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const testData = await getTest(selectedTestName, \"mnbvcxz\")\r\n      console.log(testData)\r\n    } catch(e) {\r\n      console.log(\"some error happens\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card p-6 shadow-lg bg-white\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Uploaded Exams</h2>\r\n      <label className=\"block text-lg mb-2\" htmlFor=\"testSelect\">\r\n        Chọn bộ đề\r\n      </label>\r\n\r\n      <select\r\n        id=\"testSelect\"\r\n        name=\"testSelect\"\r\n        className=\"border rounded p-2 w-full mb-4\"\r\n        value={selectedTestName}\r\n        onChange={handleTestChange}\r\n      >\r\n        <option value=\"\" disabled>\r\n          -- Select a Test --\r\n        </option>\r\n        {testList.map((test) => (\r\n          <option key={test} value={test}>\r\n            {test}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n      >\r\n        View \r\n      </button>\r\n\r\n      {exams.length > 0 ? (\r\n        <table className=\"table-auto w-full border-collapse border border-gray-300\">\r\n          <thead>\r\n            <tr className=\"bg-gray-100\">\r\n              <th className=\"border p-2\">#</th>\r\n              <th className=\"border p-2\">Question</th>\r\n              <th className=\"border p-2\">Answer</th>\r\n              <th className=\"border p-2\">Type</th>\r\n              <th className=\"border p-2\">Url</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {exams.map((exam, index) => (\r\n              <tr key={exam.testId + index}> {/* Unique key using testId + index */}\r\n                <td className=\"border p-2\">{index + 1}</td>\r\n                <td className=\"border p-2\">{exam.question}</td>\r\n                <td className=\"border p-2\">{exam.answer}</td>\r\n                <td className=\"border p-2\">{exam.type}</td>\r\n                <td className=\"border p-2\">{exam.imageUrl}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p className=\"text-gray-500\">No questions available for this test.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewTest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}