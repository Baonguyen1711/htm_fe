{"ast":null,"code":"import axios from \"axios\";\nexport const submitAnswer = async (roomId, answer, stt, answerTime, playerName, avatar) => {\n  try {\n    const response = await axios.post(`http://localhost:8000/api/test/submit?room_id=${roomId}`, {\n      \"answer\": answer,\n      \"stt\": stt,\n      \"time\": Number(answerTime),\n      \"player_name\": playerName,\n      \"avatar\": avatar\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      withCredentials: true\n    });\n    if (response.status !== 200) {\n      throw new Error(`Failed to send answer, Status: ${response.status}`);\n    }\n\n    // Phân tích dữ liệu từ response JSON\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching test data:', error);\n    throw error; // Quăng lỗi để xử lý ở nơi gọi hàm\n  }\n};\nexport const setSelectedPacketToPlayer = async (roomId, packetName, testName, page, limit) => {\n  try {\n    let url = \"\";\n    if (page && limit) {\n      url = `http://localhost:8000/api/test/question?room_id=${roomId}&packet_name=${packetName}&test_name=${testName}&round=3&page=${page}&`;\n    }\n    const response = await axios.get(`http://localhost:8000/api/test/question?room_id=${roomId}&packet_name=${packetName}&test_name=${testName}&round=3`, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      withCredentials: true\n    });\n    if (response.status !== 200) {\n      throw new Error(`Failed to send answer, Status: ${response.status}`);\n    }\n\n    // Phân tích dữ liệu từ response JSON\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching test data:', error);\n    throw error; // Quăng lỗi để xử lý ở nơi gọi hàm\n  }\n};","map":{"version":3,"names":["axios","submitAnswer","roomId","answer","stt","answerTime","playerName","avatar","response","post","Number","headers","withCredentials","status","Error","data","error","console","setSelectedPacketToPlayer","packetName","testName","page","limit","url","get"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/layouts/services.ts"],"sourcesContent":["import { getAxiosAuthContext } from \"../context/authContext\";\r\nimport axios from \"axios\";\r\n\r\nexport const submitAnswer = async (roomId: string, answer: string, stt: string, answerTime: number, playerName: string, avatar: string): Promise<any> => {\r\n    try {\r\n      \r\n      const response = await axios.post(`http://localhost:8000/api/test/submit?room_id=${roomId}`,{\r\n        \"answer\": answer,\r\n        \"stt\": stt,\r\n        \"time\": Number(answerTime),\r\n        \"player_name\": playerName,\r\n        \"avatar\": avatar\r\n      } ,{\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        withCredentials: true\r\n      });\r\n  \r\n      if (response.status !== 200) {\r\n        throw new Error(`Failed to send answer, Status: ${response.status}`);\r\n      }\r\n  \r\n      // Phân tích dữ liệu từ response JSON\r\n      return response.data;\r\n  \r\n    } catch (error) {\r\n      console.error('Error fetching test data:', error);\r\n      throw error; // Quăng lỗi để xử lý ở nơi gọi hàm\r\n    }\r\n  };\r\n\r\n\r\nexport const setSelectedPacketToPlayer = async (roomId: string, packetName:string, testName: string, page?: number, limit?: number): Promise<any> => {\r\n    try {\r\n      let url  = \"\"\r\n      if (page && limit ) {\r\n        url = `http://localhost:8000/api/test/question?room_id=${roomId}&packet_name=${packetName}&test_name=${testName}&round=3&page=${page}&`\r\n      }\r\n      const response = await axios.get(`http://localhost:8000/api/test/question?room_id=${roomId}&packet_name=${packetName}&test_name=${testName}&round=3`,{\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        withCredentials: true\r\n      });\r\n  \r\n      if (response.status !== 200) {\r\n        throw new Error(`Failed to send answer, Status: ${response.status}`);\r\n      }\r\n  \r\n      // Phân tích dữ liệu từ response JSON\r\n      return response.data;\r\n  \r\n    } catch (error) {\r\n      console.error('Error fetching test data:', error);\r\n      throw error; // Quăng lỗi để xử lý ở nơi gọi hàm\r\n    }\r\n  };\r\n\r\n\r\n  \r\n\r\n  "],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,MAAc,EAAEC,MAAc,EAAEC,GAAW,EAAEC,UAAkB,EAAEC,UAAkB,EAAEC,MAAc,KAAmB;EACrJ,IAAI;IAEF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,iDAAiDP,MAAM,EAAE,EAAC;MAC1F,QAAQ,EAAEC,MAAM;MAChB,KAAK,EAAEC,GAAG;MACV,MAAM,EAAEM,MAAM,CAACL,UAAU,CAAC;MAC1B,aAAa,EAAEC,UAAU;MACzB,QAAQ,EAAEC;IACZ,CAAC,EAAE;MACDI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,eAAe,EAAE;IACnB,CAAC,CAAC;IAEF,IAAIJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAM,IAAIC,KAAK,CAAC,kCAAkCN,QAAQ,CAACK,MAAM,EAAE,CAAC;IACtE;;IAEA;IACA,OAAOL,QAAQ,CAACO,IAAI;EAEtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAGH,OAAO,MAAME,yBAAyB,GAAG,MAAAA,CAAOhB,MAAc,EAAEiB,UAAiB,EAAEC,QAAgB,EAAEC,IAAa,EAAEC,KAAc,KAAmB;EACjJ,IAAI;IACF,IAAIC,GAAG,GAAI,EAAE;IACb,IAAIF,IAAI,IAAIC,KAAK,EAAG;MAClBC,GAAG,GAAG,mDAAmDrB,MAAM,gBAAgBiB,UAAU,cAAcC,QAAQ,iBAAiBC,IAAI,GAAG;IACzI;IACA,MAAMb,QAAQ,GAAG,MAAMR,KAAK,CAACwB,GAAG,CAAC,mDAAmDtB,MAAM,gBAAgBiB,UAAU,cAAcC,QAAQ,UAAU,EAAC;MACnJT,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,eAAe,EAAE;IACnB,CAAC,CAAC;IAEF,IAAIJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAM,IAAIC,KAAK,CAAC,kCAAkCN,QAAQ,CAACK,MAAM,EAAE,CAAC;IACtE;;IAEA;IACA,OAAOL,QAAQ,CAACO,IAAI;EAEtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}