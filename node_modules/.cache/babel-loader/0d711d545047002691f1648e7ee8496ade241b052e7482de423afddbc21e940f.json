{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\pages\\\\User\\\\Round2\\\\UserRound2.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport ReactPlaceholder from \"react-placeholder\";\nimport \"react-placeholder/lib/reactPlaceholder.css\";\nimport { listenToGrid } from \"../../../services/firebaseServices\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserRound2() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(\"\");\n  useEffect(() => {\n    setTimeout(() => {\n      setData(\"loaded\");\n      setLoading(false);\n    }, 3000); // Simulating an API call\n  }, []);\n  useEffect(() => {\n    const unsubscribePlayers = listenToGrid(roomId, question => {});\n    return () => {\n      unsubscribePlayers();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ReactPlaceholder, {\n    type: \"text\",\n    rows: 3,\n    ready: !loading,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(UserRound2, \"q8wFU6l9TlFDrvoFWBecQ7aFXMM=\");\n_c = UserRound2;\nexport default UserRound2;\nvar _c;\n$RefreshReg$(_c, \"UserRound2\");","map":{"version":3,"names":["useEffect","useState","ReactPlaceholder","listenToGrid","Fragment","_Fragment","jsxDEV","_jsxDEV","UserRound2","_s","loading","setLoading","data","setData","setTimeout","unsubscribePlayers","roomId","question","type","rows","ready","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/pages/User/Round2/UserRound2.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport User from \"../../../layouts/User/User\";\r\nimport Round2 from \"../../../layouts/RoundBase/Round2\";\r\nimport ReactPlaceholder from \"react-placeholder\";\r\nimport \"react-placeholder/lib/reactPlaceholder.css\";\r\nimport { listenToGrid } from \"../../../services/firebaseServices\";\r\n\r\nfunction UserRound2() {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [data, setData] = useState<string>(\"\");\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setData(\"loaded\");\r\n            setLoading(false);\r\n        }, 3000); // Simulating an API call\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n            const unsubscribePlayers = listenToGrid(roomId, (question) => {\r\n\r\n                \r\n            });\r\n\r\n            return () => {\r\n                unsubscribePlayers();\r\n            };\r\n        }, []);\r\n\r\n    return (\r\n        <ReactPlaceholder\r\n            type=\"text\"\r\n            rows={3}\r\n            ready={!loading}\r\n        >\r\n            <>\r\n            </>\r\n            {/* <User\r\n                QuestionComponent={<Round2/>}\r\n            /> */}\r\n        </ReactPlaceholder>\r\n    )\r\n\r\n}\r\n\r\nexport default UserRound2;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAG3C,OAAOC,gBAAgB,MAAM,mBAAmB;AAChD,OAAO,4CAA4C;AACnD,SAASC,YAAY,QAAQ,oCAAoC;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAElE,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZc,UAAU,CAAC,MAAM;MACbD,OAAO,CAAC,QAAQ,CAAC;MACjBF,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAENX,SAAS,CAAC,MAAM;IACR,MAAMe,kBAAkB,GAAGZ,YAAY,CAACa,MAAM,EAAGC,QAAQ,IAAK,CAG9D,CAAC,CAAC;IAEF,OAAO,MAAM;MACTF,kBAAkB,CAAC,CAAC;IACxB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEV,oBACIR,OAAA,CAACL,gBAAgB;IACbgB,IAAI,EAAC,MAAM;IACXC,IAAI,EAAE,CAAE;IACRC,KAAK,EAAE,CAACV,OAAQ;IAAAW,QAAA,eAEhBd,OAAA,CAAAF,SAAA,mBACE;EAAC;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIW,CAAC;AAG3B;AAAChB,EAAA,CArCQD,UAAU;AAAAkB,EAAA,GAAVlB,UAAU;AAuCnB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}