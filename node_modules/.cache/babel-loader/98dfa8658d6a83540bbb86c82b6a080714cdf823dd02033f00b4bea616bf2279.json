{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\htm_fe\\\\src\\\\pages\\\\User\\\\Round2.tsx\",\n  _s = $RefreshSig$();\nimport Play from \"../../layouts/Play\";\nimport React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\n\n// Từ khóa chướng ngại vật\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mainKeyword = \"BÒCÔNGANH\";\nconst hintWords = [\"GIÓ\", \"HẠT GIỐNG\", \"DREAM\", \"THUỐC\", \"CÚC\", \"CHÂU KIỆT LUÂN\"];\nconst ObstacleQuestionBox = ({\n  mainKeyword,\n  hintWords\n}) => {\n  _s();\n  const [grid, setGrid] = useState({});\n\n  // Khởi tạo bảng chữ cái\n  useEffect(() => {\n    const newGrid = {};\n    const highlightIndexes = new Set();\n\n    // Chọn ngẫu nhiên vài chữ trong từ khóa chính để tô đậm\n    while (highlightIndexes.size < Math.floor(mainKeyword.length / 2)) {\n      highlightIndexes.add(Math.floor(Math.random() * mainKeyword.length));\n    }\n    const placeWord = (word, startX, startY, vertical) => {\n      for (let i = 0; i < word.length; i++) {\n        const x = vertical ? startX : startX + i;\n        const y = vertical ? startY + i : startY;\n        const position = `${x}-${y}`;\n        newGrid[position] = {\n          letter: word[i],\n          revealed: false,\n          highlight: highlightIndexes.has(i) && word === mainKeyword\n        };\n      }\n    };\n\n    // Đặt từ khóa chính (dọc)\n    placeWord(mainKeyword, 5, 1, true);\n\n    // Đặt các từ gợi ý (ngang / dọc)\n    hintWords.forEach((word, index) => {\n      const vertical = index % 2 === 0;\n      const startX = vertical ? 3 + index : 2;\n      const startY = vertical ? 3 : 5 + index;\n      placeWord(word, startX, startY, vertical);\n    });\n    setGrid(newGrid);\n  }, [mainKeyword, hintWords]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Ch\\u01B0\\u1EDBng Ng\\u1EA1i V\\u1EADt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-10 gap-1 border border-gray-400 p-2\",\n      children: [...Array(10)].map((_, row) => [...Array(10)].map((_, col) => {\n        const key = `${col}-${row}`;\n        const cell = grid[key];\n        return cell ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: clsx(\"w-8 h-8 flex items-center justify-center border border-gray-500 bg-gray-200\", {\n            \"text-black\": cell.revealed,\n            \"text-red-600 font-bold\": cell.revealed && cell.highlight\n          }),\n          onClick: () => setGrid(prev => ({\n            ...prev,\n            [key]: {\n              ...prev[key],\n              revealed: true\n            }\n          })),\n          children: cell.revealed ? cell.letter : \"\"\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-8 h-8\"\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(ObstacleQuestionBox, \"r0NCjBYlAtX/3HknyT68Yns7xBk=\");\n_c = ObstacleQuestionBox;\nfunction Round2() {\n  return /*#__PURE__*/_jsxDEV(Play, {\n    questionComponent: /*#__PURE__*/_jsxDEV(Crossword, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Round2;\nexport default Round2;\nvar _c, _c2;\n$RefreshReg$(_c, \"ObstacleQuestionBox\");\n$RefreshReg$(_c2, \"Round2\");","map":{"version":3,"names":["Play","React","useState","useEffect","clsx","jsxDEV","_jsxDEV","mainKeyword","hintWords","ObstacleQuestionBox","_s","grid","setGrid","newGrid","highlightIndexes","Set","size","Math","floor","length","add","random","placeWord","word","startX","startY","vertical","i","x","y","position","letter","revealed","highlight","has","forEach","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","row","col","key","cell","onClick","prev","_c","Round2","questionComponent","Crossword","_c2","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/htm_fe/src/pages/User/Round2.tsx"],"sourcesContent":["import Play from \"../../layouts/Play\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\n// Từ khóa chướng ngại vật\r\nconst mainKeyword = \"BÒCÔNGANH\";\r\nconst hintWords = [\"GIÓ\", \"HẠT GIỐNG\", \"DREAM\", \"THUỐC\", \"CÚC\", \"CHÂU KIỆT LUÂN\"];\r\n\r\ninterface CrosswordCell {\r\n    letter: string;\r\n    revealed: boolean;\r\n    highlight: boolean;\r\n}\r\n\r\ninterface CrosswordData {\r\n    [position: string]: CrosswordCell;\r\n}\r\n\r\ninterface ObstacleQuestionBoxProps {\r\n    mainKeyword: string;\r\n    hintWords: string[];\r\n}\r\n\r\nconst ObstacleQuestionBox: React.FC<ObstacleQuestionBoxProps> = ({ mainKeyword, hintWords }) => {\r\n    const [grid, setGrid] = useState<CrosswordData>({});\r\n\r\n    // Khởi tạo bảng chữ cái\r\n    useEffect(() => {\r\n        const newGrid: CrosswordData = {};\r\n        const highlightIndexes = new Set<number>();\r\n\r\n        // Chọn ngẫu nhiên vài chữ trong từ khóa chính để tô đậm\r\n        while (highlightIndexes.size < Math.floor(mainKeyword.length / 2)) {\r\n            highlightIndexes.add(Math.floor(Math.random() * mainKeyword.length));\r\n        }\r\n\r\n        const placeWord = (word: string, startX: number, startY: number, vertical: boolean) => {\r\n            for (let i = 0; i < word.length; i++) {\r\n                const x = vertical ? startX : startX + i;\r\n                const y = vertical ? startY + i : startY;\r\n                const position = `${x}-${y}`;\r\n\r\n                newGrid[position] = {\r\n                    letter: word[i],\r\n                    revealed: false,\r\n                    highlight: highlightIndexes.has(i) && word === mainKeyword,\r\n                };\r\n            }\r\n        };\r\n\r\n        // Đặt từ khóa chính (dọc)\r\n        placeWord(mainKeyword, 5, 1, true);\r\n\r\n        // Đặt các từ gợi ý (ngang / dọc)\r\n        hintWords.forEach((word, index) => {\r\n            const vertical = index % 2 === 0;\r\n            const startX = vertical ? 3 + index : 2;\r\n            const startY = vertical ? 3 : 5 + index;\r\n            placeWord(word, startX, startY, vertical);\r\n        });\r\n\r\n        setGrid(newGrid);\r\n    }, [mainKeyword, hintWords]);\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center p-4\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Chướng Ngại Vật</h2>\r\n            <div className=\"grid grid-cols-10 gap-1 border border-gray-400 p-2\">\r\n                {[...Array(10)].map((_, row) =>\r\n                    [...Array(10)].map((_, col) => {\r\n                        const key = `${col}-${row}`;\r\n                        const cell = grid[key];\r\n\r\n                        return cell ? (\r\n                            <button\r\n                                key={key}\r\n                                className={clsx(\r\n                                    \"w-8 h-8 flex items-center justify-center border border-gray-500 bg-gray-200\",\r\n                                    {\r\n                                        \"text-black\": cell.revealed,\r\n                                        \"text-red-600 font-bold\": cell.revealed && cell.highlight,\r\n                                    }\r\n                                )}\r\n                                onClick={() =>\r\n                                    setGrid((prev) => ({\r\n                                        ...prev,\r\n                                        [key]: { ...prev[key], revealed: true },\r\n                                    }))\r\n                                }\r\n                            >\r\n                                {cell.revealed ? cell.letter : \"\"}\r\n                            </button>\r\n                        ) : (\r\n                            <div key={key} className=\"w-8 h-8\"></div>\r\n                        );\r\n                    })\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nfunction Round2() {\r\n    return (\r\n        <Play\r\n            questionComponent= {<Crossword/>}\r\n            \r\n        />\r\n    )\r\n}\r\n\r\nexport default Round2"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}